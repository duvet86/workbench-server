{"version":3,"sources":["webpack:///./src/welcomePage/HelpPageCard.tsx","webpack:///./src/welcomePage/cardsData.ts","webpack:///./src/common/intervalSelector/types.ts","webpack:///./src/common/intervalSelector/api.ts","webpack:///./src/common/intervalSelector/utils.ts","webpack:///./src/common/intervalSelector/selector.ts","webpack:///./src/common/intervalSelector/IntervalTypeSelector.tsx","webpack:///./src/common/intervalSelector/intervalString/PreviousIntervalButton.tsx","webpack:///./src/common/intervalSelector/intervalString/NextIntervalButton.tsx","webpack:///./src/common/calendar/SlideTransition.tsx","webpack:///./src/common/calendar/CalendarHeader.tsx","webpack:///./src/common/calendar/utils.ts","webpack:///./src/common/calendar/Day.tsx","webpack:///./src/common/calendar/CalendarDays.tsx","webpack:///./src/common/calendar/CalendarYears.tsx","webpack:///./src/common/calendar/Calendar.tsx","webpack:///./src/common/calendar/DialogHeader.tsx","webpack:///./src/common/calendar/CalendarActions.tsx","webpack:///./src/common/calendar/CalendarContainer.tsx","webpack:///./src/common/intervalSelector/intervalString/DateOp.tsx","webpack:///./src/common/intervalSelector/intervalString/DateOpContainer.tsx","webpack:///./src/common/intervalSelector/intervalString/CalendarPeriod.tsx","webpack:///./src/common/intervalSelector/intervalString/CalendarPeriodContainer.tsx","webpack:///./src/common/intervalSelector/IntervalStringPickerContainer.tsx","webpack:///./src/common/intervalSelector/IntervalSelector.tsx","webpack:///./src/common/intervalSelector/IntervalSelectorContainer.tsx","webpack:///./src/welcomePage/WelcomePage.tsx"],"names":["HelpPageCard_styles","Object","styles","iconColor","color","HelpPageCard","classes","IconComponent","label","description","to","react_default","a","createElement","NavLink","Card_default","CardContent_default","className","Typography_default","variant","component","IntervalTypes","cardsData","id","icons","Build_default","Person_default","ContactPhone_default","Info_default","initIntervalAsync","initInterval","Promise","all","http","resolveIntervalAsync","IntervalType","then","arrayOfResponses","intervalTypes","reduce","res","val","interval","intervalType","offset","smartIntervalKey","intervalArray","getNextIntervalAsync","intervalString","nextInterval","getCalendarStringAsync","__awaiter","undefined","CALENDARPERIOD","map","Operation","Label","PeriodName","operation","value","CALENDARQUARTER","QuarterName","getDefaultInterval","DATEOP","parseDateOpDate","date","dayPart","getDate","dayString","toString","monthPart","getMonth","monthString","getFullYear","getDateOpStringDate","reselect_es","parts","substring","pipeIndex","indexOf","length","splitSmartInterval","Error","parseDateOpString","getIntervalTypes","intervalTypesObj","keys","type","intervalSelector_IntervalTypeSelector","spacing","unit","container","flexGrow","margin","options","onChange","FormControl_default","InputLabel_default","htmlFor","Select_default","inputProps","name","MenuItem_default","key","intervalString_PreviousIntervalButton","onClick","InputAdornment_default","position","IconButton_default","aria-label","KeyboardArrowLeft_default","NextIntervalButton","KeyboardArrowRight_default","calendar_SlideTransition","theme","slideTransition","transitions","create","duration","easing","transitionContainer","display","& > *","top","right","left","slideEnter-left","willChange","transform","slideEnter-right","slideEnterActive","transition","slideExit","slideExitActiveLeft-left","slideExitActiveLeft-right","children","transKey","slideDirection","TransitionGroup_default","classnames_default","CSSTransition_default","mountOnEnter","unmountOnExit","timeout","classNames","enter","enterActive","exit","exitActive","CalendarHeader","switchHeader","alignItems","width","height","textContainer","textAlign","iconButton","zIndex","backgroundColor","palette","background","paper","overflow","previousValid","nextValid","previous","next","disabled","ChevronLeft_default","ChevronRight_default","months","short","long","days","calendar_Day","weekDay","fontSize","typography","caption","text","primary","fontWeight","fontWeightMedium","padding","selectedDay","contrastText","main","&:hover","invalidInput","pointerEvents","active","dateDisabled","selectDate","[object Object]","dateA","dateB","sameDay","dateInput","event","selectDateInternal","calendar_CalendarDays","week","justifyContent","labelWeekDay","hint","lineHeight","tabIndex","Fragment","index","calendarFocus","year","Math","floor","month","firstDay","Date","daysInWeekInMonth","Array","getDay","fill","counter","day","generateMonthCalendar","weekIndex","calendar_CalendarYears","years","selectCalendarYear","yearIndex","yearInvalid","generateYearCalendar","currentYear","yi","Button_default","calendar_Calendar","calendarContainer","minHeight","isMobile","mode","previousMonthValid","nextMonthValid","previousMonth","nextMonth","monthIndexValid","showYearsCalendar","previousYearsValid","previousYears","nextYearsValid","nextYears","yearIndexValid","style","DialogHeader","secondary","title","calendar_CalendarActions","root","button","marginRight","setToday","onCancelClick","confirmDate","okToConfirm","DialogActions_default","size","calendar_CalendarContainer","Component","props","super","this","window","innerWidth","now","setState","selectedValue","_","onClose","state","handleCancelClick","min","max","ceil","currentIndex","getTime","isOpen","Dialog_default","scroll","fullScreen","open","maxWidth","intervalString_DateOp","intervalStringDate","onNextIntevalClick","onOpen","Input_default","startAdornment","endAdornment","intervalString_DateOpContainer","react","handleClickOpen","handleClose","onIntervalStringChange","intervalString_CalendarPeriod","calendarValues","handleNextIntevalClick","TextField_default","select","InputProps","intervalString_CalendarPeriodContainer","es","dispatch","dispatchHandleException","resp","lib","actions","isComponentUnmouted","e","intervalSelector_IntervalStringPickerContainer","IntervalString","CALENDARPERIODTODATE","intervalSelector_IntervalSelector","smartSelector","stringPickerContainer","initIntervalType","onIntervalTypeChange","onSmartKeyChange","smartIntervals","SmartIntervals","Key","intervalSelector_IntervalSelectorContainer","handleIntervalTypeChange","IntervalSelectorContainer_awaiter","resolvedInterval","target","assign","handleIntervalStringChange","prevState","handleSmartKeyChange","debounceNextIntervalAsync","acc","current","nextIntevalClick$","Observable","observer","pipe","share","initValue","debounced","debounceTime","buffer","subscribe","isLoading","LoadingContainer","WelcomePage_styles","WelcomePage_onChange","console","log","__webpack_exports__","Grid_default","item","xs","gutterBottom","_a","rest","__rest","md"],"mappings":"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","file":"6.bundle.js","sourcesContent":["import React, { SFC } from \"react\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { createStyles, withStyles, WithStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { SvgIconProps } from \"@material-ui/core/SvgIcon\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\ninterface IProps extends WithStyles<typeof styles> {\r\n  IconComponent: React.ComponentType<SvgIconProps>;\r\n  label: string;\r\n  description: string;\r\n  to: string;\r\n}\r\n\r\nconst styles = createStyles({\r\n  iconColor: {\r\n    color: \"initial\"\r\n  }\r\n});\r\n\r\nconst WelcomePageCard: SFC<IProps> = ({\r\n  classes,\r\n  IconComponent,\r\n  label,\r\n  description,\r\n  to\r\n}) => (\r\n  <NavLink to={to}>\r\n    <Card>\r\n      <CardContent>\r\n        <IconComponent className={classes.iconColor} />\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {label}\r\n        </Typography>\r\n        <Typography component=\"p\">{description}</Typography>\r\n      </CardContent>\r\n    </Card>\r\n  </NavLink>\r\n);\r\n\r\nexport default withStyles(styles)(WelcomePageCard);\r\n","import BuildIcon from \"@material-ui/icons/Build\";\r\nimport ContactPhoneIcon from \"@material-ui/icons/ContactPhone\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport { DashboardIcon, DataViewIcon } from \"common/icons\";\r\n\r\nconst linksList = [\r\n  {\r\n    id: 1,\r\n    IconComponent: DataViewIcon,\r\n    label: \"New Workbench\",\r\n    description:\r\n      \"This is where you can query, filter and manipulate your data.\",\r\n    to: \"/workbench/new\"\r\n  },\r\n  {\r\n    id: 2,\r\n    IconComponent: DashboardIcon,\r\n    label: \"New Pagebuilder\",\r\n    description: \"This is where you visualise your queries.\",\r\n    to: \"/pagebuilder/new\"\r\n  },\r\n  {\r\n    id: 3,\r\n    IconComponent: BuildIcon,\r\n    label: \"Configure Session\",\r\n    description: \"This is where you tune your workbench.\",\r\n    to: \"/\"\r\n  },\r\n  {\r\n    id: 4,\r\n    IconComponent: PersonIcon,\r\n    label: \"Profile\",\r\n    description: \"This is where you change your personal information.\",\r\n    to: \"/profile\"\r\n  },\r\n  {\r\n    id: 5,\r\n    IconComponent: ContactPhoneIcon,\r\n    label: \"Contact Us\",\r\n    description: \"For any trouble or info contact us here.\",\r\n    to: \"/\"\r\n  },\r\n  {\r\n    id: 6,\r\n    IconComponent: InfoIcon,\r\n    label: \"Product Info\",\r\n    description: \"Product version and info.\",\r\n    to: \"/\"\r\n  }\r\n];\r\n\r\nexport default linksList;\r\n","import { number } from \"prop-types\";\r\n\r\nexport const enum IntervalTypes {\r\n  ALLTIME = \"ALLTIME\",\r\n  BIHOURLY = \"BIHOURLY\",\r\n  DATEOPRANGE = \"DATEOPRANGE\",\r\n  DATEOPRANGESHIFT = \"DATEOPRANGESHIFT\",\r\n  DATETIMERANGE = \"DATETIMERANGE\",\r\n  HOUR = \"HOUR\",\r\n  WEEK = \"WEEK\",\r\n  DATEOP = \"DATEOP\",\r\n  CALENDARPERIOD = \"CALENDARPERIOD\",\r\n  CALENDARPERIODTODATE = \"CALENDARPERIODTODATE\",\r\n  CALENDARQUARTER = \"CALENDARQUARTER\",\r\n  CALENDARYER = \"CALENDARYER\",\r\n  SHIFTHOUR = \"SHIFTHOUR\"\r\n}\r\n\r\nexport interface ICalendarPeriodDtc {\r\n  Operation: string;\r\n  PeriodName: string;\r\n  Label: string;\r\n  PeriodStartDateOp: Date;\r\n  PeriodStartTimeUtc: Date;\r\n  PeriodEndDateOp: Date;\r\n  PeriodEndTimeUtc: Date;\r\n}\r\n\r\nexport interface ICalendarQuarterDtc {\r\n  Operation: string;\r\n  Label: string;\r\n  QuarterName: string;\r\n  FiscalYear: string;\r\n  QuarterIndex: number;\r\n  QuarterStartDateOp: Date;\r\n  QuarterStartTimeUtc: Date;\r\n  QuarterEndDateOp: Date;\r\n  QuarterEndTimeUtc: Date;\r\n}\r\n\r\nexport interface ICalendarString {\r\n  operation: string;\r\n  label: string;\r\n  value: string;\r\n}\r\n\r\nexport interface ISmartInterval {\r\n  smartIntervalKey: string | null;\r\n  intervalString: string | null;\r\n}\r\n\r\nexport interface IShiftDtc {\r\n  DateOp: Date;\r\n  Shift: string;\r\n  Description: string;\r\n  TimeStart: Date;\r\n  Order: number;\r\n  Label: string;\r\n  DurationMinutes: number;\r\n}\r\n\r\nexport interface IIntervalTypesDtc {\r\n  IntervalType: string;\r\n  Label: string;\r\n  SmartIntervals: Array<{ Key: string }>;\r\n}\r\n\r\nexport interface IIntervalDtc {\r\n  IntervalType: string;\r\n  IntervalString?: string;\r\n  intervalStringDate?: string;\r\n  smartIntervalKey?: string;\r\n\r\n  FullLabel?: string; // Not used.\r\n  Label?: string; // Not used.\r\n}\r\n\r\nexport interface ITypesAndInterval {\r\n  intervalTypes: { [key: string]: IIntervalTypesDtc };\r\n  interval: IIntervalDtc;\r\n}\r\n","import { getWithJwtAsync } from \"lib/http\";\r\nimport {\r\n  IIntervalDtc,\r\n  ITypesAndInterval,\r\n  IIntervalTypesDtc,\r\n  ICalendarPeriodDtc,\r\n  IntervalTypes,\r\n  ICalendarString,\r\n  ICalendarQuarterDtc\r\n} from \"common/intervalSelector/types\";\r\n\r\nexport const initIntervalAsync = (\r\n  initInterval: IIntervalDtc\r\n): Promise<ITypesAndInterval> =>\r\n  Promise.all([\r\n    getWithJwtAsync<IIntervalTypesDtc[]>(\"api/platform/intervaltypes\"),\r\n    resolveIntervalAsync(initInterval.IntervalType)\r\n  ]).then(arrayOfResponses => ({\r\n    intervalTypes: arrayOfResponses[0].reduce(\r\n      (res, val) => {\r\n        res[val.IntervalType] = val;\r\n        return res;\r\n      },\r\n      {} as { [key: string]: IIntervalTypesDtc }\r\n    ),\r\n    interval: arrayOfResponses[1]\r\n  }));\r\n\r\nexport const resolveIntervalAsync = (\r\n  intervalType: string,\r\n  offset: number = 0,\r\n  smartIntervalKey?: string\r\n) =>\r\n  getWithJwtAsync<IIntervalDtc[]>(\r\n    `api/platform/interval/${intervalType}/resolve?offset=${offset}${\r\n      smartIntervalKey != null ? `&smartIntervalKey=${smartIntervalKey}` : \"\"\r\n    }`\r\n  ).then(intervalArray => intervalArray[0]);\r\n\r\nexport const getNextIntervalAsync = (\r\n  intervalType: string,\r\n  intervalString: string,\r\n  offset: number\r\n) =>\r\n  getWithJwtAsync<IIntervalDtc>(\r\n    `api/platform/interval/${intervalType}/next?intervalString=${intervalString}&offset=${offset}`\r\n  ).then(nextInterval => nextInterval);\r\n\r\nexport const getCalendarStringAsync = async (\r\n  intervalType: IntervalTypes.CALENDARPERIOD | IntervalTypes.CALENDARQUARTER\r\n): Promise<ICalendarString[]> => {\r\n  switch (intervalType) {\r\n    case IntervalTypes.CALENDARPERIOD:\r\n      const periods = await getWithJwtAsync<ICalendarPeriodDtc[]>(\r\n        \"api/platform/calendarperiods\"\r\n      );\r\n      return periods.map(({ Operation, Label, PeriodName }) => ({\r\n        operation: Operation,\r\n        label: Label,\r\n        value: PeriodName\r\n      }));\r\n    case IntervalTypes.CALENDARQUARTER:\r\n      const quarters = await getWithJwtAsync<ICalendarQuarterDtc[]>(\r\n        \"api/platform/calendarquarters\"\r\n      );\r\n      return quarters.map(({ Operation, Label, QuarterName }) => ({\r\n        operation: Operation,\r\n        label: Label,\r\n        value: QuarterName\r\n      }));\r\n    default:\r\n      return [];\r\n  }\r\n};\r\n","import {\r\n  ISmartInterval,\r\n  IShiftDtc,\r\n  IIntervalDtc,\r\n  IntervalTypes\r\n} from \"common/intervalSelector/types\";\r\n\r\nexport const getDefaultInterval = () => ({\r\n  IntervalType: IntervalTypes.DATEOP\r\n});\r\n\r\nconst splitSmartInterval = (intervalString: string): ISmartInterval => {\r\n  if (intervalString.substring(0, 2) !== \"$$\") {\r\n    return {\r\n      smartIntervalKey: null,\r\n      intervalString\r\n    };\r\n  }\r\n\r\n  const pipeIndex = intervalString.indexOf(\"|\");\r\n\r\n  return {\r\n    smartIntervalKey:\r\n      pipeIndex === -1\r\n        ? intervalString.substring(2, intervalString.length)\r\n        : intervalString.substring(2, pipeIndex),\r\n    intervalString:\r\n      pipeIndex === -1\r\n        ? null\r\n        : intervalString.substring(pipeIndex + 1, intervalString.length)\r\n  };\r\n};\r\n\r\nexport const parseDateOpString = (intervalString: string): string => {\r\n  const parts = splitSmartInterval(intervalString);\r\n  if (parts.intervalString == null) {\r\n    throw new Error(\"parseDateOpString: intervalString cannot be null.\");\r\n  }\r\n\r\n  const year = parts.intervalString.substring(0, 4);\r\n  const month = parts.intervalString.substring(4, 6);\r\n  const day = parts.intervalString.substring(6, 8);\r\n\r\n  return `${year}-${month}-${day}`;\r\n};\r\n\r\nexport const parseDateOpDate = (date: Date): string => {\r\n  const dayPart = date.getDate();\r\n  let dayString = dayPart.toString();\r\n  if (dayPart <= 9) {\r\n    dayString = \"0\" + dayPart;\r\n  }\r\n\r\n  const monthPart = date.getMonth() + 1;\r\n  let monthString = monthPart.toString();\r\n  if (monthPart <= 9) {\r\n    monthString = \"0\" + monthPart;\r\n  }\r\n\r\n  return date.getFullYear().toString() + monthString + dayString;\r\n};\r\n\r\n// const parseHourlyString = (intervalString: string) => {\r\n//   const year = intervalString.substring(0, 4);\r\n//   const month = intervalString.substring(4, 6);\r\n//   const day = intervalString.substring(6, 8);\r\n//   const hour = intervalString.substring(9, 11);\r\n//   const minute = intervalString.substring(12, 14);\r\n\r\n//   return {\r\n//     dateValue: new Date(\r\n//       parseInt(year, 10),\r\n//       parseInt(month, 10),\r\n//       parseInt(day, 10)\r\n//     ),\r\n//     hourValue: hour,\r\n//     minuteValue: minute,\r\n//     label: day + \"/\" + month + \"/\" + year + \" \" + hour + \":\" + minute\r\n//   };\r\n// };\r\n\r\n// const parseDateOpRangeString = (intervalString: string) => {\r\n//   const parts = splitSmartInterval(intervalString);\r\n//   if (parts.intervalString == null) {\r\n//     throw new Error(\"parseDateOpString: intervalString cannot be null.\");\r\n//   }\r\n\r\n//   const year1 = parts.intervalString.substring(2, 6);\r\n//   const month1 = parts.intervalString.substring(6, 8);\r\n//   const day1 = parts.intervalString.substring(8, 10);\r\n\r\n//   const dateValue1 = new Date(\r\n//     parseInt(year1, 10),\r\n//     parseInt(month1, 10),\r\n//     parseInt(day1, 10)\r\n//   );\r\n\r\n//   const year2 = parts.intervalString.substring(11, 15);\r\n//   const month2 = parts.intervalString.substring(15, 17);\r\n//   const day2 = parts.intervalString.substring(17, 19);\r\n\r\n//   const dateValue2 = new Date(\r\n//     parseInt(year2, 10),\r\n//     parseInt(month2, 10),\r\n//     parseInt(day2, 10)\r\n//   );\r\n\r\n//   const dateValue1Label = year1 + \"/\" + month1 + \"/\" + day1;\r\n//   const dateValue2Label = year2 + \"/\" + month2 + \"/\" + day2;\r\n\r\n//   return {\r\n//     dateValue1,\r\n//     dateValue1Label,\r\n//     dateValue2,\r\n//     dateValue2Label\r\n//   };\r\n// };\r\n\r\n// const parseDateOpRangeShiftString = (\r\n//   intervalString: string,\r\n//   shifts1: IShiftDtc[],\r\n//   shifts2: IShiftDtc[]\r\n// ) => {\r\n//   const si = intervalString.indexOf(\"-\");\r\n\r\n//   const year1 = intervalString.substring(2, 6);\r\n//   const month1 = intervalString.substring(6, 8);\r\n//   const day1 = intervalString.substring(8, 10);\r\n//   let shift1 = intervalString.substring(11, si);\r\n//   if (shifts1.length > 0 && shifts1.find(s => s.Shift === shift1) != null) {\r\n//     shift1 = shifts1[0].Shift;\r\n//   }\r\n\r\n//   const dateValue1 = new Date(\r\n//     parseInt(year1, 10),\r\n//     parseInt(month1, 10),\r\n//     parseInt(day1, 10)\r\n//   );\r\n//   const shiftValue1 = shift1;\r\n\r\n//   const year2 = intervalString.substring(si + 1, si + 5);\r\n//   const month2 = intervalString.substring(si + 5, si + 7);\r\n//   const day2 = intervalString.substring(si + 7, si + 9);\r\n//   let shift2 = intervalString.substring(si + 10, intervalString.length);\r\n//   if (shifts2.length > 0 && shifts2.find(s => s.Shift === shift2) != null) {\r\n//     shift2 = shifts2[0].Shift;\r\n//   }\r\n\r\n//   const dateValue2 = new Date(\r\n//     parseInt(year2, 10),\r\n//     parseInt(month2, 10),\r\n//     parseInt(day2, 10)\r\n//   );\r\n//   const shiftValue2 = shift2;\r\n\r\n//   const dateValue1Label =\r\n//     year1 + \"/\" + month1 + \"/\" + day1 + \" (\" + shiftValue1 + \")\";\r\n//   const dateValue2Label =\r\n//     year2 + \"/\" + month2 + \"/\" + day2 + \" (\" + shiftValue2 + \")\";\r\n\r\n//   return {\r\n//     dateValue1,\r\n//     dateValue1Label,\r\n//     dateValue2,\r\n//     dateValue2Label\r\n//   };\r\n// };\r\n\r\n// const parseDateTimeRangeString = (intervalString: string) => {\r\n//   const year1 = intervalString.substring(3, 7);\r\n//   const month1 = intervalString.substring(7, 9);\r\n//   const day1 = intervalString.substring(9, 11);\r\n//   const hour1 = intervalString.substring(12, 14);\r\n//   const minute1 = intervalString.substring(15, 17);\r\n\r\n//   const dateValue1 = new Date(\r\n//     parseInt(year1, 10),\r\n//     parseInt(month1, 10),\r\n//     parseInt(day1, 10)\r\n//   );\r\n//   const hourValue1 = hour1;\r\n//   const minuteValue1 = minute1;\r\n\r\n//   const year2 = intervalString.substring(18, 22);\r\n//   const month2 = intervalString.substring(22, 24);\r\n//   const day2 = intervalString.substring(24, 26);\r\n//   const hour2 = intervalString.substring(27, 29);\r\n//   const minute2 = intervalString.substring(30, 32);\r\n\r\n//   const dateValue2 = new Date(\r\n//     parseInt(year2, 10),\r\n//     parseInt(month2, 10),\r\n//     parseInt(day2, 10)\r\n//   );\r\n//   const hourValue2 = hour2;\r\n//   const minuteValue2 = minute2;\r\n\r\n//   const dateValue1Label = year1 + \"/\" + month1 + \"/\" + day1;\r\n//   const dateValue2Label = year2 + \"/\" + month2 + \"/\" + day2;\r\n\r\n//   return {\r\n//     dateValue1,\r\n//     hourValue1,\r\n//     minuteValue1,\r\n//     dateValue1Label,\r\n//     dateValue2,\r\n//     hourValue2,\r\n//     minuteValue2,\r\n//     dateValue2Label\r\n//   };\r\n// };\r\n\r\n// const parseShiftString = (intervalString: string, shifts: IShiftDtc[]) => {\r\n//   const year = intervalString.substring(0, 4);\r\n//   const month = intervalString.substring(4, 6);\r\n//   const day = intervalString.substring(6, 8);\r\n//   let shift = intervalString.substring(9, intervalString.length);\r\n\r\n//   if (shifts.length > 0 && shifts.find(s => s.Shift === shift) != null) {\r\n//     shift = shifts[0].Shift;\r\n//   }\r\n\r\n//   return {\r\n//     dateValue: new Date(\r\n//       parseInt(year, 10),\r\n//       parseInt(month, 10),\r\n//       parseInt(day, 10)\r\n//     ),\r\n//     shiftValue: shift,\r\n//     label: day + \"/\" + month + \"/\" + year + \" (\" + shift + \")\"\r\n//   };\r\n// };\r\n","import { createSelector } from \"reselect\";\r\nimport { parseDateOpString } from \"common/intervalSelector/utils\";\r\nimport { IIntervalTypesDtc } from \"common/intervalSelector/types\";\r\n\r\nconst intervalStringSelector = (intervalString: string) => intervalString;\r\n\r\nexport const getDateOpStringDate = createSelector(\r\n  intervalStringSelector,\r\n  intervalString => parseDateOpString(intervalString)\r\n);\r\n\r\nconst intevalTypesObjSelector = (intervalTypesObj: {\r\n  [key: string]: IIntervalTypesDtc;\r\n}) => intervalTypesObj;\r\n\r\nexport const getIntervalTypes = createSelector(\r\n  intevalTypesObjSelector,\r\n  intervalTypesObj =>\r\n    Object.keys(intervalTypesObj).map(type => intervalTypesObj[type])\r\n);\r\n","import React, { ChangeEvent, SFC } from \"react\";\r\n\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  withStyles,\r\n  WithStyles\r\n} from \"@material-ui/core/styles\";\r\n\r\nimport { IIntervalTypesDtc } from \"common/intervalSelector/types\";\r\n\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\ninterface IProps extends WithStyles<typeof styles> {\r\n  options: IIntervalTypesDtc[];\r\n  value: string;\r\n  onChange: (event: ChangeEvent<HTMLSelectElement>) => void;\r\n}\r\n\r\nconst styles = ({ spacing: { unit } }: Theme) =>\r\n  createStyles({\r\n    container: {\r\n      flexGrow: 1,\r\n      margin: unit\r\n    }\r\n  });\r\n\r\nconst IntervalTypeSelector: SFC<IProps> = ({\r\n  classes,\r\n  options,\r\n  value,\r\n  onChange\r\n}) => (\r\n  <FormControl className={classes.container}>\r\n    <InputLabel htmlFor=\"interval\">Interval</InputLabel>\r\n    <Select\r\n      value={value}\r\n      onChange={onChange}\r\n      inputProps={{\r\n        name: \"interval\"\r\n      }}\r\n    >\r\n      {options.map(({ IntervalType, Label }) => (\r\n        <MenuItem key={IntervalType} value={IntervalType}>\r\n          {Label}\r\n        </MenuItem>\r\n      ))}\r\n    </Select>\r\n  </FormControl>\r\n);\r\n\r\nexport default withStyles(styles)(IntervalTypeSelector);\r\n","import React, { SFC } from \"react\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\n\r\nimport ArrowLeftIcon from \"@material-ui/icons/KeyboardArrowLeft\";\r\n\r\ninterface IProps {\r\n  onClick: (offset: number) => () => void;\r\n}\r\n\r\nconst PreviousIntervalButton: SFC<IProps> = ({ onClick }) => (\r\n  <InputAdornment position=\"start\">\r\n    <IconButton onClick={onClick(-1)} aria-label=\"Left\">\r\n      {<ArrowLeftIcon />}\r\n    </IconButton>\r\n  </InputAdornment>\r\n);\r\n\r\nexport default PreviousIntervalButton;\r\n","import React, { SFC } from \"react\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\n\r\nimport ArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\r\n\r\ninterface IProps {\r\n  onClick: (offset: number) => () => void;\r\n}\r\n\r\nconst PreviousIntervalButton: SFC<IProps> = ({ onClick }) => (\r\n  <InputAdornment position=\"end\">\r\n    <IconButton onClick={onClick(1)} aria-label=\"Right\">\r\n      {<ArrowRightIcon />}\r\n    </IconButton>\r\n  </InputAdornment>\r\n);\r\n\r\nexport default PreviousIntervalButton;\r\n","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport {\r\n  createStyles,\r\n  withStyles,\r\n  WithStyles,\r\n  Theme\r\n} from \"@material-ui/core/styles\";\r\nimport TransitionGroup from \"react-transition-group/TransitionGroup\";\r\nimport CSSTransition from \"react-transition-group/CSSTransition\";\r\n\r\ninterface IProps extends WithStyles<typeof styles> {\r\n  slideDirection: \"left\" | \"right\";\r\n  transKey: string;\r\n  className?: string;\r\n}\r\n\r\nconst animationDuration = 350;\r\n\r\nconst styles = (theme: Theme) => {\r\n  const slideTransition = theme.transitions.create(\"transform\", {\r\n    duration: animationDuration,\r\n    easing: \"cubic-bezier(0.35, 0.8, 0.4, 1)\"\r\n  });\r\n\r\n  return createStyles({\r\n    transitionContainer: {\r\n      display: \"block\",\r\n      position: \"relative\",\r\n      \"& > *\": {\r\n        position: \"absolute\",\r\n        top: 0,\r\n        right: 0,\r\n        left: 0\r\n      }\r\n    },\r\n    \"slideEnter-left\": {\r\n      willChange: \"transform\",\r\n      transform: \"translate(100%)\"\r\n    },\r\n    \"slideEnter-right\": {\r\n      willChange: \"transform\",\r\n      transform: \"translate(-100%)\"\r\n    },\r\n    slideEnterActive: {\r\n      transform: \"translate(0%)\",\r\n      transition: slideTransition\r\n    },\r\n    slideExit: {\r\n      transform: \"translate(0%)\"\r\n    },\r\n    \"slideExitActiveLeft-left\": {\r\n      willChange: \"transform\",\r\n      transform: \"translate(-100%)\",\r\n      transition: slideTransition\r\n    },\r\n    \"slideExitActiveLeft-right\": {\r\n      willChange: \"transform\",\r\n      transform: \"translate(100%)\",\r\n      transition: slideTransition\r\n    }\r\n  });\r\n};\r\n\r\nconst SlideTransition: React.SFC<IProps> = ({\r\n  classes,\r\n  className,\r\n  children,\r\n  transKey,\r\n  slideDirection\r\n}) => (\r\n  <TransitionGroup\r\n    className={classnames(classes.transitionContainer, className)}\r\n  >\r\n    <CSSTransition\r\n      key={transKey}\r\n      mountOnEnter\r\n      unmountOnExit\r\n      timeout={animationDuration}\r\n      classNames={{\r\n        enter: (classes as any)[`slideEnter-${slideDirection}`],\r\n        enterActive: classes.slideEnterActive,\r\n        exit: classes.slideExit,\r\n        exitActive: (classes as any)[`slideExitActiveLeft-${slideDirection}`]\r\n      }}\r\n    >\r\n      {children}\r\n    </CSSTransition>\r\n  </TransitionGroup>\r\n);\r\n\r\nexport default withStyles(styles)(SlideTransition);\r\n","import React from \"react\";\r\nimport {\r\n  createStyles,\r\n  withStyles,\r\n  WithStyles,\r\n  Theme\r\n} from \"@material-ui/core/styles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport SlideTransition from \"common/calendar/SlideTransition\";\r\n\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\n\r\nexport interface IProps extends WithStyles<typeof styles> {\r\n  previousValid: () => boolean;\r\n  nextValid: () => boolean;\r\n  previous: () => void;\r\n  next: () => void;\r\n  slideDirection: \"left\" | \"right\";\r\n  transKey: string;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    switchHeader: {\r\n      display: \"flex\",\r\n      alignItems: \"center\"\r\n    },\r\n    transitionContainer: {\r\n      width: \"100%\",\r\n      height: 33\r\n    },\r\n    textContainer: {\r\n      textAlign: \"center\"\r\n    },\r\n    iconButton: {\r\n      zIndex: 2,\r\n      backgroundColor: theme.palette.background.paper,\r\n      \"& > *\": {\r\n        // label\r\n        backgroundColor: theme.palette.background.paper,\r\n        \"& > *\": {\r\n          // icon\r\n          zIndex: 1,\r\n          overflow: \"visible\"\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\nconst CalendarControl: React.SFC<IProps> = ({\r\n  classes,\r\n  previousValid,\r\n  nextValid,\r\n  previous,\r\n  next,\r\n  slideDirection,\r\n  transKey,\r\n  children\r\n}) => (\r\n  <div className={classes.switchHeader}>\r\n    <IconButton\r\n      disabled={!previousValid()}\r\n      onClick={previous}\r\n      className={classes.iconButton}\r\n    >\r\n      <ChevronLeft />\r\n    </IconButton>\r\n\r\n    <SlideTransition\r\n      slideDirection={slideDirection}\r\n      transKey={transKey}\r\n      className={classes.transitionContainer}\r\n    >\r\n      <div className={classes.textContainer}>{children}</div>\r\n    </SlideTransition>\r\n\r\n    <IconButton\r\n      disabled={!nextValid()}\r\n      onClick={next}\r\n      className={classes.iconButton}\r\n    >\r\n      <ChevronRight />\r\n    </IconButton>\r\n  </div>\r\n);\r\n\r\nexport default withStyles(styles)(CalendarControl);\r\n","export const fillInDigit = (n: number, digit: number) => {\r\n  const max = Math.pow(10, digit);\r\n  let clean = (n % max).toString();\r\n  while (clean.length < digit) {\r\n    clean = \"0\" + clean;\r\n  }\r\n\r\n  return clean;\r\n};\r\n\r\nexport const months = [\r\n  {\r\n    short: \"Jan\",\r\n    long: \"January\"\r\n  },\r\n  {\r\n    short: \"Feb\",\r\n    long: \"February\"\r\n  },\r\n  {\r\n    short: \"Mar\",\r\n    long: \"March\"\r\n  },\r\n  {\r\n    short: \"Apr\",\r\n    long: \"April\"\r\n  },\r\n  {\r\n    short: \"May\",\r\n    long: \"May\"\r\n  },\r\n  {\r\n    short: \"Jun\",\r\n    long: \"June\"\r\n  },\r\n  {\r\n    short: \"Jul\",\r\n    long: \"July\"\r\n  },\r\n  {\r\n    short: \"Aug\",\r\n    long: \"August\"\r\n  },\r\n  {\r\n    short: \"Sep\",\r\n    long: \"September\"\r\n  },\r\n  {\r\n    short: \"Oct\",\r\n    long: \"October\"\r\n  },\r\n  {\r\n    short: \"Nov\",\r\n    long: \"November\"\r\n  },\r\n  {\r\n    short: \"Dec\",\r\n    long: \"December\"\r\n  }\r\n];\r\n\r\nexport const days = [\r\n  {\r\n    short: \"Sun\",\r\n    long: \"Sunday\"\r\n  },\r\n  {\r\n    short: \"Mon\",\r\n    long: \"Monday\"\r\n  },\r\n  {\r\n    short: \"Tue\",\r\n    long: \"Tuesday\"\r\n  },\r\n  {\r\n    short: \"Wed\",\r\n    long: \"Wednesday\"\r\n  },\r\n  {\r\n    short: \"Thu\",\r\n    long: \"Thursday\"\r\n  },\r\n  {\r\n    short: \"Fri\",\r\n    long: \"Friday\"\r\n  },\r\n  {\r\n    short: \"Sat\",\r\n    long: \"Saturday\"\r\n  }\r\n];\r\n\r\nexport const formatDate = (date: Date, format: string) =>\r\n  [\r\n    [\r\n      {\r\n        keyword: \"mm\",\r\n        word: fillInDigit(date.getMinutes(), 2)\r\n      },\r\n      {\r\n        keyword: \"m\",\r\n        word: date.getMinutes().toString()\r\n      }\r\n    ],\r\n    [\r\n      {\r\n        keyword: \"HH\",\r\n        word: fillInDigit(date.getHours(), 2)\r\n      },\r\n      {\r\n        keyword: \"H\",\r\n        word: date.getHours().toString()\r\n      }\r\n    ],\r\n    [\r\n      {\r\n        keyword: \"hh\",\r\n        word: fillInDigit(\r\n          date.getHours() > 12\r\n            ? date.getHours() - 12\r\n            : date.getHours() === 0\r\n              ? 12\r\n              : date.getHours(),\r\n          2\r\n        )\r\n      },\r\n      {\r\n        keyword: \"h\",\r\n        word: (date.getHours() > 12\r\n          ? date.getHours() - 12\r\n          : date.getHours() === 0\r\n            ? 12\r\n            : date.getHours()\r\n        ).toString()\r\n      }\r\n    ],\r\n    [\r\n      {\r\n        keyword: \"a\",\r\n        word: date.getHours() >= 12 ? \"pm\" : \"am\"\r\n      }\r\n    ],\r\n    [\r\n      {\r\n        keyword: \"dd\",\r\n        word: fillInDigit(date.getDate(), 2)\r\n      },\r\n      {\r\n        keyword: \"d\",\r\n        word: date.getDate().toString()\r\n      }\r\n    ],\r\n    [\r\n      {\r\n        keyword: \"MMMM\",\r\n        word: months[date.getMonth()].long\r\n      },\r\n      {\r\n        keyword: \"MMM\",\r\n        word: months[date.getMonth()].short\r\n      },\r\n      {\r\n        keyword: \"MM\",\r\n        word: fillInDigit(date.getMonth() + 1, 2)\r\n      },\r\n      {\r\n        keyword: \"M\",\r\n        word: (date.getMonth() + 1).toString()\r\n      }\r\n    ],\r\n    [\r\n      {\r\n        keyword: \"yyyy\",\r\n        word: fillInDigit(date.getFullYear(), 4)\r\n      },\r\n      {\r\n        keyword: \"yy\",\r\n        word: fillInDigit(date.getFullYear(), 2)\r\n      }\r\n    ],\r\n    [\r\n      {\r\n        keyword: \"EEE\",\r\n        word: days[date.getDay()].short\r\n      },\r\n      {\r\n        keyword: \"EEEE\",\r\n        word: days[date.getDay()].long\r\n      }\r\n    ]\r\n  ].reduce((dateString, formattings) => {\r\n    const foundFormatting = formattings.find(formatting =>\r\n      dateString.includes(formatting.keyword)\r\n    );\r\n    if (foundFormatting) {\r\n      return dateString.replace(foundFormatting.keyword, foundFormatting.word);\r\n    } else {\r\n      return dateString;\r\n    }\r\n  }, format);\r\n\r\nexport const sameDay = (dateA?: Date, dateB?: Date) => {\r\n  if (dateA !== undefined && dateB !== undefined) {\r\n    return (\r\n      dateA.getDate() === dateB.getDate() &&\r\n      dateA.getMonth() === dateB.getMonth() &&\r\n      dateA.getFullYear() === dateB.getFullYear()\r\n    );\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const generateYearCalendar = (index: number) => {\r\n  const years: number[][] = [];\r\n  let counter = 0;\r\n  for (let year = index * 18; year < (index + 1) * 18; year++) {\r\n    if (!years[Math.floor(counter / 3)]) {\r\n      years[Math.floor(counter / 3)] = [year];\r\n    } else {\r\n      years[Math.floor(counter / 3)] = [\r\n        ...years[Math.floor(counter / 3)],\r\n        year\r\n      ];\r\n    }\r\n    counter++;\r\n  }\r\n  return years;\r\n};\r\n\r\nexport const generateMonthCalendar = (index: number) => {\r\n  const calendarFocus = {\r\n    year: Math.floor(index / 12),\r\n    month: index % 12\r\n  };\r\n  const firstDay = new Date(calendarFocus.year, calendarFocus.month, 1);\r\n  const daysInWeekInMonth: Array<Array<Date | undefined>> = [\r\n    Array(firstDay.getDay()).fill(undefined)\r\n  ];\r\n  let counter = firstDay.getDay();\r\n  for (\r\n    let day = firstDay;\r\n    day.getMonth() === calendarFocus.month;\r\n    day = new Date(day.getFullYear(), day.getMonth(), day.getDate() + 1)\r\n  ) {\r\n    if (!daysInWeekInMonth[Math.floor(counter / 7)]) {\r\n      daysInWeekInMonth[Math.floor(counter / 7)] = [\r\n        new Date(day.getFullYear(), day.getMonth(), day.getDate())\r\n      ];\r\n    } else {\r\n      daysInWeekInMonth[Math.floor(counter / 7)] = [\r\n        ...daysInWeekInMonth[Math.floor(counter / 7)],\r\n        new Date(day.getFullYear(), day.getMonth(), day.getDate())\r\n      ];\r\n    }\r\n    counter++;\r\n  }\r\n  for (\r\n    let day = 6;\r\n    !daysInWeekInMonth[daysInWeekInMonth.length - 1][day];\r\n    day--\r\n  ) {\r\n    daysInWeekInMonth[daysInWeekInMonth.length - 1][day] = undefined;\r\n  }\r\n  return daysInWeekInMonth;\r\n};\r\n","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport {\r\n  createStyles,\r\n  withStyles,\r\n  WithStyles,\r\n  Theme\r\n} from \"@material-ui/core/styles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport { sameDay } from \"common/calendar/utils\";\r\n\r\nexport interface IProps extends WithStyles<typeof styles> {\r\n  active: Date;\r\n  dateDisabled?: (date: Date) => boolean;\r\n  selectDate: (date: Date, event: React.MouseEvent<HTMLElement>) => void;\r\n  date: Date | undefined;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    weekDay: {\r\n      width: 36,\r\n      height: 36,\r\n      fontSize: theme.typography.caption.fontSize,\r\n      margin: \"0 2px\",\r\n      color: theme.palette.text.primary,\r\n      fontWeight: theme.typography.fontWeightMedium,\r\n      padding: 0\r\n    },\r\n    selectedDay: {\r\n      color: theme.palette.primary.contrastText,\r\n      backgroundColor: theme.palette.primary.main,\r\n      fontWeight: theme.typography.fontWeightMedium,\r\n      \"&:hover\": {\r\n        backgroundColor: theme.palette.primary.main\r\n      }\r\n    },\r\n    invalidInput: {\r\n      pointerEvents: \"none\",\r\n      color: theme.palette.text.disabled\r\n    }\r\n  });\r\n\r\nconst Day: React.SFC<IProps> = ({\r\n  classes,\r\n  active,\r\n  dateDisabled,\r\n  selectDate,\r\n  date\r\n}) => {\r\n  const selectDateInternal = (dateInput: Date) => (\r\n    event: React.MouseEvent<HTMLElement>\r\n  ) => selectDate(dateInput, event);\r\n\r\n  return date ? (\r\n    <IconButton\r\n      className={classnames(classes.weekDay, {\r\n        [classes.selectedDay]: active && sameDay(date, active),\r\n        [classes.invalidInput]: dateDisabled && dateDisabled(date)\r\n      })}\r\n      disabled={dateDisabled && dateDisabled(date)}\r\n      onClick={selectDateInternal(date)}\r\n    >\r\n      {date.getDate()}\r\n    </IconButton>\r\n  ) : (\r\n    <div className={classes.weekDay} />\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(Day);\r\n","import React from \"react\";\r\nimport {\r\n  createStyles,\r\n  withStyles,\r\n  WithStyles,\r\n  Theme\r\n} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport Day from \"common/calendar/Day\";\r\nimport SlideTransition from \"common/calendar/SlideTransition\";\r\n\r\nimport { days, generateMonthCalendar } from \"common/calendar/utils\";\r\n\r\nexport interface IProps extends WithStyles<typeof styles> {\r\n  active: Date;\r\n  dateDisabled?: (date: Date) => boolean;\r\n  selectDate: (date: Date, event: React.MouseEvent<HTMLElement>) => void;\r\n  showYearsCalendar: () => void;\r\n  tabIndex: number;\r\n  slideDirection: \"left\" | \"right\";\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    week: {\r\n      height: 48,\r\n      display: \"flex\",\r\n      justifyContent: \"space-around\",\r\n      alignItems: \"center\"\r\n    },\r\n    labelWeekDay: {\r\n      width: 50,\r\n      color: theme.palette.text.hint,\r\n      lineHeight: \"48px\",\r\n      textAlign: \"center\"\r\n    }\r\n  });\r\n\r\nconst CalendarDays: React.SFC<IProps> = ({\r\n  classes,\r\n  active,\r\n  dateDisabled,\r\n  selectDate,\r\n  tabIndex,\r\n  slideDirection\r\n}) => (\r\n  <>\r\n    <div className={classes.week}>\r\n      {days.map(({ short }, index) => (\r\n        <Typography\r\n          key={\"weeklabel-\" + index}\r\n          className={classes.labelWeekDay}\r\n          variant=\"body1\"\r\n        >\r\n          {short}\r\n        </Typography>\r\n      ))}\r\n    </div>\r\n\r\n    <SlideTransition\r\n      slideDirection={slideDirection}\r\n      transKey={tabIndex.toString()}\r\n    >\r\n      <div>\r\n        {generateMonthCalendar(tabIndex).map((week, index) => (\r\n          <div className={classes.week} key={\"week-\" + index}>\r\n            {week.map((date, weekIndex) => (\r\n              <Day\r\n                key={\"day-\" + weekIndex}\r\n                active={active}\r\n                dateDisabled={dateDisabled}\r\n                selectDate={selectDate}\r\n                date={date}\r\n              />\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </SlideTransition>\r\n  </>\r\n);\r\n\r\nexport default withStyles(styles)(CalendarDays);\r\n","import React from \"react\";\r\nimport {\r\n  createStyles,\r\n  withStyles,\r\n  WithStyles,\r\n  Theme\r\n} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport SlideTransition from \"common/calendar/SlideTransition\";\r\n\r\nimport { generateYearCalendar } from \"common/calendar/utils\";\r\n\r\nexport interface IProps extends WithStyles<typeof styles> {\r\n  selectCalendarYear: (year?: number | undefined) => () => void;\r\n  yearIndex: number;\r\n  year: number;\r\n  yearInvalid: (currentYear: number) => boolean;\r\n  slideDirection: \"left\" | \"right\";\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    years: {\r\n      height: 48,\r\n      display: \"flex\",\r\n      justifyContent: \"space-around\",\r\n      alignItems: \"center\"\r\n    },\r\n    invalidInput: {\r\n      color: theme.palette.text.disabled\r\n    }\r\n  });\r\n\r\nconst CalendarYears: React.SFC<IProps> = ({\r\n  classes,\r\n  selectCalendarYear,\r\n  yearIndex,\r\n  year,\r\n  yearInvalid,\r\n  slideDirection\r\n}) => (\r\n  <SlideTransition\r\n    slideDirection={slideDirection}\r\n    transKey={yearIndex.toString()}\r\n  >\r\n    <div>\r\n      {generateYearCalendar(yearIndex).map((years, index) => (\r\n        <div className={classes.years} key={\"years-\" + index}>\r\n          {years.map((currentYear, yi) => (\r\n            <Button\r\n              variant={year === currentYear ? \"contained\" : \"text\"}\r\n              disabled={yearInvalid(currentYear)}\r\n              onClick={selectCalendarYear(currentYear)}\r\n              key={\"year-\" + yi}\r\n            >\r\n              <Typography\r\n                className={\r\n                  yearInvalid(currentYear) ? classes.invalidInput : undefined\r\n                }\r\n                variant=\"body1\"\r\n              >\r\n                {currentYear}\r\n              </Typography>\r\n            </Button>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  </SlideTransition>\r\n);\r\n\r\nexport default withStyles(styles)(CalendarYears);\r\n","import React from \"react\";\r\nimport {\r\n  createStyles,\r\n  withStyles,\r\n  WithStyles,\r\n  Theme\r\n} from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport CalendarHeader from \"common/calendar/CalendarHeader\";\r\nimport CalendarDays from \"common/calendar/CalendarDays\";\r\nimport CalendarYears from \"common/calendar/CalendarYears\";\r\n\r\nimport { months } from \"common/calendar/utils\";\r\n\r\nexport interface IProps extends WithStyles<typeof styles> {\r\n  okToConfirm?: boolean;\r\n  isMobile: boolean;\r\n  mode: \"year\" | \"month\";\r\n  tabIndex: number;\r\n  active: Date;\r\n  yearIndex: number;\r\n  year: number;\r\n  onCancelClick: (event: React.MouseEvent<HTMLElement>) => void;\r\n  dateDisabled?: (date: Date) => boolean;\r\n  previousMonthValid: () => boolean;\r\n  nextMonthValid: () => boolean;\r\n  previousMonth: () => void;\r\n  nextMonth: () => void;\r\n  monthIndexValid: (index: number) => boolean;\r\n  selectDate: (date: Date, event: React.MouseEvent<HTMLElement>) => void;\r\n  showYearsCalendar: () => void;\r\n  setToday: () => void;\r\n  confirmDate: (event: React.MouseEvent<HTMLElement>) => void;\r\n  previousYearsValid: () => boolean;\r\n  previousYears: () => void;\r\n  nextYearsValid: () => boolean;\r\n  nextYears: () => void;\r\n  yearIndexValid: (index: number) => boolean;\r\n  selectCalendarYear: (currentYear?: number | undefined) => () => void;\r\n  yearInvalid: (currentYear: number) => boolean;\r\n}\r\n\r\nconst styles = ({ spacing: { unit } }: Theme) =>\r\n  createStyles({\r\n    calendarContainer: {\r\n      minHeight: 375,\r\n      overflow: \"hidden\",\r\n      padding: `0 ${unit}px ${unit}px`\r\n    }\r\n  });\r\n\r\nconst Calendar: React.SFC<IProps> = ({\r\n  classes,\r\n  isMobile,\r\n  mode,\r\n  previousMonthValid,\r\n  nextMonthValid,\r\n  previousMonth,\r\n  nextMonth,\r\n  monthIndexValid,\r\n  tabIndex,\r\n  active,\r\n  dateDisabled,\r\n  selectDate,\r\n  showYearsCalendar,\r\n  previousYearsValid,\r\n  previousYears,\r\n  nextYearsValid,\r\n  nextYears,\r\n  yearIndexValid,\r\n  yearIndex,\r\n  selectCalendarYear,\r\n  year,\r\n  yearInvalid\r\n}) => (\r\n  <div\r\n    className={classes.calendarContainer}\r\n    style={{ height: isMobile ? \"100%\" : undefined }}\r\n  >\r\n    {mode === \"month\" ? (\r\n      <>\r\n        <CalendarHeader\r\n          previousValid={previousMonthValid}\r\n          nextValid={nextMonthValid}\r\n          previous={previousMonth}\r\n          next={nextMonth}\r\n          slideDirection=\"left\"\r\n          transKey={tabIndex.toString()}\r\n        >\r\n          <Button onClick={showYearsCalendar}>\r\n            {`${months[tabIndex % 12].long}, ${Math.floor(tabIndex / 12)}`}\r\n          </Button>\r\n        </CalendarHeader>\r\n        <div>\r\n          {monthIndexValid(tabIndex) ? (\r\n            <CalendarDays\r\n              active={active}\r\n              dateDisabled={dateDisabled}\r\n              selectDate={selectDate}\r\n              showYearsCalendar={showYearsCalendar}\r\n              tabIndex={tabIndex}\r\n              slideDirection=\"left\"\r\n            />\r\n          ) : (\r\n            <div key={tabIndex} />\r\n          )}\r\n        </div>\r\n      </>\r\n    ) : (\r\n      <>\r\n        <CalendarHeader\r\n          previousValid={previousYearsValid}\r\n          nextValid={nextYearsValid}\r\n          previous={previousYears}\r\n          next={nextYears}\r\n          slideDirection=\"right\"\r\n          transKey={yearIndex.toString()}\r\n        >\r\n          <Button onClick={selectCalendarYear()}>\r\n            {`${yearIndex * 18} - ${yearIndex * 18 + 17}`}\r\n          </Button>\r\n        </CalendarHeader>\r\n        {yearIndexValid(yearIndex) ? (\r\n          <CalendarYears\r\n            selectCalendarYear={selectCalendarYear}\r\n            yearIndex={yearIndex}\r\n            year={year}\r\n            yearInvalid={yearInvalid}\r\n            slideDirection=\"right\"\r\n          />\r\n        ) : (\r\n          <div key={yearIndex} />\r\n        )}\r\n      </>\r\n    )}\r\n  </div>\r\n);\r\n\r\nexport default withStyles(styles)(Calendar);\r\n","import React from \"react\";\r\nimport {\r\n  createStyles,\r\n  withStyles,\r\n  WithStyles,\r\n  Theme\r\n} from \"@material-ui/core/styles\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport { days, months } from \"common/calendar/utils\";\r\n\r\ninterface IProps extends WithStyles<typeof styles> {\r\n  value: Date;\r\n}\r\n\r\nconst styles = ({\r\n  palette: { primary, secondary },\r\n  typography: { fontWeightMedium }\r\n}: Theme) =>\r\n  createStyles({\r\n    title: {\r\n      backgroundColor: primary.main,\r\n      padding: \"24px 24px 20px\"\r\n    },\r\n    year: {\r\n      color: secondary.contrastText\r\n    },\r\n    day: {\r\n      color: secondary.contrastText,\r\n      fontWeight: fontWeightMedium\r\n    }\r\n  });\r\n\r\nconst CalendarDays: React.SFC<IProps> = ({ classes, value }) => (\r\n  <div className={classes.title}>\r\n    <Typography variant=\"h6\" className={classes.year}>\r\n      {value.getFullYear()}\r\n    </Typography>\r\n    <Typography variant=\"h4\" className={classes.day}>\r\n      {`${days[value.getDay()].short}, ${\r\n        months[value.getMonth()].short\r\n      } ${value.getDate()}`}\r\n    </Typography>\r\n  </div>\r\n);\r\n\r\nexport default withStyles(styles)(CalendarDays);\r\n","import React from \"react\";\r\nimport {\r\n  createStyles,\r\n  withStyles,\r\n  WithStyles,\r\n  Theme\r\n} from \"@material-ui/core/styles\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\n\r\nexport interface IProps extends WithStyles<typeof styles> {\r\n  okToConfirm?: boolean;\r\n  setToday: () => void;\r\n  onCancelClick: (event: React.MouseEvent<HTMLElement>) => void;\r\n  confirmDate: (event: React.MouseEvent<HTMLElement>) => void;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      justifyContent: \"space-between\"\r\n    },\r\n    button: {\r\n      marginRight: theme.spacing.unit\r\n    }\r\n  });\r\n\r\nconst CalendarActions: React.SFC<IProps> = ({\r\n  classes,\r\n  setToday,\r\n  onCancelClick,\r\n  confirmDate,\r\n  okToConfirm\r\n}) => (\r\n  <DialogActions className={classes.root}>\r\n    <Button size=\"small\" color=\"secondary\" onClick={setToday}>\r\n      Today\r\n    </Button>\r\n    <div>\r\n      <Button\r\n        className={classes.button}\r\n        size=\"small\"\r\n        variant=\"outlined\"\r\n        color=\"secondary\"\r\n        onClick={onCancelClick}\r\n      >\r\n        Cancel\r\n      </Button>\r\n      {okToConfirm && (\r\n        <Button\r\n          size=\"small\"\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={confirmDate}\r\n        >\r\n          Ok\r\n        </Button>\r\n      )}\r\n    </div>\r\n  </DialogActions>\r\n);\r\n\r\nexport default withStyles(styles)(CalendarActions);\r\n","import React from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nimport Calendar from \"common/calendar/Calendar\";\r\nimport DialogHeader from \"common/calendar/DialogHeader\";\r\nimport CalendarActions from \"common/calendar/CalendarActions\";\r\n\r\nexport interface IProps {\r\n  isOpen: boolean;\r\n  value: Date;\r\n  min?: Date;\r\n  max?: Date;\r\n  okToConfirm?: boolean;\r\n  onClose: (value: Date) => void;\r\n  dateDisabled?: (date: Date) => boolean;\r\n}\r\n\r\nexport interface IState {\r\n  mode: \"year\" | \"month\";\r\n  selectedValue: Date;\r\n  month: number;\r\n  year: number;\r\n  yearIndex: number;\r\n}\r\n\r\nclass CalendarContainer extends React.Component<IProps, IState> {\r\n  private isMobile = window.innerWidth <= 500;\r\n\r\n  constructor(props: IProps) {\r\n    super(props);\r\n\r\n    const now = new Date();\r\n    let date = new Date(now.getTime());\r\n    const { min, max } = props;\r\n    if (max && now.getTime() > max.getTime()) {\r\n      date = new Date(max.getTime());\r\n    } else if (min && now.getTime() < min.getTime()) {\r\n      date = new Date(min.getTime());\r\n    }\r\n\r\n    this.state = {\r\n      mode: \"month\",\r\n      selectedValue: props.value,\r\n      month: date.getMonth(),\r\n      year: date.getFullYear(),\r\n      yearIndex: Math.floor(date.getFullYear() / 18)\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    const { value, isOpen, dateDisabled, okToConfirm } = this.props;\r\n    const { selectedValue, year, month, mode, yearIndex } = this.state;\r\n    const active = okToConfirm ? selectedValue : value;\r\n    const tabIndex = year * 12 + month;\r\n\r\n    const selectCalendarYear = (currentYear?: number) => () =>\r\n      this.selectCalendarYear(currentYear);\r\n\r\n    return (\r\n      <Dialog\r\n        scroll=\"body\"\r\n        fullScreen={this.isMobile}\r\n        open={isOpen}\r\n        onClose={this.handleCancelClick}\r\n        maxWidth=\"xs\"\r\n      >\r\n        <DialogHeader value={selectedValue} />\r\n        <Calendar\r\n          isMobile={this.isMobile}\r\n          mode={mode}\r\n          previousMonthValid={this.previousMonthValid}\r\n          nextMonthValid={this.nextMonthValid}\r\n          previousMonth={this.previousMonth}\r\n          nextMonth={this.nextMonth}\r\n          monthIndexValid={this.monthIndexValid}\r\n          tabIndex={tabIndex}\r\n          active={active}\r\n          dateDisabled={dateDisabled}\r\n          selectDate={this.selectDate}\r\n          showYearsCalendar={this.showYearsCalendar}\r\n          setToday={this.setToday}\r\n          onCancelClick={this.handleCancelClick}\r\n          confirmDate={this.confirmDate}\r\n          previousYearsValid={this.previousYearsValid}\r\n          previousYears={this.previousYears}\r\n          nextYearsValid={this.nextYearsValid}\r\n          nextYears={this.nextYears}\r\n          yearIndexValid={this.yearIndexValid}\r\n          yearIndex={yearIndex}\r\n          selectCalendarYear={selectCalendarYear}\r\n          year={year}\r\n          yearInvalid={this.yearInvalid}\r\n        />\r\n        <CalendarActions\r\n          setToday={this.setToday}\r\n          onCancelClick={this.handleCancelClick}\r\n          confirmDate={this.confirmDate}\r\n          okToConfirm={okToConfirm}\r\n        />\r\n      </Dialog>\r\n    );\r\n  }\r\n\r\n  private setToday = () => {\r\n    const now = new Date();\r\n    this.setState({\r\n      selectedValue: now,\r\n      month: now.getMonth(),\r\n      year: now.getFullYear(),\r\n      yearIndex: Math.floor(now.getFullYear() / 18)\r\n    });\r\n  };\r\n\r\n  private selectDate = (value: Date, _: React.MouseEvent<HTMLElement>) => {\r\n    const { onClose, okToConfirm } = this.props;\r\n    if (okToConfirm) {\r\n      this.setState({ selectedValue: value });\r\n    } else {\r\n      onClose(value);\r\n    }\r\n  };\r\n\r\n  private confirmDate = (_: React.MouseEvent<HTMLElement>) => {\r\n    const { onClose } = this.props;\r\n    onClose(this.state.selectedValue);\r\n  };\r\n\r\n  private handleCancelClick = (_: React.MouseEvent<HTMLElement>) => {\r\n    const { onClose } = this.props;\r\n    onClose(this.props.value);\r\n  };\r\n\r\n  private showYearsCalendar = () => {\r\n    const { year } = this.state;\r\n    this.setState({\r\n      mode: \"year\",\r\n      yearIndex: Math.floor(year / 18)\r\n    });\r\n  };\r\n\r\n  private selectCalendarYear = (year?: number) => {\r\n    const { min, max } = this.props;\r\n    const { month } = this.state;\r\n    if (year) {\r\n      this.setState({\r\n        mode: \"month\",\r\n        year,\r\n        month:\r\n          min && month < min.getMonth() && year === min.getFullYear()\r\n            ? min.getMonth()\r\n            : max && month > max.getMonth() && year === max.getFullYear()\r\n              ? max.getMonth()\r\n              : month\r\n      });\r\n    } else {\r\n      this.setState({\r\n        mode: \"month\"\r\n      });\r\n    }\r\n  };\r\n\r\n  private previousYearsValid = () => {\r\n    const { min } = this.props;\r\n    const { yearIndex } = this.state;\r\n    return (\r\n      yearIndex >= 1 &&\r\n      (min === undefined || yearIndex >= Math.ceil(min.getFullYear() / 18))\r\n    );\r\n  };\r\n\r\n  private previousYears = () => {\r\n    const { yearIndex } = this.state;\r\n    this.setState({\r\n      yearIndex: yearIndex - 1\r\n    });\r\n  };\r\n\r\n  private nextYearsValid = () => {\r\n    const { max } = this.props;\r\n    const { yearIndex } = this.state;\r\n    return max === undefined || yearIndex < Math.floor(max.getFullYear() / 18);\r\n  };\r\n\r\n  private nextYears = () => {\r\n    const { yearIndex } = this.state;\r\n    this.setState({\r\n      yearIndex: yearIndex + 1\r\n    });\r\n  };\r\n\r\n  private yearInvalid = (currentYear: number) => {\r\n    const { min, max } = this.props;\r\n    const { year } = this.state;\r\n    return (\r\n      (min && currentYear < min.getFullYear()) ||\r\n      (max && currentYear > max.getFullYear()) ||\r\n      year === currentYear\r\n    );\r\n  };\r\n\r\n  private previousMonthValid = () => {\r\n    const { min } = this.props;\r\n    const { month, year } = this.state;\r\n    return (\r\n      min === undefined || (month > min.getMonth() || year > min.getFullYear())\r\n    );\r\n  };\r\n\r\n  private previousMonth = () => {\r\n    const { month, year } = this.state;\r\n    this.setState({\r\n      year: year - (month <= 0 ? 1 : 0),\r\n      month: month <= 0 ? 11 : month - 1\r\n    });\r\n  };\r\n\r\n  private nextMonthValid = () => {\r\n    const { max } = this.props;\r\n    const { month, year } = this.state;\r\n    return (\r\n      max === undefined || (month < max.getMonth() || year < max.getFullYear())\r\n    );\r\n  };\r\n\r\n  private nextMonth = () => {\r\n    const { month, year } = this.state;\r\n    this.setState({\r\n      year: year + (month >= 11 ? 1 : 0),\r\n      month: month >= 11 ? 0 : month + 1\r\n    });\r\n  };\r\n\r\n  private yearIndexValid = (index: number) => {\r\n    const { yearIndex } = this.state;\r\n    return index <= yearIndex + 2 && index >= yearIndex - 2;\r\n  };\r\n\r\n  private monthIndexValid = (index: number) => {\r\n    const { month, year } = this.state;\r\n    const currentIndex = year * 12 + month;\r\n    return index <= currentIndex + 2 && index >= currentIndex - 2;\r\n  };\r\n}\r\n\r\nexport default CalendarContainer;\r\n","import React, { SFC } from \"react\";\r\n\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Input from \"@material-ui/core/Input\";\r\n\r\nimport PreviousIntervalButton from \"common/intervalSelector/intervalString/PreviousIntervalButton\";\r\nimport NextIntervalButton from \"common/intervalSelector/intervalString/NextIntervalButton\";\r\nimport CalendarContainer from \"common/calendar/CalendarContainer\";\r\n\r\ninterface IProps {\r\n  className: string;\r\n  isOpen: boolean;\r\n  intervalStringDate: string;\r\n  onNextIntevalClick: (offset: number) => () => void;\r\n  onOpen: () => void;\r\n  onClose: (value: Date) => void;\r\n}\r\n\r\nconst DateOp: SFC<IProps> = ({\r\n  className,\r\n  intervalStringDate,\r\n  onNextIntevalClick,\r\n  isOpen,\r\n  onOpen,\r\n  onClose\r\n}) => (\r\n  <FormControl className={className}>\r\n    <Input\r\n      type=\"date\"\r\n      inputProps={{\r\n        name: \"interval-string\",\r\n        onClick: onOpen\r\n      }}\r\n      value={intervalStringDate}\r\n      startAdornment={<PreviousIntervalButton onClick={onNextIntevalClick} />}\r\n      endAdornment={<NextIntervalButton onClick={onNextIntevalClick} />}\r\n    />\r\n    <CalendarContainer\r\n      isOpen={isOpen}\r\n      value={new Date(intervalStringDate)}\r\n      onClose={onClose}\r\n    />\r\n  </FormControl>\r\n);\r\n\r\nexport default DateOp;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { parseDateOpDate } from \"common/intervalSelector/utils\";\r\n\r\nimport DateOp from \"common/intervalSelector/intervalString/DateOp\";\r\n\r\ninterface IProps {\r\n  className: string;\r\n  intervalStringDate: string;\r\n  onIntervalStringChange: (intervalString: string) => void;\r\n  onNextIntevalClick: (offset: number) => () => void;\r\n}\r\n\r\ninterface IState {\r\n  isOpen: boolean;\r\n}\r\n\r\nclass DateOpContainer extends Component<IProps, IState> {\r\n  public state: IState = {\r\n    isOpen: false\r\n  };\r\n\r\n  public render() {\r\n    const { className, intervalStringDate, onNextIntevalClick } = this.props;\r\n\r\n    return (\r\n      <DateOp\r\n        className={className}\r\n        intervalStringDate={intervalStringDate}\r\n        onNextIntevalClick={onNextIntevalClick}\r\n        isOpen={this.state.isOpen}\r\n        onOpen={this.handleClickOpen}\r\n        onClose={this.handleClose}\r\n      />\r\n    );\r\n  }\r\n\r\n  private handleClickOpen = () => {\r\n    this.setState({\r\n      isOpen: true\r\n    });\r\n  };\r\n\r\n  private handleClose = (value: Date) => {\r\n    this.props.onIntervalStringChange(parseDateOpDate(value));\r\n    this.setState({ isOpen: false });\r\n  };\r\n}\r\n\r\nexport default DateOpContainer;\r\n","import React, { SFC } from \"react\";\r\n\r\nimport { ICalendarString } from \"common/intervalSelector/types\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nimport PreviousIntervalButton from \"common/intervalSelector/intervalString/PreviousIntervalButton\";\r\nimport NextIntervalButton from \"common/intervalSelector/intervalString/NextIntervalButton\";\r\n\r\ninterface IProps {\r\n  className: string;\r\n  calendarValues: ICalendarString[];\r\n  intervalStringDate: string;\r\n  handleNextIntevalClick: (offset: number) => () => void;\r\n}\r\n\r\nconst CalendarPeriod: SFC<IProps> = ({\r\n  className,\r\n  calendarValues,\r\n  intervalStringDate,\r\n  handleNextIntevalClick\r\n}) => (\r\n  <TextField\r\n    select\r\n    className={className}\r\n    value={intervalStringDate}\r\n    InputProps={{\r\n      startAdornment: (\r\n        <PreviousIntervalButton onClick={handleNextIntevalClick} />\r\n      ),\r\n      endAdornment: <NextIntervalButton onClick={handleNextIntevalClick} />\r\n    }}\r\n  >\r\n    {calendarValues.map(({ label, value }) => (\r\n      <MenuItem key={value} value={value}>\r\n        {label}\r\n      </MenuItem>\r\n    ))}\r\n  </TextField>\r\n);\r\n\r\nexport default CalendarPeriod;\r\n","import React, { Component } from \"react\";\r\nimport { Dispatch } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { batchActions } from \"redux-batched-actions\";\r\n\r\nimport { IntervalTypes, ICalendarString } from \"common/intervalSelector/types\";\r\nimport { getCalendarStringAsync } from \"common/intervalSelector/api\";\r\nimport {\r\n  ErrorActions,\r\n  IErrorResponse,\r\n  handleException\r\n} from \"errorPage/actions\";\r\n\r\nimport CalendarPeriod from \"common/intervalSelector/intervalString/CalendarPeriod\";\r\n\r\ninterface IOwnProps {\r\n  className: string;\r\n  intervalType: IntervalTypes.CALENDARPERIOD | IntervalTypes.CALENDARQUARTER;\r\n  intervalStringDate: string;\r\n  handleNextIntevalClick: (offset: number) => () => void;\r\n}\r\n\r\ninterface IState {\r\n  calendarValues: ICalendarString[];\r\n}\r\n\r\ntype Props = ReturnType<typeof mapDispatchToProps> & IOwnProps;\r\n\r\nclass CalendarPeriodContainer extends Component<Props, IState> {\r\n  public state: IState = {\r\n    calendarValues: []\r\n  };\r\n\r\n  private isComponentUnmouted = false;\r\n\r\n  public async componentDidMount() {\r\n    const { dispatchHandleException, intervalType } = this.props;\r\n    try {\r\n      const calendarValues = await getCalendarStringAsync(intervalType);\r\n\r\n      if (!this.isComponentUnmouted) {\r\n        this.setState({\r\n          calendarValues\r\n        });\r\n      }\r\n    } catch (e) {\r\n      dispatchHandleException(e);\r\n    }\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    this.isComponentUnmouted = true;\r\n  }\r\n\r\n  public render() {\r\n    const { calendarValues } = this.state;\r\n    const {\r\n      className,\r\n      intervalStringDate,\r\n      handleNextIntevalClick\r\n    } = this.props;\r\n\r\n    return (\r\n      <CalendarPeriod\r\n        className={className}\r\n        calendarValues={calendarValues}\r\n        intervalStringDate={intervalStringDate}\r\n        handleNextIntevalClick={handleNextIntevalClick}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<ErrorActions>) => ({\r\n  dispatchHandleException: (resp: IErrorResponse) => {\r\n    dispatch(batchActions(handleException(resp)));\r\n  }\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(CalendarPeriodContainer);\r\n","import React, { SFC } from \"react\";\r\n\r\nimport { IIntervalDtc, IntervalTypes } from \"common/intervalSelector/types\";\r\nimport { getDateOpStringDate } from \"common/intervalSelector/selector\";\r\n\r\nimport DateOpContainer from \"common/intervalSelector/intervalString/DateOpContainer\";\r\nimport CalendarPeriodContainer from \"common/intervalSelector/intervalString/CalendarPeriodContainer\";\r\n\r\ninterface IProps {\r\n  className: string;\r\n  interval: IIntervalDtc;\r\n  onIntervalStringChange: (intervalString: string) => void;\r\n  onNextIntevalClick: (offset: number) => () => void;\r\n}\r\n\r\nconst IntervalStringPickerContainer: SFC<IProps> = ({\r\n  className,\r\n  interval,\r\n  onIntervalStringChange,\r\n  onNextIntevalClick\r\n}) => {\r\n  if (interval.IntervalString == null) {\r\n    return null;\r\n  }\r\n\r\n  let intervalStringDate = interval.IntervalString;\r\n  switch (interval.IntervalType) {\r\n    case IntervalTypes.DATEOP:\r\n    case IntervalTypes.CALENDARPERIODTODATE:\r\n      intervalStringDate = getDateOpStringDate(interval.IntervalString);\r\n      return (\r\n        <DateOpContainer\r\n          className={className}\r\n          intervalStringDate={intervalStringDate}\r\n          onIntervalStringChange={onIntervalStringChange}\r\n          onNextIntevalClick={onNextIntevalClick}\r\n        />\r\n      );\r\n    case IntervalTypes.CALENDARPERIOD:\r\n    case IntervalTypes.CALENDARQUARTER:\r\n      return (\r\n        <CalendarPeriodContainer\r\n          className={className}\r\n          intervalType={interval.IntervalType}\r\n          intervalStringDate={intervalStringDate}\r\n          handleNextIntevalClick={onNextIntevalClick}\r\n        />\r\n      );\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nexport default IntervalStringPickerContainer;\r\n","import React, { SFC, ChangeEvent } from \"react\";\r\n\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  withStyles,\r\n  WithStyles\r\n} from \"@material-ui/core/styles\";\r\n\r\nimport { getIntervalTypes } from \"common/intervalSelector/selector\";\r\nimport { IIntervalTypesDtc, IIntervalDtc } from \"common/intervalSelector/types\";\r\n\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nimport IntervalTypeSelector from \"common/intervalSelector/IntervalTypeSelector\";\r\nimport IntervalStringPickerContainer from \"./IntervalStringPickerContainer\";\r\n\r\ninterface IProps extends WithStyles<typeof styles> {\r\n  intervalTypes: { [key: string]: IIntervalTypesDtc };\r\n  initIntervalType: string;\r\n  interval: IIntervalDtc;\r\n  onIntervalTypeChange: (event: ChangeEvent<HTMLSelectElement>) => void;\r\n  onIntervalStringChange: (intervalString: string) => void;\r\n  onSmartKeyChange: (event: ChangeEvent<HTMLSelectElement>) => void;\r\n  onNextIntevalClick: (offset: number) => () => void;\r\n}\r\n\r\nconst styles = ({ spacing: { unit } }: Theme) =>\r\n  createStyles({\r\n    container: {\r\n      display: \"flex\",\r\n      width: \"100%\"\r\n    },\r\n    smartSelector: {\r\n      flexGrow: 1,\r\n      margin: unit\r\n    },\r\n    stringPickerContainer: {\r\n      flexGrow: 2,\r\n      margin: `${unit * 3}px ${unit}px ${unit}px ${unit}px`\r\n    }\r\n  });\r\n\r\nconst IntervalSelector: SFC<IProps> = ({\r\n  classes,\r\n  intervalTypes,\r\n  initIntervalType,\r\n  interval,\r\n  onIntervalTypeChange,\r\n  onIntervalStringChange,\r\n  onNextIntevalClick,\r\n  onSmartKeyChange\r\n}) => {\r\n  const smartIntervals = intervalTypes[initIntervalType].SmartIntervals;\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <IntervalTypeSelector\r\n        options={getIntervalTypes(intervalTypes)}\r\n        value={initIntervalType}\r\n        onChange={onIntervalTypeChange}\r\n      />\r\n      <IntervalStringPickerContainer\r\n        className={classes.stringPickerContainer}\r\n        interval={interval}\r\n        onIntervalStringChange={onIntervalStringChange}\r\n        onNextIntevalClick={onNextIntevalClick}\r\n      />\r\n      {smartIntervals.length > 0 && (\r\n        <FormControl className={classes.smartSelector}>\r\n          <InputLabel htmlFor=\"smartInterval\">Smart Date</InputLabel>\r\n          <Select\r\n            value={interval.smartIntervalKey || \"\"}\r\n            onChange={onSmartKeyChange}\r\n          >\r\n            <MenuItem value=\"\">\r\n              <em>None</em>\r\n            </MenuItem>\r\n            {smartIntervals.map(({ Key }) => (\r\n              <MenuItem key={Key} value={Key}>\r\n                {Key}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(IntervalSelector);\r\n","import React, { ChangeEvent, Component } from \"react\";\r\nimport { Dispatch } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { batchActions } from \"redux-batched-actions\";\r\nimport { Observable, Subscriber } from \"rxjs\";\r\nimport { debounceTime, buffer, share } from \"rxjs/operators\";\r\n\r\nimport { IIntervalDtc, IIntervalTypesDtc } from \"common/intervalSelector/types\";\r\nimport {\r\n  initIntervalAsync,\r\n  resolveIntervalAsync,\r\n  getNextIntervalAsync\r\n} from \"common/intervalSelector/api\";\r\nimport { getDefaultInterval } from \"common/intervalSelector/utils\";\r\nimport {\r\n  ErrorActions,\r\n  IErrorResponse,\r\n  handleException\r\n} from \"errorPage/actions\";\r\n\r\nimport LoadingContainer from \"common/loading/LoadingContainer\";\r\nimport IntervalSelector from \"common/intervalSelector/IntervalSelector\";\r\n\r\ninterface IOwnProps {\r\n  initValue?: IIntervalDtc;\r\n  onChange: (newInterval: IIntervalDtc) => void;\r\n}\r\n\r\ntype Props = ReturnType<typeof mapDispatchToProps> & IOwnProps;\r\n\r\ninterface IState {\r\n  intervalTypes: { [key: string]: IIntervalTypesDtc };\r\n  intervalType?: string;\r\n  interval?: IIntervalDtc;\r\n}\r\n\r\nclass IntervalSelectorContainer extends Component<Props, IState> {\r\n  private nextIntevalClick$: Observable<number>;\r\n  private handleNextIntevalClick?: (offset: number) => () => void;\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.nextIntevalClick$ = Observable.create(\r\n      (observer: Subscriber<number>) => {\r\n        this.handleNextIntevalClick = (offset: number) => () => {\r\n          observer.next(offset);\r\n        };\r\n      }\r\n    ).pipe(share());\r\n\r\n    this.state = {\r\n      intervalTypes: {},\r\n      intervalType: props.initValue && props.initValue.IntervalType,\r\n      interval: props.initValue\r\n    };\r\n  }\r\n\r\n  public async componentDidMount() {\r\n    const { initValue, onChange, dispatchHandleException } = this.props;\r\n\r\n    // Debouncing the next and previous button clicks.\r\n    const debounced = this.nextIntevalClick$.pipe(debounceTime(250));\r\n    this.nextIntevalClick$.pipe(buffer(debounced)).subscribe(offset => {\r\n      this.debounceNextIntervalAsync(offset);\r\n    });\r\n\r\n    try {\r\n      const { intervalTypes, interval } = await initIntervalAsync(\r\n        initValue || getDefaultInterval()\r\n      );\r\n\r\n      this.setState({\r\n        intervalTypes,\r\n        intervalType: interval.IntervalType,\r\n        interval\r\n      });\r\n\r\n      if (\r\n        initValue == null ||\r\n        (initValue &&\r\n          initValue.IntervalType === interval.IntervalType &&\r\n          initValue.IntervalString === interval.IntervalString)\r\n      ) {\r\n        onChange(interval);\r\n      }\r\n    } catch (e) {\r\n      dispatchHandleException(e);\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    const { intervalType, interval, intervalTypes } = this.state;\r\n\r\n    const isLoading =\r\n      interval == null ||\r\n      intervalType == null ||\r\n      this.handleNextIntevalClick == null;\r\n\r\n    return (\r\n      <LoadingContainer isLoading={isLoading}>\r\n        {!isLoading && (\r\n          <IntervalSelector\r\n            intervalTypes={intervalTypes}\r\n            initIntervalType={intervalType!}\r\n            interval={interval!}\r\n            onIntervalTypeChange={this.handleIntervalTypeChange}\r\n            onIntervalStringChange={this.handleIntervalStringChange}\r\n            onSmartKeyChange={this.handleSmartKeyChange}\r\n            onNextIntevalClick={this.handleNextIntevalClick!}\r\n          />\r\n        )}\r\n      </LoadingContainer>\r\n    );\r\n  }\r\n\r\n  private handleIntervalTypeChange = async (\r\n    event: ChangeEvent<HTMLSelectElement>\r\n  ) => {\r\n    try {\r\n      const resolvedInterval = await resolveIntervalAsync(event.target.value);\r\n\r\n      this.setState({\r\n        intervalType: event.target.value,\r\n        interval: {\r\n          ...resolvedInterval\r\n        }\r\n      });\r\n    } catch (e) {\r\n      this.props.dispatchHandleException(e);\r\n    }\r\n  };\r\n\r\n  private handleIntervalStringChange = (intervalString: string) => {\r\n    this.setState((prevState: IState) => {\r\n      if (prevState.interval != null) {\r\n        return {\r\n          interval: {\r\n            ...prevState.interval,\r\n            IntervalString: intervalString\r\n          }\r\n        };\r\n      }\r\n      return prevState;\r\n    });\r\n  };\r\n\r\n  private handleSmartKeyChange = async (\r\n    event: ChangeEvent<HTMLSelectElement>\r\n  ) => {\r\n    try {\r\n      const { interval } = this.state;\r\n      if (interval == null) {\r\n        return;\r\n      }\r\n      const resolvedInterval = await resolveIntervalAsync(\r\n        interval.IntervalType,\r\n        0,\r\n        event.target.value\r\n      );\r\n\r\n      this.setState({\r\n        interval: {\r\n          ...resolvedInterval,\r\n          smartIntervalKey: event.target.value\r\n        }\r\n      });\r\n    } catch (e) {\r\n      this.props.dispatchHandleException(e);\r\n    }\r\n  };\r\n\r\n  private debounceNextIntervalAsync = async (offset: number[]) => {\r\n    try {\r\n      const { interval } = this.state;\r\n      if (interval == null || interval.IntervalString == null) {\r\n        return;\r\n      }\r\n\r\n      const { IntervalType, IntervalString } = interval;\r\n      const nextInterval = await getNextIntervalAsync(\r\n        IntervalType,\r\n        IntervalString,\r\n        offset.reduce((acc, current) => acc + current, 0)\r\n      );\r\n\r\n      this.setState({\r\n        interval: {\r\n          ...nextInterval\r\n        }\r\n      });\r\n    } catch (e) {\r\n      this.props.dispatchHandleException(e);\r\n    }\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<ErrorActions>) => ({\r\n  dispatchHandleException: (resp: IErrorResponse) => {\r\n    dispatch(batchActions(handleException(resp)));\r\n  }\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(IntervalSelectorContainer);\r\n","import React, { SFC } from \"react\";\r\n\r\nimport { createStyles, withStyles, WithStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport HelpPageCard from \"welcomePage/HelpPageCard\";\r\n\r\nimport linksList from \"welcomePage/cardsData\";\r\nimport IntervalSelectorContainer from \"common/intervalSelector/IntervalSelectorContainer\";\r\n\r\nconst styles = createStyles({\r\n  container: {\r\n    padding: 25\r\n  }\r\n});\r\n\r\nconst onChange = (val: any) => {\r\n  // tslint:disable-next-line:no-console\r\n  console.log(val);\r\n};\r\n\r\nconst WelcomePage: SFC<WithStyles<typeof styles>> = ({ classes }) => (\r\n  <Grid container className={classes.container} spacing={16}>\r\n    <Grid item xs={12}>\r\n      <IntervalSelectorContainer onChange={onChange} />\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        Welcome\r\n      </Typography>\r\n    </Grid>\r\n    {linksList.map(({ id, ...rest }) => (\r\n      <Grid item md={4} xs={12} key={id}>\r\n        <HelpPageCard {...rest} />\r\n      </Grid>\r\n    ))}\r\n  </Grid>\r\n);\r\n\r\nexport default withStyles(styles)(WelcomePage);\r\n"],"sourceRoot":""}
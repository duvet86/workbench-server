{"version":3,"sources":["webpack:///./src/workbench/utils.ts","webpack:///./src/workbench/toolBar/WorkbenchToolbar.tsx","webpack:///./src/workbench/configSwitch/selectors.ts","webpack:///./src/workbench/query/selectors.ts","webpack:///./src/workbench/query/HelperText.tsx","webpack:///./src/workbench/query/StepperHeader.tsx","webpack:///./src/workbench/query/StepperHeaderContainer.tsx","webpack:///./src/common/select/Option.tsx","webpack:///./src/common/select/NoOption.tsx","webpack:///./src/common/select/SelectInput.tsx","webpack:///./src/common/select/SelectInputContainer.tsx","webpack:///./src/workbench/query/sourceSelector/SourceSelector.tsx","webpack:///./src/workbench/query/sourceSelector/SourceSelectorContainer.tsx","webpack:///./src/common/searchableList/Row.tsx","webpack:///./src/common/searchableList/SearchableList.tsx","webpack:///./src/common/searchableList/SearchableListContainer.tsx","webpack:///./src/workbench/query/columnSelector/ColumnsSelector.tsx","webpack:///./src/workbench/query/columnSelector/ColumnsSelectorContainer.tsx","webpack:///./src/workbench/query/constraintSelector/ConstraintSelector.tsx","webpack:///./src/workbench/query/constraintSelector/ConstraintSelectorContainer.tsx","webpack:///./src/workbench/query/ConfigActions.tsx","webpack:///./src/workbench/query/ConfigActionsContainer.tsx","webpack:///./src/workbench/query/QueryConfig.tsx","webpack:///./src/workbench/query/QueryConfigContainer.tsx","webpack:///./src/workbench/configSwitch/ConfigSwitch.tsx","webpack:///./src/workbench/configSwitch/ConfigSwitchContainer.tsx","webpack:///./src/workbench/WidgetPortFactory.ts","webpack:///./src/workbench/WidgetPortModel.ts","webpack:///./src/workbench/query/widget/QueryColumn.tsx","webpack:///./src/workbench/query/widget/QueryNodeWidget.tsx","webpack:///./src/workbench/query/widget/QueryNodeFactory.tsx","webpack:///./src/workbench/query/widget/QueryNodeModel.ts","webpack:///./src/workbench/filter/FilterNodeWidget.tsx","webpack:///./src/workbench/filter/FilterNodeFactory.tsx","webpack:///./src/workbench/filter/FilterNodeModel.ts","webpack:///./src/workbench/Canvas.tsx","webpack:///./src/workbench/CanvasContainer.tsx","webpack:///./src/workbench/Workbench.tsx"],"names":["DATA_TYPES","toolbarData","id","label","IconComponent","RestorePage_default","a","Save_default","Share_default","Undo_default","Redo_default","OpenWith_default","ArrowDownward_default","newWorkbenchLink","className","children","react_default","createElement","Link","to","toolBar_WorkbenchToolbar","Object","styles","spacing","root","position","right","marginRight","marginTop","zIndex","toolBar","minHeight","leftIcon","fill","unit","classes","Paper_default","Toolbar_default","disableGutters","map","Button_default","key","size","component","selectors_isDrawerOpen","reselect_es","state","configSwitchReducer","elementType","operatorsData","NONE","getDataServices","queryConfigReducer","dataServices","ItemId","Label","value","sort","b","elementIdSelector","elementId","querySelector","sessionReducer","queries","availableColumnsSelector","availableColumns","getAvailableColumns","filter","ac","Columns","c","ColumnName","includes","getQuery","getQueryColumns","getCompletedSteps","selectedQuery","length","TargetDataViewId","noteSupportedDataTypes","DateTimeValue","DateValue","TimeValue","getAvailableConstraintsObj","availableFilters","columns","filters","optionFilters","FilterName","filtersDic","reduce","res","f","columnsSelect","DataType","some","ToColumnName","optionColumns","columnsDic","availableConstraints","concat","opt","Constraints","qc","getQueryConstraints","constraint","constraintDsiplayValue","assign","INTERVALVALUE","Values","intervalType","intervalString","intervalLabel","TEXTVALUE","TEXTVALUEWITHLABEL","TEXTVALUEWITHMASK","TEXTVALUEWITHORDER","BOOLVALUE","INTVALUE","DOUBLEVALUE","getConstraintDisplayValue","query_HelperText","currentStep","title","text","Grid_default","item","xs","Card_default","CardHeader_default","avatar","Avatar_default","InfoOutlined_default","subheader","query_StepperHeader","gridTitle","width","backgroundColor","borderBottom","titleContainer","display","alignItems","marginBottom","stepper","padding","stepTitle","stepLabels","completedSteps","dispatchGoToStep","react","Typography_default","variant","Stepper_default","nonLinear","activeStep","index","Step_default","StepButton_default","onClick","stepIndex","handleStep","disabled","completed","StepperHeaderContainer_stepLabels","query_StepperHeaderContainer","es","dispatch","step","actions","[object Object]","this","props","select_Option","menuItem","labelContainer","style","OptionsIcon","option","handleClick","MenuItem_default","ListItemIcon_default","select_NoOption","color","noRowsRenderer","select_SelectInput","containerRef","inputLabel","helperText","options","handleInputClick","handleInputChange","noClear","handleClickClearSelected","handleMouseDownPassword","anchorEl","handleClose","handleOptionClick","ref","FormControl_default","fullWidth","InputLabel_default","htmlFor","Input_default","onChange","endAdornment","InputAdornment_default","IconButton_default","aria-label","onMouseDown","Clear_default","Menu_default","disableAutoFocus","disableAutoFocusItem","disableRestoreFocus","MenuListProps","disablePadding","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","open","onClose","current","dist_es","offsetWidth","height","Math","min","rowCount","rowHeight","rowRenderer","FormHelperText_default","SelectInputContainer_SelectInputContainer","Component","super","createRef","event","preventDefault","setState","undefined","currentTarget","toUpperCase","target","_","handleChange","selectedOption","find","SourceSelector_styles","iconColour","SourceSelector_OptionsIcon","Storage_default","sourceSelector_SourceSelector","targetDataViewId","handleChangeDataService","sourceSelector_SourceSelectorContainer","dispatchDataServicesRequest","dispatchUpdateDataService","workbench_actions","Row_styles","listItem","paddingLeft","listItemText","listItemTextPrimary","flexBasis","searchableList_Row","ListItem_default","divider","dense","button","ContainerComponent","SettingsApplications_default","ListItemText_default","primary","SearchableList_styles","list","paper","SearchableList_noRowsRenderer","searchableList_SearchableList","totItems","searchableItems","searchString","handleItemClick","handleClickClearIcon","List_default","disableHeight","SearchableList_rowRenderer","filterTextSelector","itemsSelector","items","SearchableListContainer_SearchableListContainer","filterList","filterText","filteredList","columnSelector_ColumnsSelector","listContainer","top","selectedColumns","handleAddQueryColumn","handleRemoveQueryColumn","container","KeyboardArrowRight_default","KeyboardArrowLeft_default","ColumnsSelectorContainer_availableColumnsSelector","selectedColumnsSelector","columnSelector_ColumnsSelectorContainer","dispatchAddQueryColumn","column","dispatchRemoveQueryColumn","columnName","availableColumnOptions","selectedColumnOptions","Aggregation","constraintSelector_ConstraintSelector","constraintTargetSelect","constraintIconColour","targetLabel","margin","typeSelect","valueInput","flexGrow","constraintIcon","availableConstraintsObj","queryConstraints","filterCapabilities","handledAddQueryConstraint","handledUpdateQueryConstraintType","handledUpdateQueryConstraintValues","handledRemoveQueryConstraint","FilterList_default","ConstraintId","FilterType","getConstraintLabel","Select_default","autoWidth","Type","n","autoFocus","Delete_default","constraintSelector_ConstraintSelectorContainer","dispatchFilterCapabilitiesRequest","dispatchAddQueryConstraint","dispatchUpdateQueryConstraintType","constraintId","constraintType","dispatchUpdateQueryConstraintValues","constraintValues","dispatchRemoveQueryConstraint","constraintColumn","constraintFilter","dataType","ConstraintName","valuesObj","values","valuesHint","vectorValues","SELECT","TEXTINPUTLIST","MULTISELECT","getConstraintVectorValue","query_ConfigActions","actionButtons","justifyContent","bottom","dispatchCloseConfig","query_ConfigActionsContainer","dispatchCloseQueryConfig","query_QueryConfig","isLoading","loading","Error","ElementId","getStepContent","query_QueryConfigContainer","configSwitch_ConfigSwitch","form","overflow","isDrawerOpen","Drawer_default","anchor","noValidate","autoComplete","alignContent","QUERY","FILTER","drawerByType","configSwitch_ConfigSwitchContainer","WidgetPortFactory_DiagramPortFactory","main","portModel","initialConfig","WidgetPortModel_WorkbenchPortModel","pos","serialize","data","engine","deSerialize","port","link","createLinkModel","setSourcePort","setTargetPort","QueryColumn_styles","itemIcon","whiteSpace","textOverflow","widget_QueryColumn","handleWheel","stopPropagation","widget_QueryNodeWidget","palette","background","operatorContainer","flexFlow","borderRadius","border","cursor","&:focus","outline","topPort","bottomPort","node","QueyLabel","getQueryInfo","name","noWrap","Divider_default","onWheel","QueryNodeWidget_rowRenderer","QueryNodeFactory_QueryNodeFactory","QueryNodeModel_QueryNodeModel","queryInfo","toString","addPort","setPosition","LayoutX","LayoutY","filter_FilterNodeWidget","body","maxWidth","filterType","textAlign","getFilterInfo","FilterNodeFactory_FilterNodeFactory","FilterNodeModel_FilterNodeModel","filterInfo","Canvas_styles","canvasContainer","canvas","Canvas","diagramEngine","handleDragOver","handleDrop","onDrop","onDragOver","maxNumberPointsPerLink","allowLooseLinks","workbench_CanvasContainer","_a","__rest","dispatchSessionRequest","dataViewId","dispatchAddQuery","x","y","graph","operatorServiceId","dataTransfer","getData","points","getRelativeMousePoint","NextElementId","installDefaultFactories","registerPortFactory","registerNodeFactory","activeModel","setDiagramModel","match","params","prevProps","currentSession","session","prevSession","SessionId","queryNodes","keys","filterNodes","addAll","links","connections","connection","nodeFrom","getNode","FromElementId","nodeTo","ToElementId","portFrom","getPort","portTo","push","Workbench_styles","workbench","backgroundImage","backgroundSize","__webpack_exports__"],"mappings":"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","file":"6.bundle.js","sourcesContent":["import { IConstraint } from \"workbench/types\";\r\nimport { IOption } from \"common/select/SelectInputContainer\";\r\n\r\nimport NewIcon from \"@material-ui/icons/RestorePage\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport UndoIcon from \"@material-ui/icons/Undo\";\r\nimport RedoIcon from \"@material-ui/icons/Redo\";\r\nimport OpenWithIcon from \"@material-ui/icons/OpenWith\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\n\r\ntype QueryContraint = IConstraint & IOption;\r\n\r\nexport enum DATA_TYPES {\r\n  NOTSPECIFIED = \"NotSpecified\",\r\n  TEXTVALUE = \"TextValue\",\r\n  BOOLVALUE = \"BoolValue\",\r\n  INTERVALVALUE = \"Interval\",\r\n  INTVALUE = \"IntValue\",\r\n  DOUBLEVALUE = \"DoubleValue\",\r\n  TEXTVALUEWITHLABEL = \"TextValueWithLabel\",\r\n  TEXTVALUEWITHMASK = \"TextValueWithMask\",\r\n  TEXTVALUEWITHORDER = \"TextValueWithOrder\",\r\n  SELECT = \"Select\",\r\n  TEXTINPUTLIST = \"TextInputList\",\r\n  MULTISELECT = \"MultiSelect\"\r\n}\r\n\r\nexport const toolbarData = [\r\n  {\r\n    id: 0,\r\n    label: \"New\",\r\n    IconComponent: NewIcon\r\n  },\r\n  {\r\n    id: 1,\r\n    label: \"Save\",\r\n    IconComponent: SaveIcon\r\n  },\r\n  {\r\n    id: 2,\r\n    label: \"Save As\",\r\n    IconComponent: SaveIcon\r\n  },\r\n  {\r\n    id: 3,\r\n    label: \"Share\",\r\n    IconComponent: ShareIcon\r\n  },\r\n  {\r\n    id: 4,\r\n    label: \"Undo\",\r\n    IconComponent: UndoIcon\r\n  },\r\n  {\r\n    id: 5,\r\n    label: \"Redo\",\r\n    IconComponent: RedoIcon\r\n  },\r\n  {\r\n    id: 6,\r\n    label: \"Layout\",\r\n    IconComponent: OpenWithIcon\r\n  },\r\n  {\r\n    id: 7,\r\n    label: \"Export Graph\",\r\n    IconComponent: ArrowDownwardIcon\r\n  }\r\n];\r\n\r\nexport function getConstraintDisplayValue(constraint: IConstraint) {\r\n  const constraintDsiplayValue: QueryContraint = Object.assign(\r\n    {\r\n      label: constraint.ColumnName,\r\n      value: \"\"\r\n    },\r\n    constraint\r\n  );\r\n  switch (constraint.DataType) {\r\n    case DATA_TYPES.INTERVALVALUE:\r\n      constraintDsiplayValue.value = constraint.Values && {\r\n        intervalType: constraint.Values[0][0],\r\n        intervalString: constraint.Values[0][1],\r\n        intervalLabel: constraint.Values[0][2]\r\n      };\r\n      break;\r\n\r\n    case DATA_TYPES.TEXTVALUE:\r\n    case DATA_TYPES.TEXTVALUEWITHLABEL:\r\n    case DATA_TYPES.TEXTVALUEWITHMASK:\r\n    case DATA_TYPES.TEXTVALUEWITHORDER:\r\n    case DATA_TYPES.BOOLVALUE:\r\n    case DATA_TYPES.INTVALUE:\r\n    case DATA_TYPES.DOUBLEVALUE:\r\n      constraintDsiplayValue.value = constraint.Values\r\n        ? constraint.Values[0][0]\r\n        : \"\";\r\n      break;\r\n    // case DATA_TYPES.SELECT:\r\n    //   c.displayValue = {\r\n    //     valuesHint: valuesHint ? valuesHint : \"NoHint\",\r\n    //     values: values,\r\n    //     valuesDisplayStringsPreview: valuesDisplayStringsPreview\r\n    //   };\r\n    //   break;\r\n    // case DATA_TYPES.TEXTINPUTLIST:\r\n    // case DATA_TYPES.MULTISELECT:\r\n    //   c.displayValue = {\r\n    //     valuesHint: valuesHint ? valuesHint : \"SelectedAll\",\r\n    //     values: values,\r\n    //     valuesDisplayStringsPreview: valuesDisplayStringsPreview\r\n    //   };\r\n    //   break;\r\n    default:\r\n      constraintDsiplayValue.value = \"\";\r\n      break;\r\n  }\r\n\r\n  return constraintDsiplayValue;\r\n}\r\n\r\ninterface IConstraintVectorValue {\r\n  vectorValues: object[][];\r\n  valuesHint?: string;\r\n}\r\n\r\nexport function getConstraintVectorValue(\r\n  dataType: string,\r\n  values: any, // Fix me.\r\n  valuesHint?: string\r\n) {\r\n  const valuesObj: IConstraintVectorValue = {\r\n    vectorValues: [[values]],\r\n    valuesHint: \"NoHint\"\r\n  };\r\n\r\n  switch (dataType) {\r\n    case DATA_TYPES.INTERVALVALUE:\r\n      valuesObj.vectorValues = [\r\n        [values.intervalType, values.intervalString, values.intervalLabel]\r\n      ];\r\n      break;\r\n\r\n    case DATA_TYPES.SELECT:\r\n    case DATA_TYPES.TEXTINPUTLIST:\r\n    case DATA_TYPES.MULTISELECT:\r\n      valuesObj.vectorValues = values.values;\r\n      valuesObj.valuesHint = valuesHint;\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return valuesObj;\r\n}\r\n","import React, { SFC } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  withStyles,\r\n  WithStyles\r\n} from \"@material-ui/core/styles\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Button, { ButtonProps } from \"@material-ui/core/Button\";\r\n\r\nimport { toolbarData } from \"workbench/utils\";\r\n\r\nconst styles = ({ spacing }: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      position: \"absolute\",\r\n      right: 0,\r\n      marginRight: 10,\r\n      marginTop: 10,\r\n      zIndex: 1\r\n    },\r\n    toolBar: {\r\n      minHeight: 0\r\n    },\r\n    leftIcon: {\r\n      fill: \"#bdbdbd\",\r\n      marginRight: spacing.unit\r\n    }\r\n  });\r\n\r\nconst newWorkbenchLink = ({ className, children }: ButtonProps) => (\r\n  <Link className={className} to=\"/workbench/new\">\r\n    {children}\r\n  </Link>\r\n);\r\n\r\nconst WorkbenchToolbar: SFC<WithStyles<typeof styles>> = ({ classes }) => (\r\n  <Paper className={classes.root}>\r\n    <Toolbar className={classes.toolBar} disableGutters>\r\n      {toolbarData.map(({ id, label, IconComponent }) => (\r\n        <Button key={id} size=\"small\" component={newWorkbenchLink}>\r\n          <IconComponent className={classes.leftIcon} />\r\n          {label}\r\n        </Button>\r\n      ))}\r\n    </Toolbar>\r\n  </Paper>\r\n);\r\n\r\nexport default withStyles(styles)(WorkbenchToolbar);\r\n","import { createSelector } from \"reselect\";\r\n\r\nimport { RootState } from \"rootReducer\";\r\nimport { ElementType } from \"sidebar/operators/operatorsData\";\r\n\r\nconst elementTypeSelector = (state: RootState) =>\r\n  state.configSwitchReducer.elementType;\r\n\r\nexport const isDrawerOpen = createSelector(\r\n  elementTypeSelector,\r\n  elementType => elementType !== ElementType.NONE\r\n);\r\n","import { createSelector } from \"reselect\";\r\n\r\nimport { RootState } from \"rootReducer\";\r\nimport { getConstraintDisplayValue } from \"workbench/utils\";\r\nimport { IOption } from \"common/select/SelectInputContainer\";\r\nimport { IAvailableColumns, IAvailableFilters } from \"workbench/query/types\";\r\n\r\nconst dataServicesSelector = (state: RootState) =>\r\n  state.queryConfigReducer.dataServices;\r\n\r\nexport const getDataServices = createSelector(\r\n  dataServicesSelector,\r\n  dataServices =>\r\n    dataServices\r\n      .map(({ ItemId, Label }) => ({\r\n        value: ItemId,\r\n        label: Label\r\n      }))\r\n      .sort((a, b) => {\r\n        if (a.label < b.label) {\r\n          return -1;\r\n        }\r\n        if (a.label > b.label) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      })\r\n);\r\n\r\nconst elementIdSelector = (state: RootState) =>\r\n  state.queryConfigReducer.elementId;\r\nconst querySelector = (state: RootState) => state.sessionReducer.queries;\r\nconst availableColumnsSelector = (state: RootState) =>\r\n  state.queryConfigReducer.availableColumns;\r\n\r\nexport const getAvailableColumns = createSelector(\r\n  elementIdSelector,\r\n  querySelector,\r\n  availableColumnsSelector,\r\n  (elementId, queries, availableColumns) =>\r\n    availableColumns.filter(\r\n      ac =>\r\n        !queries[elementId].Columns.map(c => c.ColumnName).includes(\r\n          ac.ColumnName\r\n        )\r\n    )\r\n);\r\n\r\nexport const getQuery = createSelector(\r\n  elementIdSelector,\r\n  querySelector,\r\n  (elementId, queries) => queries[elementId]\r\n);\r\n\r\nexport const getQueryColumns = createSelector(\r\n  elementIdSelector,\r\n  querySelector,\r\n  (elementId, queries) => queries[elementId].Columns\r\n);\r\n\r\nexport const getCompletedSteps = createSelector(\r\n  elementIdSelector,\r\n  querySelector,\r\n  (elementId, queries) => {\r\n    const selectedQuery = queries[elementId];\r\n\r\n    if (selectedQuery.Columns.length > 0) {\r\n      return [true, true, true, false];\r\n    }\r\n    if (selectedQuery.TargetDataViewId) {\r\n      return [true, false];\r\n    }\r\n\r\n    return [false];\r\n  }\r\n);\r\n\r\nconst availableFiltersSelector = (state: RootState) =>\r\n  state.queryConfigReducer.availableFilters;\r\n\r\n// True means not supported.\r\nconst noteSupportedDataTypes: { [key: string]: boolean } = {\r\n  DateTimeValue: true,\r\n  DateValue: true,\r\n  TimeValue: true\r\n};\r\n\r\n// NOTE: date types are not supported yet.\r\nexport const getAvailableConstraintsObj = createSelector(\r\n  availableColumnsSelector,\r\n  availableFiltersSelector,\r\n  elementIdSelector,\r\n  querySelector,\r\n  (columns, filters, elementId, queries) => {\r\n    const optionFilters = filters.map<IOption<string>>(\r\n      ({ Label, FilterName }) => ({\r\n        value: FilterName,\r\n        label: Label + \" (F)\"\r\n      })\r\n    );\r\n\r\n    const filtersDic = filters.reduce(\r\n      (res, f) => {\r\n        res[f.FilterName] = f;\r\n        return res;\r\n      },\r\n      {} as IAvailableFilters\r\n    );\r\n\r\n    const columnsSelect = columns\r\n      // Remove columns that have unsupported dataTypes, see noteSupportedDataTypes obj.\r\n      .filter(({ DataType }) => !noteSupportedDataTypes[DataType])\r\n      // Remove columns that are replace by filters.\r\n      .filter(\r\n        ({ ColumnName }) =>\r\n          !filters.some(\r\n            ({ ToColumnName }) =>\r\n              ToColumnName != null && ToColumnName === ColumnName\r\n          )\r\n      );\r\n\r\n    const optionColumns = columnsSelect.map<IOption<string>>(\r\n      ({ Label, ColumnName }) => ({\r\n        value: ColumnName,\r\n        label: Label + \" (C)\"\r\n      })\r\n    );\r\n\r\n    const columnsDic = columnsSelect.reduce(\r\n      (res, c) => {\r\n        res[c.ColumnName] = c;\r\n        return res;\r\n      },\r\n      {} as IAvailableColumns\r\n    );\r\n\r\n    const availableConstraints = optionFilters\r\n      .concat(optionColumns)\r\n      .filter(\r\n        opt =>\r\n          !queries[elementId].Constraints.some(\r\n            qc => opt.value === qc.FilterName || opt.value === qc.ColumnName\r\n          )\r\n      );\r\n\r\n    return {\r\n      availableConstraints,\r\n      filtersDic,\r\n      columnsDic\r\n    };\r\n  }\r\n);\r\n\r\nexport const getQueryConstraints = createSelector(\r\n  elementIdSelector,\r\n  querySelector,\r\n  (elementId, queries) =>\r\n    queries[elementId].Constraints.map(c => getConstraintDisplayValue(c))\r\n);\r\n","import React, { SFC } from \"react\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nimport InfoIcon from \"@material-ui/icons/InfoOutlined\";\r\n\r\ninterface IProps {\r\n  currentStep: number;\r\n}\r\n\r\nconst HelperText: SFC<IProps> = ({ currentStep }) => {\r\n  let title = \"\";\r\n  let text = \"\";\r\n\r\n  switch (currentStep) {\r\n    case 0:\r\n      title = \"Query source\";\r\n      text = `Select from the drop down the source of your query.\r\n        It can be a data source or an existing query.\r\n        Once you are done go to the next step clicking on the next button.`;\r\n      break;\r\n    case 1:\r\n      title = \"Query columns\";\r\n      text = `Each source presents a list of available columns.\r\n        You can search for a particular column using the search input.\r\n        Click on a column on the available list to move it to the selected list.\r\n        To remove a column from the selected list click on it again.`;\r\n      break;\r\n    case 2:\r\n      title = \"Query Constraints\";\r\n      text = `Narrow down your data with constraints.\r\n        Constraints are part of the query you are creating and are not visible outside of it.`;\r\n      break;\r\n    default:\r\n      return null;\r\n  }\r\n\r\n  return (\r\n    <Grid item xs={12}>\r\n      <Card>\r\n        <CardHeader\r\n          avatar={\r\n            <Avatar>\r\n              <InfoIcon />\r\n            </Avatar>\r\n          }\r\n          title={title}\r\n          subheader={text}\r\n        />\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default HelperText;\r\n","import React, { Fragment, SFC } from \"react\";\r\n\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  withStyles,\r\n  WithStyles\r\n} from \"@material-ui/core/styles\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepButton from \"@material-ui/core/StepButton\";\r\n\r\ninterface IProps extends WithStyles<typeof styles> {\r\n  title: string;\r\n  stepLabels: string[];\r\n  currentStep: number;\r\n  completedSteps: boolean[];\r\n  dispatchGoToStep: (stepIndex: number) => void;\r\n}\r\n\r\nconst styles = ({ spacing }: Theme) =>\r\n  createStyles({\r\n    gridTitle: {\r\n      position: \"fixed\",\r\n      width: \"99%\",\r\n      backgroundColor: \"white\",\r\n      zIndex: 2,\r\n      borderBottom: \"1px solid #eee\"\r\n    },\r\n    titleContainer: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      marginBottom: spacing.unit * 2\r\n    },\r\n    title: {\r\n      marginRight: spacing.unit * 2\r\n    },\r\n    stepper: {\r\n      padding: 0,\r\n      width: \"100%\"\r\n    },\r\n    stepTitle: {\r\n      marginTop: 85\r\n    }\r\n  });\r\n\r\nconst StepperHeader: SFC<IProps> = ({\r\n  classes,\r\n  title,\r\n  stepLabels,\r\n  currentStep,\r\n  completedSteps,\r\n  dispatchGoToStep\r\n}) => {\r\n  const handleStep = (stepIndex: number) => () => {\r\n    return dispatchGoToStep(stepIndex);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid item xs={12} className={classes.gridTitle}>\r\n        <div className={classes.titleContainer}>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            {title}\r\n          </Typography>\r\n        </div>\r\n        <Stepper\r\n          classes={{ root: classes.stepper }}\r\n          nonLinear\r\n          activeStep={currentStep}\r\n        >\r\n          {stepLabels.map((label, index) => (\r\n            <Step key={label}>\r\n              <StepButton\r\n                onClick={handleStep(index)}\r\n                disabled={completedSteps[index] == null}\r\n                completed={completedSteps[index]}\r\n              >\r\n                {label}\r\n              </StepButton>\r\n            </Step>\r\n          ))}\r\n        </Stepper>\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.stepTitle}>\r\n        <Typography variant=\"h5\">\r\n          {`Step ${currentStep + 1}: ${stepLabels[currentStep]}`}\r\n        </Typography>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(StepperHeader);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\n\r\nimport { goToStep, IGoToStep } from \"workbench/query/actions\";\r\n\r\nimport StepperHeader from \"workbench/query/StepperHeader\";\r\n\r\nconst stepLabels = [\"Source\", \"Columns\", \"Constraints\", \"Summary\"];\r\n\r\ninterface IOwnProps {\r\n  currentStep: number;\r\n  completedSteps: boolean[];\r\n}\r\n\r\ntype Props = ReturnType<typeof mapDispatchToProps> & IOwnProps;\r\n\r\nclass StepperHeaderContainer extends Component<Props> {\r\n  public render() {\r\n    const { currentStep, completedSteps, dispatchGoToStep } = this.props;\r\n\r\n    return (\r\n      <StepperHeader\r\n        title=\"Configure Query\"\r\n        stepLabels={stepLabels}\r\n        currentStep={currentStep}\r\n        completedSteps={completedSteps}\r\n        dispatchGoToStep={dispatchGoToStep}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<IGoToStep>) => ({\r\n  dispatchGoToStep: (step: number) => dispatch(goToStep(step))\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(StepperHeaderContainer);\r\n","import React from \"react\";\r\n\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  withStyles,\r\n  WithStyles\r\n} from \"@material-ui/core/styles\";\r\n\r\nimport { IOption } from \"common/select/SelectInputContainer\";\r\n\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport { SvgIconProps } from \"@material-ui/core/SvgIcon\";\r\n\r\ninterface IProps extends WithStyles<typeof styles> {\r\n  style: React.CSSProperties;\r\n  OptionsIcon?: React.ComponentType<SvgIconProps>;\r\n  option: IOption;\r\n  handleClick: (event: React.MouseEvent) => void;\r\n}\r\n\r\nconst styles = ({ spacing: { unit } }: Theme) =>\r\n  createStyles({\r\n    menuItem: {\r\n      padding: \"0 0 0 10px\"\r\n    },\r\n    labelContainer: {\r\n      padding: unit * 2\r\n    }\r\n  });\r\n\r\nconst Option: React.SFC<IProps> = ({\r\n  classes,\r\n  style,\r\n  OptionsIcon,\r\n  option,\r\n  handleClick\r\n}) => (\r\n  <MenuItem\r\n    component=\"div\"\r\n    style={style}\r\n    className={classes.menuItem}\r\n    onClick={handleClick}\r\n  >\r\n    {OptionsIcon && (\r\n      <ListItemIcon>\r\n        <OptionsIcon />\r\n      </ListItemIcon>\r\n    )}\r\n    <div className={classes.labelContainer}>{option.label}</div>\r\n  </MenuItem>\r\n);\r\n\r\nexport default withStyles(styles)(Option);\r\n","import React from \"react\";\r\n\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  withStyles,\r\n  WithStyles\r\n} from \"@material-ui/core/styles\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst styles = ({ spacing: { unit } }: Theme) =>\r\n  createStyles({\r\n    labelContainer: {\r\n      padding: unit * 2\r\n    }\r\n  });\r\n\r\nconst NoOption: React.SFC<WithStyles<typeof styles>> = ({ classes }) => (\r\n  <Typography color=\"textSecondary\" className={classes.labelContainer}>\r\n    No items found\r\n  </Typography>\r\n);\r\n\r\nexport default withStyles(styles)(NoOption);\r\n","import React from \"react\";\r\n\r\nimport { IOption } from \"common/select/SelectInputContainer\";\r\n\r\nimport { List as VirtualizedList, ListRowProps } from \"react-virtualized\";\r\n\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { SvgIconProps } from \"@material-ui/core/SvgIcon\";\r\n\r\nimport Option from \"common/select/Option\";\r\nimport NoOption from \"common/select/NoOption\";\r\n\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\n\r\ninterface IProps {\r\n  label: string;\r\n  options: IOption[];\r\n  containerRef: React.RefObject<HTMLDivElement>;\r\n  anchorEl?: HTMLElement;\r\n  OptionsIcon?: React.ComponentType<SvgIconProps>;\r\n  inputLabel?: string;\r\n  helperText?: string;\r\n  noClear?: boolean;\r\n  handleOptionClick: (option: IOption) => (event: React.MouseEvent) => void;\r\n  handleInputClick: (event: React.MouseEvent<HTMLDivElement>) => void;\r\n  handleInputChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  handleClickClearSelected: () => void;\r\n  handleMouseDownPassword: (event: React.MouseEvent<HTMLDivElement>) => void;\r\n  handleClose: () => void;\r\n}\r\n\r\nconst rowRenderer = (\r\n  options: IOption[],\r\n  handleOptionClick: (option: IOption) => (event: React.MouseEvent) => void,\r\n  OptionsIcon?: React.ComponentType<SvgIconProps>\r\n) => ({ index, key, style }: ListRowProps) => {\r\n  const option = options[index];\r\n  const handleClick = handleOptionClick(option);\r\n\r\n  return (\r\n    <Option\r\n      key={key}\r\n      style={style}\r\n      option={option}\r\n      handleClick={handleClick}\r\n      OptionsIcon={OptionsIcon}\r\n    />\r\n  );\r\n};\r\n\r\nconst noRowsRenderer = () => <NoOption />;\r\n\r\nconst SelectInput: React.SFC<IProps> = ({\r\n  containerRef,\r\n  inputLabel,\r\n  helperText,\r\n  label,\r\n  options,\r\n  handleInputClick,\r\n  handleInputChange,\r\n  noClear,\r\n  handleClickClearSelected,\r\n  handleMouseDownPassword,\r\n  anchorEl,\r\n  handleClose,\r\n  handleOptionClick,\r\n  OptionsIcon\r\n}) => (\r\n  <div ref={containerRef}>\r\n    <FormControl fullWidth>\r\n      {inputLabel && (\r\n        <InputLabel htmlFor=\"select-input\">{inputLabel}</InputLabel>\r\n      )}\r\n      <Input\r\n        fullWidth\r\n        value={label}\r\n        onClick={handleInputClick}\r\n        onChange={handleInputChange}\r\n        endAdornment={\r\n          !noClear && (\r\n            <InputAdornment position=\"end\">\r\n              <IconButton\r\n                aria-label=\"Clear Selected\"\r\n                onClick={handleClickClearSelected}\r\n                onMouseDown={handleMouseDownPassword}\r\n              >\r\n                <ClearIcon />\r\n              </IconButton>\r\n            </InputAdornment>\r\n          )\r\n        }\r\n      />\r\n      <Menu\r\n        disableAutoFocus\r\n        disableAutoFocusItem\r\n        disableRestoreFocus\r\n        MenuListProps={{\r\n          component: \"div\",\r\n          disablePadding: true\r\n        }}\r\n        getContentAnchorEl={null}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\"\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"center\"\r\n        }}\r\n        anchorEl={anchorEl}\r\n        open={!!anchorEl}\r\n        onClose={handleClose}\r\n      >\r\n        {containerRef.current && (\r\n          <VirtualizedList\r\n            width={containerRef.current.offsetWidth}\r\n            height={\r\n              options.length === 0 ? 45 : Math.min(options.length * 40, 300)\r\n            }\r\n            rowCount={options.length}\r\n            rowHeight={40}\r\n            rowRenderer={rowRenderer(options, handleOptionClick, OptionsIcon)}\r\n            noRowsRenderer={noRowsRenderer}\r\n          />\r\n        )}\r\n      </Menu>\r\n      {helperText && <FormHelperText>{helperText}</FormHelperText>}\r\n    </FormControl>\r\n  </div>\r\n);\r\n\r\nexport default SelectInput;\r\n","import React from \"react\";\r\n\r\nimport { Overwrite, StyledComponentProps } from \"@material-ui/core\";\r\n\r\nimport SelectInput from \"common/select/SelectInput\";\r\n\r\nexport interface IOption<T = any> {\r\n  label: string;\r\n  value: T;\r\n}\r\n\r\ninterface IProps<T> {\r\n  value?: T;\r\n  options: Array<IOption<T>>;\r\n  handleChange: (option: IOption<T>) => void;\r\n  OptionsIcon?: React.ComponentType<\r\n    Overwrite<Pick<{}, never>, StyledComponentProps<string>>\r\n  >;\r\n  inputLabel?: string;\r\n  helperText?: string;\r\n  noClear?: boolean;\r\n}\r\n\r\ninterface IState<T> {\r\n  anchorEl?: HTMLElement;\r\n  label: string;\r\n  options: Array<IOption<T>>;\r\n}\r\n\r\nexport default class SelectInputContainer<T> extends React.Component<\r\n  IProps<T>,\r\n  IState<T>\r\n> {\r\n  private containerRef: React.RefObject<HTMLDivElement> = React.createRef();\r\n\r\n  constructor(props: IProps<T>) {\r\n    super(props);\r\n\r\n    const selectedOption =\r\n      props.value &&\r\n      this.props.options.find(({ value }) => value === props.value);\r\n\r\n    this.state = {\r\n      anchorEl: undefined,\r\n      label: (selectedOption && selectedOption.label) || \"\",\r\n      options: [...this.props.options]\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    const { OptionsIcon, inputLabel, helperText, noClear } = this.props;\r\n    const { anchorEl, label, options } = this.state;\r\n\r\n    return (\r\n      <SelectInput\r\n        label={label}\r\n        containerRef={this.containerRef}\r\n        anchorEl={anchorEl}\r\n        options={options}\r\n        handleOptionClick={this.handleOptionClick}\r\n        handleInputClick={this.handleInputClick}\r\n        handleInputChange={this.handleInputChange}\r\n        handleClickClearSelected={this.handleClickClearSelected}\r\n        handleMouseDownPassword={this.handleMouseDownPassword}\r\n        handleClose={this.handleClose}\r\n        OptionsIcon={OptionsIcon}\r\n        inputLabel={inputLabel}\r\n        helperText={helperText}\r\n        noClear={noClear}\r\n      />\r\n    );\r\n  }\r\n\r\n  private handleMouseDownPassword = (\r\n    event: React.MouseEvent<HTMLDivElement>\r\n  ) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  private handleClickClearSelected = () => {\r\n    this.setState({\r\n      options: [...this.props.options],\r\n      label: \"\",\r\n      anchorEl: undefined\r\n    });\r\n  };\r\n\r\n  private handleInputClick = (event: React.MouseEvent<HTMLDivElement>) => {\r\n    this.setState({\r\n      options: [...this.props.options],\r\n      anchorEl: event.currentTarget\r\n    });\r\n  };\r\n\r\n  private handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      options: this.props.options.filter(({ label }) =>\r\n        label.toUpperCase().includes(event.target.value.toUpperCase())\r\n      ),\r\n      label: event.target.value\r\n    });\r\n  };\r\n\r\n  private handleOptionClick = (option: IOption<T>) => (_: React.MouseEvent) => {\r\n    this.setState({\r\n      label: this.props.value != null ? option.label : \"\",\r\n      anchorEl: undefined\r\n    });\r\n    this.props.handleChange(option);\r\n  };\r\n\r\n  private handleClose = () => {\r\n    this.setState({\r\n      anchorEl: undefined\r\n    });\r\n  };\r\n}\r\n","import React, { SFC } from \"react\";\r\n\r\nimport SelectInputContainer, {\r\n  IOption\r\n} from \"common/select/SelectInputContainer\";\r\n\r\nimport { createStyles, withStyles, WithStyles } from \"@material-ui/core/styles\";\r\n\r\nimport StorageIcon from \"@material-ui/icons/Storage\";\r\n\r\ninterface IProps {\r\n  targetDataViewId: string;\r\n  dataServices: IOption[];\r\n  handleChangeDataService: (option: IOption) => void;\r\n}\r\n\r\nconst styles = createStyles({\r\n  iconColour: {\r\n    fill: \"#003b86\"\r\n  }\r\n});\r\n\r\nconst styledIcon: SFC<WithStyles<typeof styles>> = ({ classes }) => (\r\n  <StorageIcon className={classes.iconColour} />\r\n);\r\n\r\nconst OptionsIcon = withStyles(styles)(styledIcon);\r\n\r\nconst SourceSelector: SFC<IProps> = ({\r\n  targetDataViewId,\r\n  dataServices,\r\n  handleChangeDataService\r\n}) => (\r\n  <SelectInputContainer\r\n    OptionsIcon={OptionsIcon}\r\n    inputLabel=\"Click here to select a source...\"\r\n    value={targetDataViewId}\r\n    options={dataServices}\r\n    handleChange={handleChangeDataService}\r\n  />\r\n);\r\n\r\nexport default SourceSelector;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\n\r\nimport { RootState } from \"rootReducer\";\r\nimport { updateQueryDataService, QueryAction } from \"workbench/actions\";\r\nimport {\r\n  dataServicesRequest,\r\n  DataServicesAction\r\n} from \"workbench/query/actions\";\r\nimport { getDataServices } from \"workbench/query/selectors\";\r\n\r\nimport { IOption } from \"common/select/SelectInputContainer\";\r\n\r\nimport SourceSelector from \"workbench/query/sourceSelector/SourceSelector\";\r\n\r\ninterface IOwnProps {\r\n  elementId: number;\r\n  targetDataViewId: string;\r\n}\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n  ReturnType<typeof mapDispatchToProps> &\r\n  IOwnProps;\r\n\r\nclass SourceSelectorContainer extends Component<Props> {\r\n  public componentDidMount() {\r\n    this.props.dispatchDataServicesRequest();\r\n  }\r\n\r\n  public render() {\r\n    const { targetDataViewId, dataServices } = this.props;\r\n\r\n    return (\r\n      <SourceSelector\r\n        targetDataViewId={targetDataViewId}\r\n        dataServices={dataServices}\r\n        handleChangeDataService={this.handleChangeDataService}\r\n      />\r\n    );\r\n  }\r\n\r\n  private handleChangeDataService = (option: IOption) => {\r\n    const { elementId, dispatchUpdateDataService } = this.props;\r\n\r\n    dispatchUpdateDataService(elementId, option.value);\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  dataServices: getDataServices(state)\r\n});\r\n\r\nconst mapDispatchToProps = (\r\n  dispatch: Dispatch<DataServicesAction | QueryAction>\r\n) => ({\r\n  dispatchDataServicesRequest: () => dispatch(dataServicesRequest()),\r\n  dispatchUpdateDataService: (elementId: number, targetDataViewId: string) =>\r\n    dispatch(updateQueryDataService(elementId, targetDataViewId))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SourceSelectorContainer);\r\n","import React, { SFC } from \"react\";\r\n\r\nimport { createStyles, withStyles, WithStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { IOption } from \"common/select/SelectInputContainer\";\r\n\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nimport SettingsIcon from \"@material-ui/icons/SettingsApplications\";\r\n\r\ninterface IProps extends WithStyles<typeof styles> {\r\n  style: React.CSSProperties;\r\n  option: IOption;\r\n  handleClick: (event: React.MouseEvent) => void;\r\n}\r\n\r\nconst styles = createStyles({\r\n  iconColour: {\r\n    fill: \"#003b86\"\r\n  },\r\n  listItem: {\r\n    paddingLeft: 15\r\n  },\r\n  listItemText: {\r\n    display: \"flex\"\r\n  },\r\n  listItemTextPrimary: {\r\n    flexBasis: \"35%\"\r\n  }\r\n});\r\n\r\nconst Row: SFC<IProps> = ({ classes, style, option, handleClick }) => (\r\n  <ListItem\r\n    divider\r\n    style={style}\r\n    onClick={handleClick}\r\n    disableGutters\r\n    dense\r\n    button\r\n    className={classes.listItem}\r\n    ContainerComponent=\"div\"\r\n  >\r\n    <ListItemIcon>\r\n      <SettingsIcon className={classes.iconColour} />\r\n    </ListItemIcon>\r\n    <ListItemText\r\n      classes={{\r\n        primary: classes.listItemTextPrimary\r\n      }}\r\n      className={classes.listItemText}\r\n      primary={option.label}\r\n      // secondary={`(${queryColumn.DataType})`}\r\n    />\r\n  </ListItem>\r\n);\r\n\r\nexport default withStyles(styles)(Row);\r\n","import React, { ChangeEventHandler, SFC } from \"react\";\r\n\r\nimport {\r\n  AutoSizer,\r\n  List as VirtualizedList,\r\n  ListRowProps\r\n} from \"react-virtualized\";\r\n\r\nimport { createStyles, withStyles, WithStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { IOption } from \"common/select/SelectInputContainer\";\r\nimport NoOption from \"common/select/NoOption\";\r\n\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\n\r\nimport Row from \"common/searchableList/Row\";\r\n\r\ninterface IProps extends WithStyles<typeof styles> {\r\n  label: string;\r\n  totItems: number;\r\n  searchableItems: IOption[];\r\n  searchString: string;\r\n  handleItemClick: (column: IOption) => (event: React.MouseEvent) => void;\r\n  handleChange: ChangeEventHandler<HTMLInputElement>;\r\n  handleClickClearIcon: () => void;\r\n}\r\n\r\nconst styles = createStyles({\r\n  list: {\r\n    height: \"100%\"\r\n  },\r\n  paper: {\r\n    padding: 10\r\n  }\r\n});\r\n\r\nconst noRowsRenderer = () => <NoOption />;\r\n\r\nconst rowRenderer = (\r\n  searchableItems: IOption[],\r\n  handleItemClick: (column: IOption) => (event: React.MouseEvent) => void\r\n) => ({ index, key, style }: ListRowProps) => {\r\n  const option = searchableItems[index];\r\n  const handleClick = handleItemClick(option);\r\n\r\n  return (\r\n    <Row key={key} style={style} option={option} handleClick={handleClick} />\r\n  );\r\n};\r\n\r\nconst SearchableList: SFC<IProps> = ({\r\n  classes,\r\n  label,\r\n  totItems,\r\n  searchableItems,\r\n  searchString,\r\n  handleItemClick,\r\n  handleChange,\r\n  handleClickClearIcon\r\n}) => (\r\n  <Paper className={classes.paper}>\r\n    <Typography variant=\"subtitle1\">{`${label} (${totItems})`}</Typography>\r\n    <List className={classes.list} component=\"div\" disablePadding>\r\n      <FormControl fullWidth>\r\n        <InputLabel>Search</InputLabel>\r\n        <Input\r\n          value={searchString}\r\n          onChange={handleChange}\r\n          disabled={searchableItems.length === 0}\r\n          endAdornment={\r\n            <InputAdornment position=\"end\">\r\n              <IconButton\r\n                aria-label=\"Clear\"\r\n                onClick={handleClickClearIcon}\r\n                onMouseDown={handleClickClearIcon}\r\n              >\r\n                {searchString ? <ClearIcon /> : null}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          }\r\n        />\r\n      </FormControl>\r\n      <AutoSizer disableHeight>\r\n        {({ width }) => (\r\n          <VirtualizedList\r\n            width={width}\r\n            height={245}\r\n            rowCount={searchableItems.length}\r\n            rowHeight={41}\r\n            rowRenderer={rowRenderer(searchableItems, handleItemClick)}\r\n            noRowsRenderer={noRowsRenderer}\r\n          />\r\n        )}\r\n      </AutoSizer>\r\n    </List>\r\n  </Paper>\r\n);\r\n\r\nexport default withStyles(styles)(SearchableList);\r\n","import React, { ChangeEvent, Component } from \"react\";\r\nimport { createSelector } from \"reselect\";\r\n\r\nimport { IOption } from \"common/select/SelectInputContainer\";\r\n\r\nimport SearchableList from \"common/searchableList/SearchableList\";\r\n\r\ninterface IProps {\r\n  label: string;\r\n  items: IOption[];\r\n  handleItemClick: (item: IOption) => (event: React.MouseEvent) => void;\r\n}\r\n\r\ninterface IState {\r\n  searchString: string;\r\n}\r\n\r\nconst filterTextSelector = (state: IState) => state.searchString;\r\nconst itemsSelector = (_: IState, props: IProps) => props.items;\r\n\r\nexport default class SearchableListContainer extends Component<IProps, IState> {\r\n  public state = {\r\n    searchString: \"\"\r\n  };\r\n\r\n  private filterList = createSelector(\r\n    filterTextSelector,\r\n    itemsSelector,\r\n    (filterText, items) => items.filter(item => item.label.includes(filterText))\r\n  );\r\n\r\n  public render() {\r\n    const { label, handleItemClick } = this.props;\r\n    const { searchString } = this.state;\r\n    const filteredList = this.filterList(this.state, this.props);\r\n\r\n    return (\r\n      <SearchableList\r\n        label={label}\r\n        totItems={filteredList.length}\r\n        searchableItems={filteredList}\r\n        searchString={searchString}\r\n        handleItemClick={handleItemClick}\r\n        handleChange={this.handleChange}\r\n        handleClickClearIcon={this.handleClickClearIcon}\r\n      />\r\n    );\r\n  }\r\n\r\n  private handleClickClearIcon = () => {\r\n    this.setState({\r\n      searchString: \"\"\r\n    });\r\n  };\r\n\r\n  private handleChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      searchString: event.target.value\r\n    });\r\n  };\r\n}\r\n","import React, { SFC } from \"react\";\r\n\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  withStyles,\r\n  WithStyles\r\n} from \"@material-ui/core/styles\";\r\n\r\nimport { IOption } from \"common/select/SelectInputContainer\";\r\nimport SearchableListContainer from \"common/searchableList/SearchableListContainer\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport ArrowLeftIcon from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport ArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\r\n\r\ninterface IProps extends WithStyles<typeof styles> {\r\n  availableColumns: IOption[];\r\n  selectedColumns: IOption[];\r\n  handleAddQueryColumn: (column: IOption) => (event: React.MouseEvent) => void;\r\n  handleRemoveQueryColumn: (\r\n    column: IOption\r\n  ) => (event: React.MouseEvent) => void;\r\n}\r\n\r\nconst styles = ({ spacing: { unit } }: Theme) =>\r\n  createStyles({\r\n    listContainer: {\r\n      position: \"relative\"\r\n    },\r\n    button: {\r\n      position: \"absolute\",\r\n      right: unit * 2,\r\n      top: unit * 2\r\n    }\r\n  });\r\n\r\nconst ColumnsSelector: SFC<IProps> = ({\r\n  classes,\r\n  availableColumns,\r\n  selectedColumns,\r\n  handleAddQueryColumn,\r\n  handleRemoveQueryColumn\r\n}) => (\r\n  <Grid container spacing={16}>\r\n    <Grid item xs={6} className={classes.listContainer}>\r\n      {availableColumns.length > 0 && (\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n          size=\"small\"\r\n          className={classes.button}\r\n        >\r\n          Add All Columns\r\n          <ArrowRightIcon />\r\n        </Button>\r\n      )}\r\n      <SearchableListContainer\r\n        label=\"Available Columns\"\r\n        items={availableColumns}\r\n        handleItemClick={handleAddQueryColumn}\r\n      />\r\n    </Grid>\r\n    <Grid item xs={6} className={classes.listContainer}>\r\n      {selectedColumns.length > 0 && (\r\n        <Button variant=\"outlined\" size=\"small\" className={classes.button}>\r\n          <ArrowLeftIcon />\r\n          Remove All Columns\r\n        </Button>\r\n      )}\r\n      <SearchableListContainer\r\n        label=\"Selected Columns\"\r\n        items={selectedColumns}\r\n        handleItemClick={handleRemoveQueryColumn}\r\n      />\r\n    </Grid>\r\n  </Grid>\r\n);\r\n\r\nexport default withStyles(styles)(ColumnsSelector);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport { createSelector } from \"reselect\";\r\n\r\nimport { RootState } from \"rootReducer\";\r\nimport {\r\n  addQueryColumn,\r\n  removeQueryColumn,\r\n  QueryColumnAction\r\n} from \"workbench/actions\";\r\nimport {\r\n  getAvailableColumns,\r\n  getQueryColumns\r\n} from \"workbench/query/selectors\";\r\n\r\nimport { IColumn } from \"workbench/types\";\r\nimport { IOption } from \"common/select/SelectInputContainer\";\r\n\r\nimport ColumnsSelector from \"workbench/query/columnSelector/ColumnsSelector\";\r\n\r\ninterface IOwnProps {\r\n  elementId: number;\r\n}\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n  ReturnType<typeof mapDispatchToProps> &\r\n  IOwnProps;\r\n\r\nconst availableColumnsSelector = (props: Props) => props.availableColumns;\r\nconst selectedColumnsSelector = (props: Props) => props.selectedColumns;\r\n\r\nclass ColumnsSelectorContainer extends Component<Props> {\r\n  private availableColumnOptions = createSelector(\r\n    availableColumnsSelector,\r\n    availableColumns =>\r\n      availableColumns.map<IOption>(column => ({\r\n        label: column.Label,\r\n        value: column.ColumnName\r\n      }))\r\n  );\r\n\r\n  private selectedColumnOptions = createSelector(\r\n    selectedColumnsSelector,\r\n    selectedColumns =>\r\n      selectedColumns.map<IOption>(column => ({\r\n        label: column.Label,\r\n        value: column.ColumnName\r\n      }))\r\n  );\r\n\r\n  public render() {\r\n    return (\r\n      <ColumnsSelector\r\n        availableColumns={this.availableColumnOptions(this.props)}\r\n        selectedColumns={this.selectedColumnOptions(this.props)}\r\n        handleAddQueryColumn={this.handleAddQueryColumn}\r\n        handleRemoveQueryColumn={this.handleRemoveQueryColumn}\r\n      />\r\n    );\r\n  }\r\n\r\n  private handleAddQueryColumn = ({ value, label }: IOption) => (\r\n    _: React.MouseEvent\r\n  ) => {\r\n    const { elementId, dispatchAddQueryColumn } = this.props;\r\n    const queryColumn = {\r\n      ColumnName: value,\r\n      Label: label,\r\n      Aggregation: \"None\"\r\n    };\r\n    dispatchAddQueryColumn(elementId, queryColumn);\r\n  };\r\n\r\n  private handleRemoveQueryColumn = ({ value }: IOption) => (\r\n    _: React.MouseEvent\r\n  ) => {\r\n    const { elementId, dispatchRemoveQueryColumn } = this.props;\r\n    dispatchRemoveQueryColumn(elementId, value);\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  availableColumns: getAvailableColumns(state),\r\n  selectedColumns: getQueryColumns(state)\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<QueryColumnAction>) => ({\r\n  dispatchAddQueryColumn: (elementId: number, column: IColumn) =>\r\n    dispatch(addQueryColumn(elementId, column)),\r\n  dispatchRemoveQueryColumn: (elementId: number, columnName: string) =>\r\n    dispatch(removeQueryColumn(elementId, columnName))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ColumnsSelectorContainer);\r\n","import React, { Fragment, SFC } from \"react\";\r\n\r\nimport { IConstraint } from \"workbench/types\";\r\nimport {\r\n  IFilterCapabilitiesDic,\r\n  IAvailableColumns,\r\n  IAvailableFilters,\r\n  IUdsFilterDescriptionDtc,\r\n  IUdsColumnDescriptionDtc\r\n} from \"workbench/query/types\";\r\n\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  withStyles,\r\n  WithStyles\r\n} from \"@material-ui/core/styles\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport SelectInputContainer, {\r\n  IOption\r\n} from \"common/select/SelectInputContainer\";\r\n\r\nimport ConstraintIcon from \"@material-ui/icons/FilterList\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nconst constraintIconColour = \"#2c5367\";\r\n\r\ninterface IProps extends WithStyles<typeof styles> {\r\n  availableConstraintsObj: {\r\n    availableConstraints: Array<IOption<string>>;\r\n    filtersDic: IAvailableFilters;\r\n    columnsDic: IAvailableColumns;\r\n  };\r\n  queryConstraints: IConstraint[];\r\n  filterCapabilities: IFilterCapabilitiesDic;\r\n  handledAddQueryConstraint: (target: IOption) => void;\r\n  handledUpdateQueryConstraintType: (\r\n    constraintId: number\r\n  ) => React.ChangeEventHandler<HTMLSelectElement>;\r\n  handledUpdateQueryConstraintValues: (\r\n    constraintId: number,\r\n    dataType: string\r\n  ) => React.ChangeEventHandler<HTMLInputElement>;\r\n  handledRemoveQueryConstraint: (\r\n    constraintId: number\r\n  ) => React.MouseEventHandler;\r\n}\r\n\r\nconst styles = ({ spacing: { unit } }: Theme) =>\r\n  createStyles({\r\n    constraintTargetSelect: {\r\n      marginBottom: 30\r\n    },\r\n    constraintIconColour: {\r\n      fill: constraintIconColour\r\n    },\r\n    paper: {\r\n      display: \"flex\",\r\n      alignItems: \"center\"\r\n    },\r\n    targetLabel: {\r\n      flexBasis: `${unit * 2}%`,\r\n      margin: unit\r\n    },\r\n    typeSelect: {\r\n      flexBasis: `${unit * 2}%`,\r\n      margin: unit\r\n    },\r\n    valueInput: {\r\n      flexGrow: 1,\r\n      margin: unit\r\n    },\r\n    constraintIcon: {\r\n      margin: unit,\r\n      fill: constraintIconColour\r\n    }\r\n  });\r\n\r\nconst getConstraintLabel = (\r\n  column?: IUdsColumnDescriptionDtc,\r\n  filter?: IUdsFilterDescriptionDtc\r\n) => {\r\n  return (column && column.Label) || (filter && filter.Label);\r\n};\r\n\r\nconst ConstraintSelector: SFC<IProps> = ({\r\n  classes,\r\n  availableConstraintsObj: { availableConstraints, columnsDic, filtersDic },\r\n  queryConstraints,\r\n  filterCapabilities,\r\n  handledAddQueryConstraint,\r\n  handledUpdateQueryConstraintType,\r\n  handledUpdateQueryConstraintValues,\r\n  handledRemoveQueryConstraint\r\n}) => (\r\n  <Fragment>\r\n    <div className={classes.constraintTargetSelect}>\r\n      <SelectInputContainer\r\n        OptionsIcon={ConstraintIcon}\r\n        inputLabel=\"Contraint on...\"\r\n        options={availableConstraints}\r\n        handleChange={handledAddQueryConstraint}\r\n      />\r\n    </div>\r\n    {queryConstraints.length > 0 &&\r\n      queryConstraints.map(\r\n        ({ ConstraintId, DataType, FilterType, FilterName, ColumnName }) => (\r\n          <Paper key={ConstraintId} className={classes.paper}>\r\n            <ConstraintIcon className={classes.constraintIcon} />\r\n            <Typography variant=\"subtitle1\" className={classes.targetLabel}>\r\n              {getConstraintLabel(\r\n                columnsDic[ColumnName],\r\n                filtersDic[FilterName]\r\n              )}\r\n            </Typography>\r\n            <FormControl className={classes.typeSelect}>\r\n              <Select\r\n                value={FilterType}\r\n                onChange={handledUpdateQueryConstraintType(ConstraintId)}\r\n                autoWidth\r\n              >\r\n                {filterCapabilities[DataType].map(({ Type, Label }, n) => (\r\n                  <MenuItem key={n} value={Type}>\r\n                    {Label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl className={classes.valueInput}>\r\n              <Input\r\n                autoFocus\r\n                value={\"\"}\r\n                onChange={handledUpdateQueryConstraintValues(\r\n                  ConstraintId,\r\n                  DataType\r\n                )}\r\n              />\r\n            </FormControl>\r\n            <IconButton\r\n              aria-label=\"Delete\"\r\n              onClick={handledRemoveQueryConstraint(ConstraintId)}\r\n            >\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </Paper>\r\n        )\r\n      )}\r\n  </Fragment>\r\n);\r\n\r\nexport default withStyles(styles)(ConstraintSelector);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\n\r\nimport { RootState } from \"rootReducer\";\r\n\r\nimport {\r\n  getQueryConstraints,\r\n  getAvailableConstraintsObj\r\n} from \"workbench/query/selectors\";\r\nimport { getConstraintVectorValue } from \"workbench/utils\";\r\nimport {\r\n  addQueryConstraint,\r\n  updateQueryConstraintType,\r\n  updateQueryConstraintValues,\r\n  removeQueryConstraint,\r\n  QueryConstraintAction\r\n} from \"workbench/actions\";\r\nimport {\r\n  filterCapabilitiesRequest,\r\n  FilterCapabilitiesAction\r\n} from \"workbench/query/actions\";\r\nimport { IConstraint } from \"workbench/types\";\r\n\r\nimport ConstraintSelector from \"workbench/query/constraintSelector/ConstraintSelector\";\r\nimport { IOption } from \"common/select/SelectInputContainer\";\r\n\r\ninterface IOwnProps {\r\n  elementId: number;\r\n}\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n  ReturnType<typeof mapDispatchToProps> &\r\n  IOwnProps;\r\n\r\nclass ConstraintSelectorContainer extends Component<Props> {\r\n  public componentDidMount() {\r\n    this.props.dispatchFilterCapabilitiesRequest();\r\n  }\r\n\r\n  public render() {\r\n    const {\r\n      queryConstraints,\r\n      filterCapabilities,\r\n      availableConstraintsObj\r\n    } = this.props;\r\n\r\n    return (\r\n      <ConstraintSelector\r\n        queryConstraints={queryConstraints}\r\n        filterCapabilities={filterCapabilities}\r\n        availableConstraintsObj={availableConstraintsObj}\r\n        handledAddQueryConstraint={this.handledAddQueryConstraint}\r\n        handledUpdateQueryConstraintType={this.handledUpdateQueryConstraintType}\r\n        handledUpdateQueryConstraintValues={\r\n          this.handledUpdateQueryConstraintValues\r\n        }\r\n        handledRemoveQueryConstraint={this.handledRemoveQueryConstraint}\r\n      />\r\n    );\r\n  }\r\n\r\n  private handledAddQueryConstraint = (selectedOption: IOption<string>) => {\r\n    const {\r\n      elementId,\r\n      queryConstraints,\r\n      dispatchAddQueryConstraint,\r\n      filterCapabilities,\r\n      availableConstraintsObj: { columnsDic, filtersDic }\r\n    } = this.props;\r\n\r\n    const constraintColumn = columnsDic[selectedOption.value];\r\n    const constraintFilter = filtersDic[selectedOption.value];\r\n\r\n    const dataType =\r\n      (constraintColumn && constraintColumn.DataType) ||\r\n      (constraintFilter && constraintFilter.DataType);\r\n\r\n    const columnName =\r\n      (constraintColumn && constraintColumn.ColumnName) ||\r\n      (constraintFilter && constraintFilter.ToColumnName);\r\n\r\n    // For a new constraint default the filterType to the first value\r\n    // of the filter capabilities for the selected dataType.\r\n    const constraint: IConstraint = {\r\n      ConstraintId: queryConstraints.length,\r\n      ConstraintName: constraintColumn && constraintColumn.ColumnName,\r\n      FilterName: constraintFilter && constraintFilter.FilterName,\r\n      DataType: dataType,\r\n      ColumnName: columnName,\r\n      FilterType: filterCapabilities[dataType][0].Type\r\n    };\r\n\r\n    dispatchAddQueryConstraint(elementId, constraint);\r\n  };\r\n\r\n  private handledUpdateQueryConstraintType = (constraintId: number) => (\r\n    event: React.ChangeEvent<HTMLSelectElement>\r\n  ) => {\r\n    const { elementId, dispatchUpdateQueryConstraintType } = this.props;\r\n\r\n    dispatchUpdateQueryConstraintType(\r\n      elementId,\r\n      constraintId,\r\n      event.target.value\r\n    );\r\n  };\r\n\r\n  private handledUpdateQueryConstraintValues = (\r\n    constraintId: number,\r\n    dataType: string\r\n  ) => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { elementId, dispatchUpdateQueryConstraintValues } = this.props;\r\n    const valuesObj = getConstraintVectorValue(dataType, event.target.value);\r\n    dispatchUpdateQueryConstraintValues(\r\n      elementId,\r\n      constraintId,\r\n      valuesObj.vectorValues\r\n    );\r\n  };\r\n\r\n  private handledRemoveQueryConstraint = (constraintId: number) => () => {\r\n    const { elementId, dispatchRemoveQueryConstraint } = this.props;\r\n\r\n    dispatchRemoveQueryConstraint(elementId, constraintId);\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  queryConstraints: getQueryConstraints(state),\r\n  filterCapabilities: state.queryConfigReducer.filterCapabilities,\r\n  availableConstraintsObj: getAvailableConstraintsObj(state)\r\n});\r\n\r\nconst mapDispatchToProps = (\r\n  dispatch: Dispatch<FilterCapabilitiesAction | QueryConstraintAction>\r\n) => ({\r\n  dispatchFilterCapabilitiesRequest: () =>\r\n    dispatch(filterCapabilitiesRequest()),\r\n  dispatchAddQueryConstraint: (elementId: number, constraint: IConstraint) =>\r\n    dispatch(addQueryConstraint(elementId, constraint)),\r\n  dispatchUpdateQueryConstraintType: (\r\n    elementId: number,\r\n    constraintId: number,\r\n    constraintType: string\r\n  ) =>\r\n    dispatch(\r\n      updateQueryConstraintType(elementId, constraintId, constraintType)\r\n    ),\r\n  dispatchUpdateQueryConstraintValues: (\r\n    elementId: number,\r\n    constraintId: number,\r\n    constraintValues: any[]\r\n  ) =>\r\n    dispatch(\r\n      updateQueryConstraintValues(elementId, constraintId, constraintValues)\r\n    ),\r\n  dispatchRemoveQueryConstraint: (elementId: number, constraintId: number) =>\r\n    dispatch(removeQueryConstraint(elementId, constraintId))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ConstraintSelectorContainer);\r\n","import React, { SFC } from \"react\";\r\n\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  withStyles,\r\n  WithStyles\r\n} from \"@material-ui/core/styles\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\ninterface IProps extends WithStyles<typeof styles> {\r\n  currentStep: number;\r\n  completedSteps: boolean[];\r\n  dispatchCloseConfig: () => void;\r\n  dispatchGoToStep: (stepIndex: number) => void;\r\n}\r\n\r\nconst styles = ({ spacing: { unit } }: Theme) =>\r\n  createStyles({\r\n    actionButtons: {\r\n      display: \"flex\",\r\n      justifyContent: \"flex-end\",\r\n      position: \"fixed\",\r\n      bottom: unit * 6,\r\n      right: 0\r\n    },\r\n    button: {\r\n      margin: unit\r\n    }\r\n  });\r\n\r\nconst ConfigActions: SFC<IProps> = ({\r\n  classes,\r\n  currentStep,\r\n  completedSteps,\r\n  dispatchCloseConfig,\r\n  dispatchGoToStep\r\n}) => {\r\n  const handleStep = (stepIndex: number) => () => {\r\n    return dispatchGoToStep(stepIndex);\r\n  };\r\n\r\n  return (\r\n    <Grid item xs={12} className={classes.actionButtons}>\r\n      <Button\r\n        onClick={dispatchCloseConfig}\r\n        variant=\"contained\"\r\n        className={classes.button}\r\n      >\r\n        Close\r\n      </Button>\r\n      <Button\r\n        disabled={currentStep === 0}\r\n        onClick={handleStep(currentStep - 1)}\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        className={classes.button}\r\n      >\r\n        Back\r\n      </Button>\r\n      <Button\r\n        disabled={!completedSteps[currentStep]}\r\n        onClick={handleStep(currentStep + 1)}\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        className={classes.button}\r\n      >\r\n        Next\r\n      </Button>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(ConfigActions);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\n\r\nimport {\r\n  closeQueryConfig,\r\n  goToStep,\r\n  QueryConfigAction,\r\n  IGoToStep\r\n} from \"workbench/query/actions\";\r\n\r\nimport ConfigActions from \"workbench/query/ConfigActions\";\r\n\r\ninterface IOwnProps {\r\n  currentStep: number;\r\n  completedSteps: boolean[];\r\n}\r\n\r\ntype Props = IOwnProps & ReturnType<typeof mapDispatchToProps>;\r\n\r\nclass ConfigActionsContainer extends Component<Props> {\r\n  public render() {\r\n    const {\r\n      currentStep,\r\n      completedSteps,\r\n      dispatchCloseQueryConfig,\r\n      dispatchGoToStep\r\n    } = this.props;\r\n\r\n    return (\r\n      <ConfigActions\r\n        currentStep={currentStep}\r\n        completedSteps={completedSteps}\r\n        dispatchCloseConfig={dispatchCloseQueryConfig}\r\n        dispatchGoToStep={dispatchGoToStep}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (\r\n  dispatch: Dispatch<QueryConfigAction | IGoToStep>\r\n) => ({\r\n  dispatchGoToStep: (step: number) => dispatch(goToStep(step)),\r\n  dispatchCloseQueryConfig: () => dispatch(closeQueryConfig())\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(ConfigActionsContainer);\r\n","import React, { SFC } from \"react\";\r\n\r\nimport { IQuery } from \"workbench/types\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport { BackgroundLoadingContainer } from \"common/loading\";\r\nimport HelperText from \"workbench/query/HelperText\";\r\nimport StepperHeaderContainer from \"workbench/query/StepperHeaderContainer\";\r\nimport SourceSelectorContainer from \"workbench/query/sourceSelector/SourceSelectorContainer\";\r\nimport ColumnsSelectorContainer from \"workbench/query/columnSelector/ColumnsSelectorContainer\";\r\nimport ConstraintSelectorContainer from \"workbench/query/constraintSelector/ConstraintSelectorContainer\";\r\nimport ConfigActionsContainer from \"workbench/query/ConfigActionsContainer\";\r\n\r\nfunction getStepContent(currentStep: number, selectedQuery: IQuery) {\r\n  if (selectedQuery.TargetDataViewId == null) {\r\n    throw new Error(\"TargetDataViewId cannot be null.\");\r\n  }\r\n\r\n  switch (currentStep) {\r\n    case 0:\r\n      return (\r\n        <SourceSelectorContainer\r\n          elementId={selectedQuery.ElementId}\r\n          targetDataViewId={selectedQuery.TargetDataViewId}\r\n        />\r\n      );\r\n\r\n    case 1:\r\n      return <ColumnsSelectorContainer elementId={selectedQuery.ElementId} />;\r\n\r\n    case 2:\r\n      return (\r\n        <ConstraintSelectorContainer elementId={selectedQuery.ElementId} />\r\n      );\r\n\r\n    default:\r\n      return \"Unknown step\";\r\n  }\r\n}\r\n\r\ninterface IProps {\r\n  isLoading: boolean;\r\n  selectedQuery: IQuery;\r\n  currentStep: number;\r\n  completedSteps: boolean[];\r\n}\r\n\r\nconst QueryConfig: SFC<IProps> = ({\r\n  isLoading,\r\n  selectedQuery,\r\n  currentStep,\r\n  completedSteps\r\n}) => (\r\n  <BackgroundLoadingContainer isLoading={isLoading}>\r\n    <StepperHeaderContainer\r\n      currentStep={currentStep}\r\n      completedSteps={completedSteps}\r\n    />\r\n    <HelperText currentStep={currentStep} />\r\n    <Grid item xs={12}>\r\n      {getStepContent(currentStep, selectedQuery)}\r\n    </Grid>\r\n    <ConfigActionsContainer\r\n      currentStep={currentStep}\r\n      completedSteps={completedSteps}\r\n    />\r\n  </BackgroundLoadingContainer>\r\n);\r\n\r\nexport default QueryConfig;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { RootState } from \"rootReducer\";\r\nimport { getQuery, getCompletedSteps } from \"workbench/query/selectors\";\r\n\r\nimport QueryConfig from \"workbench/query/QueryConfig\";\r\n\r\nclass QueryConfigContainer extends Component<\r\n  ReturnType<typeof mapStateToProps>\r\n> {\r\n  public render() {\r\n    const {\r\n      isLoading,\r\n      selectedQuery,\r\n      currentStep,\r\n      completedSteps\r\n    } = this.props;\r\n\r\n    return (\r\n      <QueryConfig\r\n        isLoading={isLoading}\r\n        selectedQuery={selectedQuery}\r\n        currentStep={currentStep}\r\n        completedSteps={completedSteps}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  isLoading: state.queryConfigReducer.isLoading,\r\n  selectedQuery: getQuery(state),\r\n  currentStep: state.queryConfigReducer.currentStep,\r\n  completedSteps: getCompletedSteps(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(QueryConfigContainer);\r\n","import React, { SFC } from \"react\";\r\n\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  withStyles,\r\n  WithStyles\r\n} from \"@material-ui/core/styles\";\r\n\r\nimport { ElementType } from \"sidebar/operators/operatorsData\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\n\r\nimport QueryConfigContainer from \"workbench/query/QueryConfigContainer\";\r\n\r\ninterface IProps extends WithStyles<typeof styles> {\r\n  elementType: ElementType;\r\n  isDrawerOpen: boolean;\r\n}\r\n\r\nconst styles = ({ spacing }: Theme) =>\r\n  createStyles({\r\n    paper: {\r\n      width: \"85%\",\r\n      marginTop: 48\r\n    },\r\n    form: {\r\n      position: \"relative\",\r\n      height: \"100%\",\r\n      padding: spacing.unit * 2,\r\n      overflow: \"auto\",\r\n      marginBottom: 48\r\n    }\r\n  });\r\n\r\nconst drawerByType = (elementType: ElementType) => {\r\n  switch (elementType) {\r\n    case ElementType.QUERY:\r\n      return <QueryConfigContainer />;\r\n    case ElementType.FILTER:\r\n      return \"TODO\";\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nconst ConfigSwitch: SFC<IProps> = ({ classes, elementType, isDrawerOpen }) => (\r\n  <Drawer classes={{ paper: classes.paper }} anchor=\"right\" open={isDrawerOpen}>\r\n    {isDrawerOpen && (\r\n      <form className={classes.form} noValidate autoComplete=\"off\">\r\n        <Grid container spacing={16} alignContent=\"stretch\">\r\n          {drawerByType(elementType)}\r\n        </Grid>\r\n      </form>\r\n    )}\r\n  </Drawer>\r\n);\r\n\r\nexport default withStyles(styles)(ConfigSwitch);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { RootState } from \"rootReducer\";\r\nimport { isDrawerOpen } from \"workbench/configSwitch/selectors\";\r\n\r\nimport ConfigSwitch from \"workbench/configSwitch/ConfigSwitch\";\r\n\r\nclass ConfigSwitchContainer extends Component<\r\n  ReturnType<typeof mapStateToProps>\r\n> {\r\n  public render() {\r\n    return <ConfigSwitch {...this.props} />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  elementType: state.configSwitchReducer.elementType,\r\n  isDrawerOpen: isDrawerOpen(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(ConfigSwitchContainer);\r\n","import { PortModel, AbstractPortFactory } from \"storm-react-diagrams\";\r\n\r\nexport default class DiagramPortFactory extends AbstractPortFactory {\r\n  private portModel: PortModel;\r\n\r\n  constructor(portModel: PortModel) {\r\n    super(\"workbench\");\r\n    this.portModel = portModel;\r\n  }\r\n\r\n  public getNewInstance(initialConfig?: any): PortModel {\r\n    return this.portModel;\r\n  }\r\n}\r\n","import {\r\n  LinkModel,\r\n  DiagramEngine,\r\n  PortModel,\r\n  DefaultLinkModel\r\n} from \"storm-react-diagrams\";\r\n\r\nexport default class WorkbenchPortModel extends PortModel {\r\n  private position: string;\r\n\r\n  constructor(pos: \"from\" | \"to\" = \"from\") {\r\n    super(pos, \"workbench\");\r\n    this.position = pos;\r\n  }\r\n\r\n  public serialize() {\r\n    return Object.assign(super.serialize(), {\r\n      position: this.position\r\n    });\r\n  }\r\n\r\n  public deSerialize(data: any, engine: DiagramEngine) {\r\n    super.deSerialize(data, engine);\r\n    this.position = data.position;\r\n  }\r\n\r\n  public link(port: PortModel): LinkModel {\r\n    const link = this.createLinkModel();\r\n    link.setSourcePort(this);\r\n    link.setTargetPort(port);\r\n\r\n    return link;\r\n  }\r\n\r\n  public createLinkModel(): LinkModel {\r\n    return new DefaultLinkModel();\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  withStyles,\r\n  WithStyles\r\n} from \"@material-ui/core/styles\";\r\n\r\nimport {\r\n  AutoSizer,\r\n  List as VirtualizedList,\r\n  ListRowProps\r\n} from \"react-virtualized\";\r\n\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nimport SettingsIcon from \"@material-ui/icons/SettingsApplications\";\r\n\r\ninterface IProps extends WithStyles<typeof styles> {\r\n  label: string;\r\n  style: React.CSSProperties;\r\n}\r\n\r\nconst styles = createStyles({\r\n  listItem: {\r\n    padding: 0\r\n  },\r\n  itemIcon: {\r\n    marginRight: 5\r\n  },\r\n  primary: {\r\n    whiteSpace: \"nowrap\",\r\n    overflow: \"hidden\",\r\n    textOverflow: \"ellipsis\"\r\n  }\r\n});\r\n\r\nconst QueryColumn: React.SFC<IProps> = ({ classes, style, label }) => (\r\n  <ListItem style={style} className={classes.listItem} component=\"div\" dense>\r\n    <ListItemIcon className={classes.itemIcon}>\r\n      <SettingsIcon />\r\n    </ListItemIcon>\r\n    <ListItemText\r\n      className={classes.listItem}\r\n      classes={{ primary: classes.primary }}\r\n      primary={label}\r\n    />\r\n  </ListItem>\r\n);\r\n\r\nexport default withStyles(styles)(QueryColumn);\r\n","import React from \"react\";\r\nimport { PortWidget } from \"storm-react-diagrams\";\r\n\r\nimport { IColumn } from \"workbench/types\";\r\nimport QueryNodeModel from \"workbench/query/widget/QueryNodeModel\";\r\nimport { operatorsExtraInfo } from \"sidebar/operators/operatorsData\";\r\n\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  withStyles,\r\n  WithStyles\r\n} from \"@material-ui/core/styles\";\r\n\r\nimport {\r\n  AutoSizer,\r\n  List as VirtualizedList,\r\n  ListRowProps\r\n} from \"react-virtualized\";\r\n\r\nimport QueryColumn from \"workbench/query/widget/QueryColumn\";\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\ninterface IProps extends WithStyles<typeof styles> {\r\n  node: QueryNodeModel;\r\n}\r\n\r\nconst styles = ({\r\n  palette: {\r\n    background: { paper }\r\n  }\r\n}: Theme) =>\r\n  createStyles({\r\n    container: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\"\r\n    },\r\n    operatorContainer: {\r\n      display: \"flex\",\r\n      flexFlow: \"column\",\r\n      alignItems: \"center\",\r\n      borderRadius: 5,\r\n      border: \"1px solid #7b582d\",\r\n      padding: \"0px 5px 0px 5px\",\r\n      width: 165,\r\n      backgroundColor: paper\r\n    },\r\n    titleContainer: {\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      marginBottom: 5\r\n    },\r\n    avatar: {\r\n      marginRight: 10,\r\n      width: 25,\r\n      height: 25\r\n    },\r\n    list: {\r\n      overflow: \"auto\",\r\n      padding: 0,\r\n      width: 150,\r\n      marginTop: 3,\r\n      cursor: \"default\",\r\n      \"&:focus\": {\r\n        outline: 0\r\n      }\r\n    },\r\n    listItem: {\r\n      padding: 0\r\n    },\r\n    itemIcon: {\r\n      width: 10,\r\n      height: 10,\r\n      marginRight: 5\r\n    },\r\n    primary: {\r\n      whiteSpace: \"nowrap\",\r\n      overflow: \"hidden\",\r\n      textOverflow: \"ellipsis\"\r\n    },\r\n    topPort: {\r\n      position: \"relative\",\r\n      top: -9,\r\n      backgroundColor: \"#ccc\",\r\n      zIndex: -1\r\n    },\r\n    bottomPort: {\r\n      position: \"relative\",\r\n      top: 9,\r\n      backgroundColor: \"#ccc\",\r\n      borderRadius: 15,\r\n      zIndex: -1\r\n    }\r\n  });\r\n\r\nconst rowRenderer = (columns: IColumn[]) => ({\r\n  index,\r\n  key,\r\n  style\r\n}: ListRowProps) => (\r\n  <QueryColumn key={key} style={style} label={columns[index].Label} />\r\n);\r\n\r\nconst handleWheel = (event: React.WheelEvent) => {\r\n  event.stopPropagation();\r\n};\r\n\r\nconst QueryNodeWidget: React.SFC<IProps> = ({ classes, node }) => {\r\n  const { Label: QueyLabel, Columns } = node.getQueryInfo();\r\n  const { backgroundColor, IconComponent } = operatorsExtraInfo.QUERY;\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes.operatorContainer}>\r\n        <div className={classes.topPort}>\r\n          <PortWidget name=\"to\" node={node} />\r\n        </div>\r\n        <div className={classes.titleContainer}>\r\n          <Avatar className={classes.avatar} style={{ backgroundColor }}>\r\n            {React.createElement(IconComponent)}\r\n          </Avatar>\r\n          <Typography variant=\"subtitle1\" noWrap>\r\n            {QueyLabel}\r\n          </Typography>\r\n        </div>\r\n        <div>\r\n          <Typography noWrap>Columns</Typography>\r\n          <Divider />\r\n          <List className={classes.list} onWheel={handleWheel} component=\"div\">\r\n            <AutoSizer disableHeight>\r\n              {({ width }) => (\r\n                <VirtualizedList\r\n                  style={{\r\n                    outline: 0\r\n                  }}\r\n                  width={width}\r\n                  height={Math.min(Columns.length * 20, 150)}\r\n                  rowCount={Columns.length}\r\n                  rowHeight={20}\r\n                  rowRenderer={rowRenderer(Columns)}\r\n                />\r\n              )}\r\n            </AutoSizer>\r\n          </List>\r\n        </div>\r\n        <div className={classes.bottomPort}>\r\n          <PortWidget name=\"from\" node={node} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(QueryNodeWidget);\r\n","import React from \"react\";\r\nimport {\r\n  AbstractNodeFactory,\r\n  DiagramEngine,\r\n  NodeModel\r\n} from \"storm-react-diagrams\";\r\n\r\nimport QueryNodeModel from \"workbench/query/widget/QueryNodeModel\";\r\nimport QueryNodeWidget from \"workbench/query/widget/QueryNodeWidget\";\r\n\r\nexport default class QueryNodeFactory extends AbstractNodeFactory {\r\n  constructor() {\r\n    super(\"query\");\r\n  }\r\n\r\n  public generateReactWidget(\r\n    _: DiagramEngine,\r\n    node: QueryNodeModel\r\n  ): JSX.Element {\r\n    return <QueryNodeWidget node={node} />;\r\n  }\r\n\r\n  public getNewInstance() {\r\n    return new NodeModel();\r\n  }\r\n}\r\n","import { NodeModel } from \"storm-react-diagrams\";\r\n\r\nimport WidgetPortModel from \"workbench/WidgetPortModel\";\r\nimport { IQuery } from \"workbench/types\";\r\n\r\nexport default class QueryNodeModel extends NodeModel {\r\n  private queryInfo: IQuery;\r\n\r\n  constructor(queryInfo: IQuery) {\r\n    super(\"query\", queryInfo.ElementId.toString());\r\n\r\n    this.addPort(new WidgetPortModel(\"from\"));\r\n    this.addPort(new WidgetPortModel(\"to\"));\r\n    this.setPosition(queryInfo.LayoutX, queryInfo.LayoutY);\r\n\r\n    this.queryInfo = queryInfo;\r\n  }\r\n\r\n  public getQueryInfo() {\r\n    return this.queryInfo;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { PortWidget } from \"storm-react-diagrams\";\r\n\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  withStyles,\r\n  WithStyles\r\n} from \"@material-ui/core/styles\";\r\n\r\nimport FilterNodeModel from \"workbench/filter/FilterNodeModel\";\r\nimport { operatorsExtraInfo } from \"sidebar/operators/operatorsData\";\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\ninterface IProps extends WithStyles<typeof styles> {\r\n  node: FilterNodeModel;\r\n}\r\n\r\nconst styles = ({\r\n  palette: {\r\n    background: { paper }\r\n  }\r\n}: Theme) =>\r\n  createStyles({\r\n    container: {\r\n      display: \"flex\",\r\n      flexFlow: \"column\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      borderRadius: \"0px 0px 80px 80px\",\r\n      border: \"1px solid #2c5367\",\r\n      width: 155,\r\n      height: 85,\r\n      backgroundColor: paper\r\n    },\r\n    body: {\r\n      display: \"flex\",\r\n      maxWidth: 130,\r\n      marginBottom: 5\r\n    },\r\n    avatar: {\r\n      width: 25,\r\n      height: 25,\r\n      marginRight: 3\r\n    },\r\n    label: {\r\n      marginTop: 10\r\n    },\r\n    filterType: {\r\n      textAlign: \"center\"\r\n    },\r\n    topPort: {\r\n      position: \"relative\",\r\n      top: -11,\r\n      backgroundColor: \"#ccc\",\r\n      zIndex: -1\r\n    },\r\n    bottomPort: {\r\n      position: \"relative\",\r\n      top: 11,\r\n      backgroundColor: \"#ccc\",\r\n      borderRadius: 15,\r\n      zIndex: -1\r\n    }\r\n  });\r\n\r\nconst FilterNodeWidget: React.SFC<IProps> = ({ classes, node }) => {\r\n  const { Label, FilterType } = node.getFilterInfo();\r\n  const { backgroundColor, IconComponent } = operatorsExtraInfo.FILTER;\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes.topPort}>\r\n        <PortWidget name=\"to\" node={node} />\r\n      </div>\r\n      <div className={classes.body}>\r\n        <Avatar className={classes.avatar} style={{ backgroundColor }}>\r\n          {React.createElement(IconComponent)}\r\n        </Avatar>\r\n        <Typography variant=\"subtitle1\" noWrap>\r\n          {Label}\r\n        </Typography>\r\n      </div>\r\n      <Typography className={classes.filterType} noWrap>\r\n        {FilterType}\r\n      </Typography>\r\n      <div className={classes.bottomPort}>\r\n        <PortWidget name=\"from\" node={node} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(FilterNodeWidget);\r\n","import React from \"react\";\r\nimport {\r\n  AbstractNodeFactory,\r\n  DiagramEngine,\r\n  NodeModel\r\n} from \"storm-react-diagrams\";\r\n\r\nimport FilterNodeModel from \"workbench/filter/FilterNodeModel\";\r\nimport FilterNodeWidget from \"workbench/filter/FilterNodeWidget\";\r\n\r\nexport default class FilterNodeFactory extends AbstractNodeFactory {\r\n  constructor() {\r\n    super(\"filter\");\r\n  }\r\n\r\n  public generateReactWidget(\r\n    _: DiagramEngine,\r\n    node: FilterNodeModel\r\n  ): JSX.Element {\r\n    return <FilterNodeWidget node={node} />;\r\n  }\r\n\r\n  public getNewInstance() {\r\n    return new NodeModel();\r\n  }\r\n}\r\n","import { NodeModel } from \"storm-react-diagrams\";\r\n\r\nimport WidgetPortModel from \"workbench/WidgetPortModel\";\r\nimport { IInteractiveFilter } from \"workbench/types\";\r\n\r\nexport default class FilterNodeModel extends NodeModel {\r\n  private filterInfo: IInteractiveFilter;\r\n\r\n  constructor(filterInfo: IInteractiveFilter) {\r\n    super(\"filter\", filterInfo.ElementId.toString());\r\n\r\n    this.addPort(new WidgetPortModel(\"from\"));\r\n    this.addPort(new WidgetPortModel(\"to\"));\r\n    this.setPosition(filterInfo.LayoutX, filterInfo.LayoutY);\r\n\r\n    this.filterInfo = filterInfo;\r\n  }\r\n\r\n  public getFilterInfo() {\r\n    return this.filterInfo;\r\n  }\r\n}\r\n","import \"storm-react-diagrams/dist/style.min.css\";\r\n\r\nimport React, { SFC } from \"react\";\r\nimport { DiagramEngine, DiagramWidget } from \"storm-react-diagrams\";\r\n\r\nimport { createStyles, withStyles, WithStyles } from \"@material-ui/core/styles\";\r\n\r\ninterface IProps extends WithStyles<typeof styles> {\r\n  diagramEngine: DiagramEngine;\r\n  handleDrop: (event: React.DragEvent<HTMLDivElement>) => void;\r\n  handleDragOver: (event: React.DragEvent<HTMLDivElement>) => void;\r\n}\r\n\r\nconst styles = createStyles({\r\n  canvasContainer: {\r\n    height: \"100%\",\r\n    width: \"100%\"\r\n  },\r\n  canvas: {\r\n    height: \"100%\",\r\n    width: \"100%\"\r\n  }\r\n});\r\n\r\nconst Workbench: SFC<IProps> = ({\r\n  classes,\r\n  diagramEngine,\r\n  handleDragOver,\r\n  handleDrop\r\n}) => (\r\n  <div\r\n    className={classes.canvasContainer}\r\n    onDrop={handleDrop}\r\n    onDragOver={handleDragOver}\r\n  >\r\n    <DiagramWidget\r\n      className={classes.canvas}\r\n      diagramEngine={diagramEngine}\r\n      maxNumberPointsPerLink={0}\r\n      allowLooseLinks={false}\r\n    />\r\n  </div>\r\n);\r\n\r\nexport default withStyles(styles)(Workbench);\r\n","import \"storm-react-diagrams/dist/style.min.css\";\r\n\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport { match as Match } from \"react-router\";\r\nimport { DiagramModel, DiagramEngine, NodeModel } from \"storm-react-diagrams\";\r\n\r\nimport { RootState } from \"rootReducer\";\r\nimport {\r\n  sessionRequest,\r\n  addQuery,\r\n  SessionAction,\r\n  QueryAction\r\n} from \"workbench/actions\";\r\nimport { ElementType } from \"sidebar/operators/operatorsData\";\r\n\r\nimport { destroySessionAsync } from \"workbench/api\";\r\n\r\nimport WidgetPortFactory from \"workbench/WidgetPortFactory\";\r\nimport WidgetPortModel from \"workbench/WidgetPortModel\";\r\n\r\nimport QueryNodeFactory from \"workbench/query/widget/QueryNodeFactory\";\r\nimport QueryNodeModel from \"workbench/query/widget/QueryNodeModel\";\r\n\r\nimport FilterNodeFactory from \"workbench/filter/FilterNodeFactory\";\r\nimport FilterNodeModel from \"workbench/filter/FilterNodeModel\";\r\n\r\nimport { LoadingContainer } from \"common/loading\";\r\nimport Canvas from \"workbench/Canvas\";\r\n\r\ninterface IRouterProps {\r\n  match: Match<{ id: string }>;\r\n}\r\n\r\ntype Props = ReturnType<typeof mapDispatchToProps> &\r\n  ReturnType<typeof mapStateToProps> &\r\n  IRouterProps;\r\n\r\ninterface ILocalState {\r\n  node: NodeModel;\r\n}\r\n\r\nclass CanvasContainer extends Component<Props, ILocalState> {\r\n  private diagramEngine: DiagramEngine;\r\n  private activeModel: DiagramModel;\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.diagramEngine = new DiagramEngine();\r\n    this.diagramEngine.installDefaultFactories();\r\n\r\n    this.diagramEngine.registerPortFactory(\r\n      new WidgetPortFactory(new WidgetPortModel())\r\n    );\r\n    this.diagramEngine.registerNodeFactory(new QueryNodeFactory());\r\n    this.diagramEngine.registerNodeFactory(new FilterNodeFactory());\r\n\r\n    this.activeModel = new DiagramModel();\r\n    this.diagramEngine.setDiagramModel(this.activeModel);\r\n  }\r\n\r\n  public componentDidMount() {\r\n    const { match } = this.props;\r\n    const dataViewId = match.params.id === \"new\" ? undefined : match.params.id;\r\n\r\n    this.props.dispatchSessionRequest(dataViewId);\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: Props) {\r\n    const currentSession = this.props.session;\r\n    if (currentSession == null) {\r\n      return;\r\n    }\r\n\r\n    const prevSession = prevProps.session;\r\n    if (\r\n      prevSession == null ||\r\n      currentSession.SessionId !== prevSession.SessionId\r\n    ) {\r\n      const queryNodes = Object.keys(this.props.queries).map(\r\n        id => new QueryNodeModel(this.props.queries[id])\r\n      );\r\n\r\n      const filterNodes = Object.keys(this.props.filters).map(\r\n        id => new FilterNodeModel(this.props.filters[id])\r\n      );\r\n\r\n      this.activeModel.addAll(...queryNodes);\r\n      this.activeModel.addAll(...filterNodes);\r\n\r\n      const links = [];\r\n      for (const id of Object.keys(this.props.connections)) {\r\n        const connection = this.props.connections[id];\r\n\r\n        const nodeFrom = this.activeModel.getNode(\r\n          connection.FromElementId.toString()\r\n        );\r\n\r\n        const nodeTo = this.activeModel.getNode(\r\n          connection.ToElementId.toString()\r\n        );\r\n\r\n        if (nodeFrom == null || nodeTo == null) {\r\n          return;\r\n        }\r\n\r\n        const portFrom = nodeFrom.getPort(\"from\") as WidgetPortModel;\r\n        const portTo = nodeTo.getPort(\"to\") as WidgetPortModel;\r\n\r\n        const link = portFrom.link(portTo);\r\n\r\n        links.push(link);\r\n      }\r\n\r\n      this.activeModel.addAll(...links);\r\n    }\r\n  }\r\n\r\n  // public componentWillUnmount() {\r\n  //   const {\r\n  //     session: { TenantId, SessionId }\r\n  //   } = this.props;\r\n  //   destroySessionAsync(TenantId, SessionId).catch((e: any) => {\r\n  //     // tslint:disable-next-line:no-console\r\n  //     console.log(e);\r\n  //   });\r\n  // }\r\n\r\n  public render() {\r\n    const {\r\n      isLoading\r\n      // dispatchAddQuery,\r\n      // session,\r\n      // graph,\r\n      // queries,\r\n      // connections,\r\n      // filters\r\n    } = this.props;\r\n\r\n    return (\r\n      <LoadingContainer isLoading={isLoading}>\r\n        <Canvas\r\n          diagramEngine={this.diagramEngine}\r\n          handleDragOver={this.handleDragOver}\r\n          handleDrop={this.handleDrop}\r\n          // session={session}\r\n          // queries={queries}\r\n          // connections={connections}\r\n          // filters={filters}\r\n        />\r\n      </LoadingContainer>\r\n    );\r\n  }\r\n\r\n  private handleDragOver = (event: React.DragEvent<HTMLDivElement>) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  private handleDrop = (event: React.DragEvent<HTMLDivElement>) => {\r\n    const { graph, dispatchAddQuery } = this.props;\r\n\r\n    if (graph == null) {\r\n      throw new Error(\"Graph cannot be null.\");\r\n    }\r\n\r\n    const operatorServiceId = event.dataTransfer.getData(\"ELEMENT\");\r\n    const points = this.diagramEngine.getRelativeMousePoint(event);\r\n\r\n    switch (operatorServiceId) {\r\n      case ElementType.QUERY:\r\n        dispatchAddQuery(graph.NextElementId, points.x, points.y);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    // const data = JSON.parse(event.dataTransfer.getData(\"ELEMENT\"));\r\n    // const points = this.diagramEngine.getRelativeMousePoint(event);\r\n    // const node = new QueryNodeModel(\"Pippo\", points.x, points.y);\r\n    // this.diagramEngine.getDiagramModel().addNode(node);\r\n    // // Updating the state triggers a re render.\r\n    // this.setState({\r\n    //   node\r\n    // });\r\n  };\r\n}\r\n\r\nconst mapStateToProps = ({ sessionReducer: { ...state } }: RootState) => state;\r\n\r\nconst mapDispatchToProps = (\r\n  dispatch: Dispatch<SessionAction | QueryAction>\r\n) => ({\r\n  dispatchSessionRequest: (dataViewId?: string) => {\r\n    dispatch(sessionRequest(dataViewId));\r\n  },\r\n  dispatchAddQuery: (elementId: number, x: number, y: number) =>\r\n    dispatch(addQuery(elementId, x, y))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CanvasContainer);\r\n","import React, { SFC, Fragment } from \"react\";\r\nimport { match as Match } from \"react-router\";\r\n\r\nimport { createStyles, withStyles, WithStyles } from \"@material-ui/core/styles\";\r\n\r\nimport WorkbenchToolbar from \"workbench/toolBar/WorkbenchToolbar\";\r\nimport ConfigSwitchContainer from \"workbench/configSwitch/ConfigSwitchContainer\";\r\nimport CanvasContainer from \"workbench/CanvasContainer\";\r\n\r\ninterface IProps extends WithStyles<typeof styles> {\r\n  match: Match<{ id: string }>;\r\n}\r\n\r\nconst styles = createStyles({\r\n  workbench: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    border: \"3px solid #ccc\",\r\n    backgroundColor: \"#ccc\"\r\n  },\r\n  canvasContainer: {\r\n    borderRadius: 5,\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    backgroundColor: \"#3c3c3c\",\r\n    backgroundImage: `linear-gradient(\r\n      0deg,\r\n      transparent 24%,\r\n      rgba(255, 255, 255, 0.05) 25%,\r\n      rgba(255, 255, 255, 0.05) 26%,\r\n      transparent 27%,\r\n      transparent 74%,\r\n      rgba(255, 255, 255, 0.05) 75%,\r\n      rgba(255, 255, 255, 0.05) 76%,\r\n      transparent 77%,\r\n      transparent\r\n    ),\r\n    linear-gradient(\r\n      90deg,\r\n      transparent 24%,\r\n      rgba(255, 255, 255, 0.05) 25%,\r\n      rgba(255, 255, 255, 0.05) 26%,\r\n      transparent 27%,\r\n      transparent 74%,\r\n      rgba(255, 255, 255, 0.05) 75%,\r\n      rgba(255, 255, 255, 0.05) 76%,\r\n      transparent 77%,\r\n      transparent\r\n    )`,\r\n    backgroundSize: \"50px 50px\"\r\n  }\r\n});\r\n\r\nconst Workbench: SFC<IProps> = ({ classes, match }) => (\r\n  <div className={classes.workbench}>\r\n    <WorkbenchToolbar />\r\n    <ConfigSwitchContainer />\r\n    <div className={classes.canvasContainer}>\r\n      <CanvasContainer match={match} />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default withStyles(styles)(Workbench);\r\n"],"sourceRoot":""}
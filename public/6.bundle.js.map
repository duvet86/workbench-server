{"version":3,"sources":["webpack:///./src/workbench/utils.ts","webpack:///./src/workbench/toolBar/WorkbenchToolbar.tsx","webpack:///./src/workbench/configSwitch/selectors.ts","webpack:///./src/workbench/query/selectors.ts","webpack:///./src/workbench/query/HelperText.tsx","webpack:///./src/workbench/query/StepperHeader.tsx","webpack:///./src/workbench/query/StepperHeaderContainer.tsx","webpack:///./src/common/select/Option.tsx","webpack:///./src/common/select/NoOption.tsx","webpack:///./src/common/select/SelectInput.tsx","webpack:///./src/common/select/SelectInputContainer.tsx","webpack:///./src/workbench/query/sourceSelector/SourceSelector.tsx","webpack:///./src/workbench/query/sourceSelector/SourceSelectorContainer.tsx","webpack:///./src/common/searchableList/Row.tsx","webpack:///./src/common/searchableList/SearchableList.tsx","webpack:///./src/common/searchableList/SearchableListContainer.tsx","webpack:///./src/workbench/query/columnSelector/ColumnsSelector.tsx","webpack:///./src/workbench/query/columnSelector/ColumnsSelectorContainer.tsx","webpack:///./src/workbench/query/constraintSelector/ConstraintSelector.tsx","webpack:///./src/workbench/query/constraintSelector/ConstraintSelectorContainer.tsx","webpack:///./src/workbench/query/ConfigActions.tsx","webpack:///./src/workbench/query/ConfigActionsContainer.tsx","webpack:///./src/workbench/query/QueryConfig.tsx","webpack:///./src/workbench/query/QueryConfigContainer.tsx","webpack:///./src/workbench/configSwitch/ConfigSwitch.tsx","webpack:///./src/workbench/configSwitch/ConfigSwitchContainer.tsx","webpack:///./src/workbench/WidgetPortFactory.ts","webpack:///./src/workbench/WidgetPortModel.ts","webpack:///./src/workbench/query/widget/QueryColumn.tsx","webpack:///./src/workbench/query/widget/QueryNodeWidget.tsx","webpack:///./src/workbench/query/widget/QueryNodeFactory.tsx","webpack:///./src/workbench/query/widget/QueryNodeModel.ts","webpack:///./src/workbench/filter/FilterNodeWidget.tsx","webpack:///./src/workbench/filter/FilterNodeFactory.tsx","webpack:///./src/workbench/filter/FilterNodeModel.ts","webpack:///./src/workbench/Canvas.tsx","webpack:///./src/workbench/CanvasContainer.tsx","webpack:///./src/workbench/Workbench.tsx"],"names":["DATA_TYPES","toolbarData","id","label","IconComponent","RestorePage_default","a","Save_default","Share_default","Undo_default","Redo_default","OpenWith_default","ArrowDownward_default","newWorkbenchLink","className","children","react_default","createElement","Link","to","toolBar_WorkbenchToolbar","Object","styles","spacing","root","position","right","marginRight","marginTop","zIndex","toolBar","minHeight","leftIcon","fill","unit","classes","Paper_default","Toolbar_default","disableGutters","map","Button_default","key","size","component","selectors_isDrawerOpen","lib","state","configSwitchReducer","elementType","operatorsData","NONE","getDataServices","queryConfigReducer","dataServices","ItemId","Label","value","sort","b","elementIdSelector","elementId","querySelector","sessionReducer","queries","availableColumnsSelector","availableColumns","getAvailableColumns","filter","ac","Columns","c","ColumnName","includes","getQuery","getQueryColumns","getCompletedSteps","selectedQuery","length","TargetDataViewId","noteSupportedDataTypes","getConstraintTargets","availableFilters","columns","filters","filtersSelect","FilterName","DataType","ToColumnName","dataType","toColumnName","columnsSelect","some","concat","availConstraint","Constraints","queryConstraint","getQueryConstraints","constraint","constraintDsiplayValue","assign","INTERVALVALUE","Values","intervalType","intervalString","intervalLabel","TEXTVALUE","TEXTVALUEWITHLABEL","TEXTVALUEWITHMASK","TEXTVALUEWITHORDER","BOOLVALUE","INTVALUE","DOUBLEVALUE","getConstraintDisplayValue","query_HelperText","currentStep","title","text","Grid_default","item","xs","Card_default","CardHeader_default","avatar","Avatar_default","InfoOutlined_default","subheader","query_StepperHeader","gridTitle","width","backgroundColor","borderBottom","titleContainer","display","alignItems","marginBottom","stepper","padding","stepTitle","stepLabels","completedSteps","dispatchGoToStep","react","Typography_default","variant","Stepper_default","nonLinear","activeStep","index","Step_default","StepButton_default","onClick","stepIndex","handleStep","disabled","completed","StepperHeaderContainer_stepLabels","query_StepperHeaderContainer","es","dispatch","step","actions","[object Object]","this","props","select_Option","menuItem","labelContainer","style","OptionsIcon","option","handleClick","MenuItem_default","ListItemIcon_default","select_NoOption","color","noRowsRenderer","select_SelectInput","containerRef","inputLabel","helperText","options","handleInputClick","handleInputChange","noClear","handleClickClearSelected","handleMouseDownPassword","anchorEl","handleClose","handleOptionClick","ref","FormControl_default","fullWidth","InputLabel_default","htmlFor","Input_default","onChange","endAdornment","InputAdornment_default","IconButton_default","aria-label","onMouseDown","Clear_default","Menu_default","disableAutoFocus","disableAutoFocusItem","disableRestoreFocus","MenuListProps","disablePadding","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","open","onClose","current","dist_es","offsetWidth","height","Math","min","rowCount","rowHeight","rowRenderer","FormHelperText_default","SelectInputContainer_SelectInputContainer","Component","super","createRef","event","preventDefault","setState","undefined","currentTarget","toUpperCase","target","_","handleChange","selectedOption","find","SourceSelector_styles","iconColour","SourceSelector_OptionsIcon","Storage_default","sourceSelector_SourceSelector","targetDataViewId","handleChangeDataService","sourceSelector_SourceSelectorContainer","dispatchDataServicesRequest","dispatchUpdateDataService","workbench_actions","Row_styles","listItem","paddingLeft","listItemText","listItemTextPrimary","flexBasis","searchableList_Row","ListItem_default","divider","dense","button","ContainerComponent","SettingsApplications_default","ListItemText_default","primary","SearchableList_styles","list","paper","SearchableList_noRowsRenderer","searchableList_SearchableList","totItems","searchableItems","searchString","handleItemClick","handleClickClearIcon","List_default","disableHeight","SearchableList_rowRenderer","filterTextSelector","itemsSelector","items","SearchableListContainer_SearchableListContainer","filterList","filterText","filteredList","columnSelector_ColumnsSelector","listContainer","top","selectedColumns","handleAddQueryColumn","handleRemoveQueryColumn","container","KeyboardArrowRight_default","KeyboardArrowLeft_default","ColumnsSelectorContainer_availableColumnsSelector","selectedColumnsSelector","columnSelector_ColumnsSelectorContainer","dispatchAddQueryColumn","column","dispatchRemoveQueryColumn","columnName","availableColumnOptions","selectedColumnOptions","Aggregation","constraintSelector_ConstraintSelector","constraintTargetSelect","constraintIconColour","targetLabel","margin","typeSelect","valueInput","flexGrow","constraintIcon","contraintTargets","queryConstraints","filterCapabilities","handledAddQueryConstraint","handledUpdateQueryConstraintType","handledUpdateQueryConstraintValues","handledRemoveQueryConstraint","FilterList_default","ConstraintId","FilterType","Select_default","autoWidth","Type","n","autoFocus","Delete_default","constraintSelector_ConstraintSelectorContainer","dispatchFilterCapabilitiesRequest","dispatchAddQueryConstraint","dispatchUpdateQueryConstraintType","constraintId","constraintType","dispatchUpdateQueryConstraintValues","constraintValues","dispatchRemoveQueryConstraint","selectedTarget","ConstraintName","valuesObj","values","valuesHint","vectorValues","SELECT","TEXTINPUTLIST","MULTISELECT","getConstraintVectorValue","query_ConfigActions","actionButtons","justifyContent","bottom","dispatchCloseConfig","query_ConfigActionsContainer","dispatchCloseQueryConfig","query_QueryConfig","isLoading","loading","Error","ElementId","getStepContent","query_QueryConfigContainer","configSwitch_ConfigSwitch","form","overflow","isDrawerOpen","Drawer_default","anchor","noValidate","autoComplete","alignContent","QUERY","FILTER","drawerByType","configSwitch_ConfigSwitchContainer","WidgetPortFactory_DiagramPortFactory","main","portModel","initialConfig","WidgetPortModel_WorkbenchPortModel","pos","serialize","data","engine","deSerialize","port","link","createLinkModel","setSourcePort","setTargetPort","QueryColumn_styles","itemIcon","whiteSpace","textOverflow","widget_QueryColumn","handleWheel","stopPropagation","widget_QueryNodeWidget","palette","background","operatorContainer","flexFlow","borderRadius","border","&:focus","outline","topPort","bottomPort","node","QueyLabel","getQueryInfo","name","noWrap","Divider_default","onWheel","QueryNodeWidget_rowRenderer","QueryNodeFactory_QueryNodeFactory","QueryNodeModel_QueryNodeModel","queryInfo","toString","addPort","setPosition","LayoutX","LayoutY","filter_FilterNodeWidget","body","maxWidth","filterType","textAlign","getFilterInfo","FilterNodeFactory_FilterNodeFactory","FilterNodeModel_FilterNodeModel","filterInfo","Canvas_styles","canvasContainer","canvas","Canvas","diagramEngine","handleDragOver","handleDrop","onDrop","onDragOver","maxNumberPointsPerLink","allowLooseLinks","workbench_CanvasContainer","_a","__rest","dispatchSessionRequest","dataViewId","dispatchAddQuery","x","y","graph","operatorServiceId","dataTransfer","getData","points","getRelativeMousePoint","NextElementId","installDefaultFactories","registerPortFactory","registerNodeFactory","activeModel","setDiagramModel","match","params","prevProps","currentSession","session","prevSession","SessionId","queryNodes","keys","filterNodes","addAll","links","connections","connection","nodeFrom","getNode","FromElementId","nodeTo","ToElementId","portFrom","getPort","portTo","push","Workbench_styles","workbench","backgroundImage","backgroundSize","__webpack_exports__"],"mappings":"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","file":"6.bundle.js","sourcesContent":["import { IConstraint } from \"workbench/types\";\r\nimport { IOption } from \"common/select/SelectInputContainer\";\r\n\r\nimport NewIcon from \"@material-ui/icons/RestorePage\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport UndoIcon from \"@material-ui/icons/Undo\";\r\nimport RedoIcon from \"@material-ui/icons/Redo\";\r\nimport OpenWithIcon from \"@material-ui/icons/OpenWith\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\n\r\ntype QueryContraint = IConstraint & IOption;\r\n\r\nexport enum DATA_TYPES {\r\n  NOTSPECIFIED = \"NotSpecified\",\r\n  TEXTVALUE = \"TextValue\",\r\n  BOOLVALUE = \"BoolValue\",\r\n  INTERVALVALUE = \"Interval\",\r\n  INTVALUE = \"IntValue\",\r\n  DOUBLEVALUE = \"DoubleValue\",\r\n  TEXTVALUEWITHLABEL = \"TextValueWithLabel\",\r\n  TEXTVALUEWITHMASK = \"TextValueWithMask\",\r\n  TEXTVALUEWITHORDER = \"TextValueWithOrder\",\r\n  SELECT = \"Select\",\r\n  TEXTINPUTLIST = \"TextInputList\",\r\n  MULTISELECT = \"MultiSelect\"\r\n}\r\n\r\nexport const toolbarData = [\r\n  {\r\n    id: 0,\r\n    label: \"New\",\r\n    IconComponent: NewIcon\r\n  },\r\n  {\r\n    id: 1,\r\n    label: \"Save\",\r\n    IconComponent: SaveIcon\r\n  },\r\n  {\r\n    id: 2,\r\n    label: \"Save As\",\r\n    IconComponent: SaveIcon\r\n  },\r\n  {\r\n    id: 3,\r\n    label: \"Share\",\r\n    IconComponent: ShareIcon\r\n  },\r\n  {\r\n    id: 4,\r\n    label: \"Undo\",\r\n    IconComponent: UndoIcon\r\n  },\r\n  {\r\n    id: 5,\r\n    label: \"Redo\",\r\n    IconComponent: RedoIcon\r\n  },\r\n  {\r\n    id: 6,\r\n    label: \"Layout\",\r\n    IconComponent: OpenWithIcon\r\n  },\r\n  {\r\n    id: 7,\r\n    label: \"Export Graph\",\r\n    IconComponent: ArrowDownwardIcon\r\n  }\r\n];\r\n\r\nexport function getConstraintDisplayValue(constraint: IConstraint) {\r\n  const constraintDsiplayValue: QueryContraint = Object.assign(\r\n    {\r\n      label: constraint.ColumnName,\r\n      value: \"\"\r\n    },\r\n    constraint\r\n  );\r\n  switch (constraint.DataType) {\r\n    case DATA_TYPES.INTERVALVALUE:\r\n      constraintDsiplayValue.value = constraint.Values && {\r\n        intervalType: constraint.Values[0][0],\r\n        intervalString: constraint.Values[0][1],\r\n        intervalLabel: constraint.Values[0][2]\r\n      };\r\n      break;\r\n\r\n    case DATA_TYPES.TEXTVALUE:\r\n    case DATA_TYPES.TEXTVALUEWITHLABEL:\r\n    case DATA_TYPES.TEXTVALUEWITHMASK:\r\n    case DATA_TYPES.TEXTVALUEWITHORDER:\r\n    case DATA_TYPES.BOOLVALUE:\r\n    case DATA_TYPES.INTVALUE:\r\n    case DATA_TYPES.DOUBLEVALUE:\r\n      constraintDsiplayValue.value = constraint.Values\r\n        ? constraint.Values[0][0]\r\n        : \"\";\r\n      break;\r\n    // case DATA_TYPES.SELECT:\r\n    //   c.displayValue = {\r\n    //     valuesHint: valuesHint ? valuesHint : \"NoHint\",\r\n    //     values: values,\r\n    //     valuesDisplayStringsPreview: valuesDisplayStringsPreview\r\n    //   };\r\n    //   break;\r\n    // case DATA_TYPES.TEXTINPUTLIST:\r\n    // case DATA_TYPES.MULTISELECT:\r\n    //   c.displayValue = {\r\n    //     valuesHint: valuesHint ? valuesHint : \"SelectedAll\",\r\n    //     values: values,\r\n    //     valuesDisplayStringsPreview: valuesDisplayStringsPreview\r\n    //   };\r\n    //   break;\r\n    default:\r\n      constraintDsiplayValue.value = \"\";\r\n      break;\r\n  }\r\n\r\n  return constraintDsiplayValue;\r\n}\r\n\r\ninterface IConstraintVectorValue {\r\n  vectorValues: object[][];\r\n  valuesHint?: string;\r\n}\r\n\r\nexport function getConstraintVectorValue(\r\n  dataType: string,\r\n  values: any, // Fix me.\r\n  valuesHint?: string\r\n) {\r\n  const valuesObj: IConstraintVectorValue = {\r\n    vectorValues: [[values]],\r\n    valuesHint: \"NoHint\"\r\n  };\r\n\r\n  switch (dataType) {\r\n    case DATA_TYPES.INTERVALVALUE:\r\n      valuesObj.vectorValues = [\r\n        [values.intervalType, values.intervalString, values.intervalLabel]\r\n      ];\r\n      break;\r\n\r\n    case DATA_TYPES.SELECT:\r\n    case DATA_TYPES.TEXTINPUTLIST:\r\n    case DATA_TYPES.MULTISELECT:\r\n      valuesObj.vectorValues = values.values;\r\n      valuesObj.valuesHint = valuesHint;\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return valuesObj;\r\n}\r\n","import React, { SFC } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  withStyles,\r\n  WithStyles\r\n} from \"@material-ui/core/styles\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Button, { ButtonProps } from \"@material-ui/core/Button\";\r\n\r\nimport { toolbarData } from \"workbench/utils\";\r\n\r\nconst styles = ({ spacing }: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      position: \"absolute\",\r\n      right: 0,\r\n      marginRight: 10,\r\n      marginTop: 10,\r\n      zIndex: 1\r\n    },\r\n    toolBar: {\r\n      minHeight: 0\r\n    },\r\n    leftIcon: {\r\n      fill: \"#bdbdbd\",\r\n      marginRight: spacing.unit\r\n    }\r\n  });\r\n\r\nconst newWorkbenchLink = ({ className, children }: ButtonProps) => (\r\n  <Link className={className} to=\"/workbench/new\">\r\n    {children}\r\n  </Link>\r\n);\r\n\r\nconst WorkbenchToolbar: SFC<WithStyles<typeof styles>> = ({ classes }) => (\r\n  <Paper className={classes.root}>\r\n    <Toolbar className={classes.toolBar} disableGutters>\r\n      {toolbarData.map(({ id, label, IconComponent }) => (\r\n        <Button key={id} size=\"small\" component={newWorkbenchLink}>\r\n          <IconComponent className={classes.leftIcon} />\r\n          {label}\r\n        </Button>\r\n      ))}\r\n    </Toolbar>\r\n  </Paper>\r\n);\r\n\r\nexport default withStyles(styles)(WorkbenchToolbar);\r\n","import { createSelector } from \"reselect\";\r\n\r\nimport { RootState } from \"rootReducer\";\r\nimport { ElementType } from \"sidebar/operators/operatorsData\";\r\n\r\nconst elementTypeSelector = (state: RootState) =>\r\n  state.configSwitchReducer.elementType;\r\n\r\nexport const isDrawerOpen = createSelector(\r\n  elementTypeSelector,\r\n  elementType => elementType !== ElementType.NONE\r\n);\r\n","import { createSelector } from \"reselect\";\r\n\r\nimport { RootState } from \"rootReducer\";\r\nimport { getConstraintDisplayValue } from \"workbench/utils\";\r\nimport { IOption } from \"common/select/SelectInputContainer\";\r\n\r\nexport interface IConstraintTarget {\r\n  key: string;\r\n  label: string;\r\n  dataType: string;\r\n  toColumnName?: string;\r\n}\r\n\r\nconst dataServicesSelector = (state: RootState) =>\r\n  state.queryConfigReducer.dataServices;\r\n\r\nexport const getDataServices = createSelector(\r\n  dataServicesSelector,\r\n  dataServices =>\r\n    dataServices\r\n      .map(({ ItemId, Label }) => ({\r\n        value: ItemId,\r\n        label: Label\r\n      }))\r\n      .sort((a, b) => {\r\n        if (a.label < b.label) {\r\n          return -1;\r\n        }\r\n        if (a.label > b.label) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      })\r\n);\r\n\r\nconst elementIdSelector = (state: RootState) =>\r\n  state.queryConfigReducer.elementId;\r\nconst querySelector = (state: RootState) => state.sessionReducer.queries;\r\nconst availableColumnsSelector = (state: RootState) =>\r\n  state.queryConfigReducer.availableColumns;\r\n\r\nexport const getAvailableColumns = createSelector(\r\n  elementIdSelector,\r\n  querySelector,\r\n  availableColumnsSelector,\r\n  (elementId, queries, availableColumns) =>\r\n    availableColumns.filter(\r\n      ac =>\r\n        !queries[elementId].Columns.map(c => c.ColumnName).includes(\r\n          ac.ColumnName\r\n        )\r\n    )\r\n);\r\n\r\nexport const getQuery = createSelector(\r\n  elementIdSelector,\r\n  querySelector,\r\n  (elementId, queries) => queries[elementId]\r\n);\r\n\r\nexport const getQueryColumns = createSelector(\r\n  elementIdSelector,\r\n  querySelector,\r\n  (elementId, queries) => queries[elementId].Columns\r\n);\r\n\r\nexport const getCompletedSteps = createSelector(\r\n  elementIdSelector,\r\n  querySelector,\r\n  (elementId, queries) => {\r\n    const selectedQuery = queries[elementId];\r\n\r\n    if (selectedQuery.Columns.length > 0) {\r\n      return [true, true, true, false];\r\n    }\r\n    if (selectedQuery.TargetDataViewId) {\r\n      return [true, false];\r\n    }\r\n\r\n    return [false];\r\n  }\r\n);\r\n\r\nconst availableFiltersSelector = (state: RootState) =>\r\n  state.queryConfigReducer.availableFilters;\r\n\r\nconst noteSupportedDataTypes = [\"DateTimeValue\", \"DateValue\", \"TimeValue\"];\r\n\r\n// NOTE: date types are not supported yet.\r\nexport const getConstraintTargets = createSelector(\r\n  availableColumnsSelector,\r\n  availableFiltersSelector,\r\n  elementIdSelector,\r\n  querySelector,\r\n  (columns, filters, elementId, queries) => {\r\n    const filtersSelect = filters.map<IOption<IConstraintTarget>>(\r\n      ({ Label, FilterName, DataType, ToColumnName }) => ({\r\n        value: {\r\n          key: FilterName,\r\n          label: Label,\r\n          dataType: DataType,\r\n          toColumnName: ToColumnName\r\n        },\r\n        label: Label + \" (F)\"\r\n      })\r\n    );\r\n\r\n    const columnsSelect = columns\r\n      .filter(({ DataType }) => !noteSupportedDataTypes.includes(DataType))\r\n      .filter(\r\n        ({ ColumnName }) =>\r\n          !filters.some(\r\n            ({ ToColumnName }) =>\r\n              ToColumnName != null && ToColumnName === ColumnName\r\n          )\r\n      )\r\n      .map<IOption<IConstraintTarget>>(({ Label, ColumnName, DataType }) => ({\r\n        value: {\r\n          key: ColumnName,\r\n          label: Label,\r\n          dataType: DataType\r\n        },\r\n        label: Label\r\n      }));\r\n\r\n    return filtersSelect\r\n      .concat(columnsSelect)\r\n      .filter(\r\n        availConstraint =>\r\n          !queries[elementId].Constraints.some(\r\n            queryConstraint =>\r\n              availConstraint.value.key === queryConstraint.FilterName ||\r\n              availConstraint.value.key === queryConstraint.ColumnName\r\n          )\r\n      );\r\n  }\r\n);\r\n\r\nexport const getQueryConstraints = createSelector(\r\n  elementIdSelector,\r\n  querySelector,\r\n  (elementId, queries) =>\r\n    queries[elementId].Constraints.map(c => getConstraintDisplayValue(c))\r\n);\r\n","import React, { SFC } from \"react\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nimport InfoIcon from \"@material-ui/icons/InfoOutlined\";\r\n\r\ninterface IProps {\r\n  currentStep: number;\r\n}\r\n\r\nconst HelperText: SFC<IProps> = ({ currentStep }) => {\r\n  let title = \"\";\r\n  let text = \"\";\r\n\r\n  switch (currentStep) {\r\n    case 0:\r\n      title = \"Query source\";\r\n      text = `Select from the drop down the source of your query.\r\n        It can be a data source or an existing query.\r\n        Once you are done go to the next step clicking on the next button.`;\r\n      break;\r\n    case 1:\r\n      title = \"Query columns\";\r\n      text = `Each source presents a list of available columns.\r\n        You can search for a particular column using the search input.\r\n        Click on a column on the available list to move it to the selected list.\r\n        To remove a column from the selected list click on it again.`;\r\n      break;\r\n    case 2:\r\n      title = \"Query Constraints\";\r\n      text = `Narrow down your data with constraints.\r\n        Constraints are part of the query you are creating and are not visible outside of it.`;\r\n      break;\r\n    default:\r\n      return null;\r\n  }\r\n\r\n  return (\r\n    <Grid item xs={12}>\r\n      <Card>\r\n        <CardHeader\r\n          avatar={\r\n            <Avatar>\r\n              <InfoIcon />\r\n            </Avatar>\r\n          }\r\n          title={title}\r\n          subheader={text}\r\n        />\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default HelperText;\r\n","import React, { Fragment, SFC } from \"react\";\r\n\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  withStyles,\r\n  WithStyles\r\n} from \"@material-ui/core/styles\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepButton from \"@material-ui/core/StepButton\";\r\n\r\ninterface IProps extends WithStyles<typeof styles> {\r\n  title: string;\r\n  stepLabels: string[];\r\n  currentStep: number;\r\n  completedSteps: boolean[];\r\n  dispatchGoToStep: (stepIndex: number) => void;\r\n}\r\n\r\nconst styles = ({ spacing }: Theme) =>\r\n  createStyles({\r\n    gridTitle: {\r\n      position: \"fixed\",\r\n      width: \"99%\",\r\n      backgroundColor: \"white\",\r\n      zIndex: 2,\r\n      borderBottom: \"1px solid #eee\"\r\n    },\r\n    titleContainer: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      marginBottom: spacing.unit * 2\r\n    },\r\n    title: {\r\n      marginRight: spacing.unit * 2\r\n    },\r\n    stepper: {\r\n      padding: 0,\r\n      width: \"100%\"\r\n    },\r\n    stepTitle: {\r\n      marginTop: 85\r\n    }\r\n  });\r\n\r\nconst StepperHeader: SFC<IProps> = ({\r\n  classes,\r\n  title,\r\n  stepLabels,\r\n  currentStep,\r\n  completedSteps,\r\n  dispatchGoToStep\r\n}) => {\r\n  const handleStep = (stepIndex: number) => () => {\r\n    return dispatchGoToStep(stepIndex);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid item xs={12} className={classes.gridTitle}>\r\n        <div className={classes.titleContainer}>\r\n          <Typography variant=\"title\" className={classes.title}>\r\n            {title}\r\n          </Typography>\r\n        </div>\r\n        <Stepper\r\n          classes={{ root: classes.stepper }}\r\n          nonLinear\r\n          activeStep={currentStep}\r\n        >\r\n          {stepLabels.map((label, index) => (\r\n            <Step key={label}>\r\n              <StepButton\r\n                onClick={handleStep(index)}\r\n                disabled={completedSteps[index] == null}\r\n                completed={completedSteps[index]}\r\n              >\r\n                {label}\r\n              </StepButton>\r\n            </Step>\r\n          ))}\r\n        </Stepper>\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.stepTitle}>\r\n        <Typography variant=\"headline\">\r\n          {`Step ${currentStep + 1}: ${stepLabels[currentStep]}`}\r\n        </Typography>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(StepperHeader);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\n\r\nimport { goToStep, IGoToStep } from \"workbench/query/actions\";\r\n\r\nimport StepperHeader from \"workbench/query/StepperHeader\";\r\n\r\nconst stepLabels = [\"Source\", \"Columns\", \"Constraints\", \"Summary\"];\r\n\r\ninterface IOwnProps {\r\n  currentStep: number;\r\n  completedSteps: boolean[];\r\n}\r\n\r\ntype Props = ReturnType<typeof mapDispatchToProps> & IOwnProps;\r\n\r\nclass StepperHeaderContainer extends Component<Props> {\r\n  public render() {\r\n    const { currentStep, completedSteps, dispatchGoToStep } = this.props;\r\n\r\n    return (\r\n      <StepperHeader\r\n        title=\"Configure Query\"\r\n        stepLabels={stepLabels}\r\n        currentStep={currentStep}\r\n        completedSteps={completedSteps}\r\n        dispatchGoToStep={dispatchGoToStep}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<IGoToStep>) => ({\r\n  dispatchGoToStep: (step: number) => dispatch(goToStep(step))\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(StepperHeaderContainer);\r\n","import React from \"react\";\r\n\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  withStyles,\r\n  WithStyles\r\n} from \"@material-ui/core/styles\";\r\n\r\nimport { IOption } from \"common/select/SelectInputContainer\";\r\n\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport { SvgIconProps } from \"@material-ui/core/SvgIcon\";\r\n\r\ninterface IProps extends WithStyles<typeof styles> {\r\n  style: React.CSSProperties;\r\n  OptionsIcon?: React.ComponentType<SvgIconProps>;\r\n  option: IOption;\r\n  handleClick: (event: React.MouseEvent) => void;\r\n}\r\n\r\nconst styles = ({ spacing: { unit } }: Theme) =>\r\n  createStyles({\r\n    menuItem: {\r\n      padding: \"0 0 0 10px\"\r\n    },\r\n    labelContainer: {\r\n      padding: unit * 2\r\n    }\r\n  });\r\n\r\nconst Option: React.SFC<IProps> = ({\r\n  classes,\r\n  style,\r\n  OptionsIcon,\r\n  option,\r\n  handleClick\r\n}) => (\r\n  <MenuItem\r\n    component=\"div\"\r\n    style={style}\r\n    className={classes.menuItem}\r\n    onClick={handleClick}\r\n  >\r\n    {OptionsIcon && (\r\n      <ListItemIcon>\r\n        <OptionsIcon />\r\n      </ListItemIcon>\r\n    )}\r\n    <div className={classes.labelContainer}>{option.label}</div>\r\n  </MenuItem>\r\n);\r\n\r\nexport default withStyles(styles)(Option);\r\n","import React from \"react\";\r\n\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  withStyles,\r\n  WithStyles\r\n} from \"@material-ui/core/styles\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst styles = ({ spacing: { unit } }: Theme) =>\r\n  createStyles({\r\n    labelContainer: {\r\n      padding: unit * 2\r\n    }\r\n  });\r\n\r\nconst NoOption: React.SFC<WithStyles<typeof styles>> = ({ classes }) => (\r\n  <Typography color=\"textSecondary\" className={classes.labelContainer}>\r\n    No items found\r\n  </Typography>\r\n);\r\n\r\nexport default withStyles(styles)(NoOption);\r\n","import React from \"react\";\r\n\r\nimport { IOption } from \"common/select/SelectInputContainer\";\r\n\r\nimport { List as VirtualizedList, ListRowProps } from \"react-virtualized\";\r\n\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { SvgIconProps } from \"@material-ui/core/SvgIcon\";\r\n\r\nimport Option from \"common/select/Option\";\r\nimport NoOption from \"common/select/NoOption\";\r\n\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\n\r\ninterface IProps {\r\n  label: string;\r\n  options: IOption[];\r\n  containerRef: React.RefObject<HTMLDivElement>;\r\n  anchorEl?: HTMLElement;\r\n  OptionsIcon?: React.ComponentType<SvgIconProps>;\r\n  inputLabel?: string;\r\n  helperText?: string;\r\n  noClear?: boolean;\r\n  handleOptionClick: (option: IOption) => (event: React.MouseEvent) => void;\r\n  handleInputClick: (event: React.MouseEvent<HTMLDivElement>) => void;\r\n  handleInputChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  handleClickClearSelected: () => void;\r\n  handleMouseDownPassword: (event: React.MouseEvent<HTMLDivElement>) => void;\r\n  handleClose: () => void;\r\n}\r\n\r\nconst rowRenderer = (\r\n  options: IOption[],\r\n  handleOptionClick: (option: IOption) => (event: React.MouseEvent) => void,\r\n  OptionsIcon?: React.ComponentType<SvgIconProps>\r\n) => ({ index, key, style }: ListRowProps) => {\r\n  const option = options[index];\r\n  const handleClick = handleOptionClick(option);\r\n\r\n  return (\r\n    <Option\r\n      key={key}\r\n      style={style}\r\n      option={option}\r\n      handleClick={handleClick}\r\n      OptionsIcon={OptionsIcon}\r\n    />\r\n  );\r\n};\r\n\r\nconst noRowsRenderer = () => <NoOption />;\r\n\r\nconst SelectInput: React.SFC<IProps> = ({\r\n  containerRef,\r\n  inputLabel,\r\n  helperText,\r\n  label,\r\n  options,\r\n  handleInputClick,\r\n  handleInputChange,\r\n  noClear,\r\n  handleClickClearSelected,\r\n  handleMouseDownPassword,\r\n  anchorEl,\r\n  handleClose,\r\n  handleOptionClick,\r\n  OptionsIcon\r\n}) => (\r\n  <div ref={containerRef}>\r\n    <FormControl fullWidth>\r\n      {inputLabel && (\r\n        <InputLabel htmlFor=\"select-input\">{inputLabel}</InputLabel>\r\n      )}\r\n      <Input\r\n        fullWidth\r\n        value={label}\r\n        onClick={handleInputClick}\r\n        onChange={handleInputChange}\r\n        endAdornment={\r\n          !noClear && (\r\n            <InputAdornment position=\"end\">\r\n              <IconButton\r\n                aria-label=\"Clear Selected\"\r\n                onClick={handleClickClearSelected}\r\n                onMouseDown={handleMouseDownPassword}\r\n              >\r\n                <ClearIcon />\r\n              </IconButton>\r\n            </InputAdornment>\r\n          )\r\n        }\r\n      />\r\n      <Menu\r\n        disableAutoFocus\r\n        disableAutoFocusItem\r\n        disableRestoreFocus\r\n        MenuListProps={{\r\n          component: \"div\",\r\n          disablePadding: true\r\n        }}\r\n        getContentAnchorEl={null}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\"\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"center\"\r\n        }}\r\n        anchorEl={anchorEl}\r\n        open={!!anchorEl}\r\n        onClose={handleClose}\r\n      >\r\n        {containerRef.current && (\r\n          <VirtualizedList\r\n            width={containerRef.current.offsetWidth}\r\n            height={\r\n              options.length === 0 ? 45 : Math.min(options.length * 40, 300)\r\n            }\r\n            rowCount={options.length}\r\n            rowHeight={40}\r\n            rowRenderer={rowRenderer(options, handleOptionClick, OptionsIcon)}\r\n            noRowsRenderer={noRowsRenderer}\r\n          />\r\n        )}\r\n      </Menu>\r\n      {helperText && <FormHelperText>{helperText}</FormHelperText>}\r\n    </FormControl>\r\n  </div>\r\n);\r\n\r\nexport default SelectInput;\r\n","import React from \"react\";\r\n\r\nimport { Overwrite, StyledComponentProps } from \"@material-ui/core\";\r\n\r\nimport SelectInput from \"common/select/SelectInput\";\r\n\r\nexport interface IOption<T = any> {\r\n  label: string;\r\n  value: T;\r\n}\r\n\r\ninterface IProps<T> {\r\n  value?: string;\r\n  options: Array<IOption<T>>;\r\n  handleChange: (option: IOption<T>) => void;\r\n  OptionsIcon?: React.ComponentType<\r\n    Overwrite<Pick<{}, never>, StyledComponentProps<string>>\r\n  >;\r\n  inputLabel?: string;\r\n  helperText?: string;\r\n  noClear?: boolean;\r\n}\r\n\r\ninterface IState<T> {\r\n  anchorEl?: HTMLElement;\r\n  label: string;\r\n  options: Array<IOption<T>>;\r\n}\r\n\r\nexport default class SelectInputContainer<T> extends React.Component<\r\n  IProps<T>,\r\n  IState<T>\r\n> {\r\n  private containerRef: React.RefObject<HTMLDivElement> = React.createRef();\r\n\r\n  constructor(props: IProps<T>) {\r\n    super(props);\r\n\r\n    const selectedOption =\r\n      props.value &&\r\n      this.props.options.find(\r\n        ({ value }) => typeof value === \"string\" && value === props.value\r\n      );\r\n\r\n    this.state = {\r\n      anchorEl: undefined,\r\n      label: (selectedOption && selectedOption.label) || \"\",\r\n      options: [...this.props.options]\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    const { OptionsIcon, inputLabel, helperText, noClear } = this.props;\r\n    const { anchorEl, label, options } = this.state;\r\n\r\n    return (\r\n      <SelectInput\r\n        label={label}\r\n        containerRef={this.containerRef}\r\n        anchorEl={anchorEl}\r\n        options={options}\r\n        handleOptionClick={this.handleOptionClick}\r\n        handleInputClick={this.handleInputClick}\r\n        handleInputChange={this.handleInputChange}\r\n        handleClickClearSelected={this.handleClickClearSelected}\r\n        handleMouseDownPassword={this.handleMouseDownPassword}\r\n        handleClose={this.handleClose}\r\n        OptionsIcon={OptionsIcon}\r\n        inputLabel={inputLabel}\r\n        helperText={helperText}\r\n        noClear={noClear}\r\n      />\r\n    );\r\n  }\r\n\r\n  private handleMouseDownPassword = (\r\n    event: React.MouseEvent<HTMLDivElement>\r\n  ) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  private handleClickClearSelected = () => {\r\n    this.setState({\r\n      options: [...this.props.options],\r\n      label: \"\",\r\n      anchorEl: undefined\r\n    });\r\n  };\r\n\r\n  private handleInputClick = (event: React.MouseEvent<HTMLDivElement>) => {\r\n    this.setState({\r\n      options: [...this.props.options],\r\n      anchorEl: event.currentTarget\r\n    });\r\n  };\r\n\r\n  private handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      options: this.props.options.filter(({ label }) =>\r\n        label.toUpperCase().includes(event.target.value.toUpperCase())\r\n      ),\r\n      label: event.target.value\r\n    });\r\n  };\r\n\r\n  private handleOptionClick = (option: IOption<T>) => (_: React.MouseEvent) => {\r\n    this.setState({\r\n      label: option.label,\r\n      anchorEl: undefined\r\n    });\r\n    this.props.handleChange(option);\r\n  };\r\n\r\n  private handleClose = () => {\r\n    this.setState({\r\n      anchorEl: undefined\r\n    });\r\n  };\r\n}\r\n","import React, { SFC } from \"react\";\r\n\r\nimport SelectInputContainer, {\r\n  IOption\r\n} from \"common/select/SelectInputContainer\";\r\n\r\nimport { createStyles, withStyles, WithStyles } from \"@material-ui/core/styles\";\r\n\r\nimport StorageIcon from \"@material-ui/icons/Storage\";\r\n\r\ninterface IProps {\r\n  targetDataViewId: string;\r\n  dataServices: IOption[];\r\n  handleChangeDataService: (option: IOption) => void;\r\n}\r\n\r\nconst styles = createStyles({\r\n  iconColour: {\r\n    fill: \"#003b86\"\r\n  }\r\n});\r\n\r\nconst styledIcon: SFC<WithStyles<typeof styles>> = ({ classes }) => (\r\n  <StorageIcon className={classes.iconColour} />\r\n);\r\n\r\nconst OptionsIcon = withStyles(styles)(styledIcon);\r\n\r\nconst SourceSelector: SFC<IProps> = ({\r\n  targetDataViewId,\r\n  dataServices,\r\n  handleChangeDataService\r\n}) => (\r\n  <SelectInputContainer\r\n    OptionsIcon={OptionsIcon}\r\n    inputLabel=\"Click here to select a source...\"\r\n    value={targetDataViewId}\r\n    options={dataServices}\r\n    handleChange={handleChangeDataService}\r\n  />\r\n);\r\n\r\nexport default SourceSelector;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\n\r\nimport { RootState } from \"rootReducer\";\r\nimport { updateQueryDataService, QueryAction } from \"workbench/actions\";\r\nimport {\r\n  dataServicesRequest,\r\n  DataServicesAction\r\n} from \"workbench/query/actions\";\r\nimport { getDataServices } from \"workbench/query/selectors\";\r\n\r\nimport { IOption } from \"common/select/SelectInputContainer\";\r\n\r\nimport SourceSelector from \"workbench/query/sourceSelector/SourceSelector\";\r\n\r\ninterface IOwnProps {\r\n  elementId: number;\r\n  targetDataViewId: string;\r\n}\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n  ReturnType<typeof mapDispatchToProps> &\r\n  IOwnProps;\r\n\r\nclass SourceSelectorContainer extends Component<Props> {\r\n  public componentDidMount() {\r\n    this.props.dispatchDataServicesRequest();\r\n  }\r\n\r\n  public render() {\r\n    const { targetDataViewId, dataServices } = this.props;\r\n\r\n    return (\r\n      <SourceSelector\r\n        targetDataViewId={targetDataViewId}\r\n        dataServices={dataServices}\r\n        handleChangeDataService={this.handleChangeDataService}\r\n      />\r\n    );\r\n  }\r\n\r\n  private handleChangeDataService = (option: IOption) => {\r\n    const { elementId, dispatchUpdateDataService } = this.props;\r\n\r\n    dispatchUpdateDataService(elementId, option.value);\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  dataServices: getDataServices(state)\r\n});\r\n\r\nconst mapDispatchToProps = (\r\n  dispatch: Dispatch<DataServicesAction | QueryAction>\r\n) => ({\r\n  dispatchDataServicesRequest: () => dispatch(dataServicesRequest()),\r\n  dispatchUpdateDataService: (elementId: number, targetDataViewId: string) =>\r\n    dispatch(updateQueryDataService(elementId, targetDataViewId))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SourceSelectorContainer);\r\n","import React, { SFC } from \"react\";\r\n\r\nimport { createStyles, withStyles, WithStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { IOption } from \"common/select/SelectInputContainer\";\r\n\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nimport SettingsIcon from \"@material-ui/icons/SettingsApplications\";\r\n\r\ninterface IProps extends WithStyles<typeof styles> {\r\n  style: React.CSSProperties;\r\n  option: IOption;\r\n  handleClick: (event: React.MouseEvent) => void;\r\n}\r\n\r\nconst styles = createStyles({\r\n  iconColour: {\r\n    fill: \"#003b86\"\r\n  },\r\n  listItem: {\r\n    paddingLeft: 15\r\n  },\r\n  listItemText: {\r\n    display: \"flex\"\r\n  },\r\n  listItemTextPrimary: {\r\n    flexBasis: \"35%\"\r\n  }\r\n});\r\n\r\nconst Row: SFC<IProps> = ({ classes, style, option, handleClick }) => (\r\n  <ListItem\r\n    divider\r\n    style={style}\r\n    onClick={handleClick}\r\n    disableGutters\r\n    dense\r\n    button\r\n    className={classes.listItem}\r\n    ContainerComponent=\"div\"\r\n  >\r\n    <ListItemIcon>\r\n      <SettingsIcon className={classes.iconColour} />\r\n    </ListItemIcon>\r\n    <ListItemText\r\n      classes={{\r\n        primary: classes.listItemTextPrimary\r\n      }}\r\n      className={classes.listItemText}\r\n      primary={option.label}\r\n      // secondary={`(${queryColumn.DataType})`}\r\n    />\r\n  </ListItem>\r\n);\r\n\r\nexport default withStyles(styles)(Row);\r\n","import React, { ChangeEventHandler, SFC } from \"react\";\r\n\r\nimport {\r\n  AutoSizer,\r\n  List as VirtualizedList,\r\n  ListRowProps\r\n} from \"react-virtualized\";\r\n\r\nimport { createStyles, withStyles, WithStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { IOption } from \"common/select/SelectInputContainer\";\r\nimport NoOption from \"common/select/NoOption\";\r\n\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\n\r\nimport Row from \"common/searchableList/Row\";\r\n\r\ninterface IProps extends WithStyles<typeof styles> {\r\n  label: string;\r\n  totItems: number;\r\n  searchableItems: IOption[];\r\n  searchString: string;\r\n  handleItemClick: (column: IOption) => (event: React.MouseEvent) => void;\r\n  handleChange: ChangeEventHandler<HTMLInputElement>;\r\n  handleClickClearIcon: () => void;\r\n}\r\n\r\nconst styles = createStyles({\r\n  list: {\r\n    height: \"100%\"\r\n  },\r\n  paper: {\r\n    padding: 10\r\n  }\r\n});\r\n\r\nconst noRowsRenderer = () => <NoOption />;\r\n\r\nconst rowRenderer = (\r\n  searchableItems: IOption[],\r\n  handleItemClick: (column: IOption) => (event: React.MouseEvent) => void\r\n) => ({ index, key, style }: ListRowProps) => {\r\n  const option = searchableItems[index];\r\n  const handleClick = handleItemClick(option);\r\n\r\n  return (\r\n    <Row key={key} style={style} option={option} handleClick={handleClick} />\r\n  );\r\n};\r\n\r\nconst SearchableList: SFC<IProps> = ({\r\n  classes,\r\n  label,\r\n  totItems,\r\n  searchableItems,\r\n  searchString,\r\n  handleItemClick,\r\n  handleChange,\r\n  handleClickClearIcon\r\n}) => (\r\n  <Paper className={classes.paper}>\r\n    <Typography variant=\"subheading\">{`${label} (${totItems})`}</Typography>\r\n    <List className={classes.list} component=\"div\" disablePadding>\r\n      <FormControl fullWidth>\r\n        <InputLabel>Search</InputLabel>\r\n        <Input\r\n          value={searchString}\r\n          onChange={handleChange}\r\n          disabled={searchableItems.length === 0}\r\n          endAdornment={\r\n            <InputAdornment position=\"end\">\r\n              <IconButton\r\n                aria-label=\"Clear\"\r\n                onClick={handleClickClearIcon}\r\n                onMouseDown={handleClickClearIcon}\r\n              >\r\n                {searchString ? <ClearIcon /> : null}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          }\r\n        />\r\n      </FormControl>\r\n      <AutoSizer disableHeight>\r\n        {({ width }) => (\r\n          <VirtualizedList\r\n            width={width}\r\n            height={245}\r\n            rowCount={searchableItems.length}\r\n            rowHeight={41}\r\n            rowRenderer={rowRenderer(searchableItems, handleItemClick)}\r\n            noRowsRenderer={noRowsRenderer}\r\n          />\r\n        )}\r\n      </AutoSizer>\r\n    </List>\r\n  </Paper>\r\n);\r\n\r\nexport default withStyles(styles)(SearchableList);\r\n","import React, { ChangeEvent, Component } from \"react\";\r\nimport { createSelector } from \"reselect\";\r\n\r\nimport { IOption } from \"common/select/SelectInputContainer\";\r\n\r\nimport SearchableList from \"common/searchableList/SearchableList\";\r\n\r\ninterface IProps {\r\n  label: string;\r\n  items: IOption[];\r\n  handleItemClick: (item: IOption) => (event: React.MouseEvent) => void;\r\n}\r\n\r\ninterface IState {\r\n  searchString: string;\r\n}\r\n\r\nconst filterTextSelector = (state: IState) => state.searchString;\r\nconst itemsSelector = (_: IState, props: IProps) => props.items;\r\n\r\nexport default class SearchableListContainer extends Component<IProps, IState> {\r\n  public state = {\r\n    searchString: \"\"\r\n  };\r\n\r\n  private filterList = createSelector(\r\n    filterTextSelector,\r\n    itemsSelector,\r\n    (filterText, items) => items.filter(item => item.label.includes(filterText))\r\n  );\r\n\r\n  public render() {\r\n    const { label, handleItemClick } = this.props;\r\n    const { searchString } = this.state;\r\n    const filteredList = this.filterList(this.state, this.props);\r\n\r\n    return (\r\n      <SearchableList\r\n        label={label}\r\n        totItems={filteredList.length}\r\n        searchableItems={filteredList}\r\n        searchString={searchString}\r\n        handleItemClick={handleItemClick}\r\n        handleChange={this.handleChange}\r\n        handleClickClearIcon={this.handleClickClearIcon}\r\n      />\r\n    );\r\n  }\r\n\r\n  private handleClickClearIcon = () => {\r\n    this.setState({\r\n      searchString: \"\"\r\n    });\r\n  };\r\n\r\n  private handleChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      searchString: event.target.value\r\n    });\r\n  };\r\n}\r\n","import React, { SFC } from \"react\";\r\n\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  withStyles,\r\n  WithStyles\r\n} from \"@material-ui/core/styles\";\r\n\r\nimport { IOption } from \"common/select/SelectInputContainer\";\r\nimport SearchableListContainer from \"common/searchableList/SearchableListContainer\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport ArrowLeftIcon from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport ArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\r\n\r\ninterface IProps extends WithStyles<typeof styles> {\r\n  availableColumns: IOption[];\r\n  selectedColumns: IOption[];\r\n  handleAddQueryColumn: (column: IOption) => (event: React.MouseEvent) => void;\r\n  handleRemoveQueryColumn: (\r\n    column: IOption\r\n  ) => (event: React.MouseEvent) => void;\r\n}\r\n\r\nconst styles = ({ spacing: { unit } }: Theme) =>\r\n  createStyles({\r\n    listContainer: {\r\n      position: \"relative\"\r\n    },\r\n    button: {\r\n      position: \"absolute\",\r\n      right: unit * 2,\r\n      top: unit * 2\r\n    }\r\n  });\r\n\r\nconst ColumnsSelector: SFC<IProps> = ({\r\n  classes,\r\n  availableColumns,\r\n  selectedColumns,\r\n  handleAddQueryColumn,\r\n  handleRemoveQueryColumn\r\n}) => (\r\n  <Grid container spacing={16}>\r\n    <Grid item xs={6} className={classes.listContainer}>\r\n      {availableColumns.length > 0 && (\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n          size=\"small\"\r\n          className={classes.button}\r\n        >\r\n          Add All Columns\r\n          <ArrowRightIcon />\r\n        </Button>\r\n      )}\r\n      <SearchableListContainer\r\n        label=\"Available Columns\"\r\n        items={availableColumns}\r\n        handleItemClick={handleAddQueryColumn}\r\n      />\r\n    </Grid>\r\n    <Grid item xs={6} className={classes.listContainer}>\r\n      {selectedColumns.length > 0 && (\r\n        <Button variant=\"outlined\" size=\"small\" className={classes.button}>\r\n          <ArrowLeftIcon />\r\n          Remove All Columns\r\n        </Button>\r\n      )}\r\n      <SearchableListContainer\r\n        label=\"Selected Columns\"\r\n        items={selectedColumns}\r\n        handleItemClick={handleRemoveQueryColumn}\r\n      />\r\n    </Grid>\r\n  </Grid>\r\n);\r\n\r\nexport default withStyles(styles)(ColumnsSelector);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport { createSelector } from \"reselect\";\r\n\r\nimport { RootState } from \"rootReducer\";\r\nimport {\r\n  addQueryColumn,\r\n  removeQueryColumn,\r\n  QueryColumnAction\r\n} from \"workbench/actions\";\r\nimport {\r\n  getAvailableColumns,\r\n  getQueryColumns\r\n} from \"workbench/query/selectors\";\r\n\r\nimport { IColumn } from \"workbench/types\";\r\n// import { IUdsColumnDescriptionDtc } from \"workbench/query/types\";\r\nimport { IOption } from \"common/select/SelectInputContainer\";\r\n\r\nimport ColumnsSelector from \"workbench/query/columnSelector/ColumnsSelector\";\r\n\r\ninterface IOwnProps {\r\n  elementId: number;\r\n}\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n  ReturnType<typeof mapDispatchToProps> &\r\n  IOwnProps;\r\n\r\nconst availableColumnsSelector = (props: Props) => props.availableColumns;\r\nconst selectedColumnsSelector = (props: Props) => props.selectedColumns;\r\n\r\nclass ColumnsSelectorContainer extends Component<Props> {\r\n  private availableColumnOptions = createSelector(\r\n    availableColumnsSelector,\r\n    availableColumns =>\r\n      availableColumns.map<IOption>(column => ({\r\n        label: column.Label,\r\n        value: column.ColumnName\r\n      }))\r\n  );\r\n\r\n  private selectedColumnOptions = createSelector(\r\n    selectedColumnsSelector,\r\n    selectedColumns =>\r\n      selectedColumns.map<IOption>(column => ({\r\n        label: column.Label,\r\n        value: column.ColumnName\r\n      }))\r\n  );\r\n\r\n  public render() {\r\n    return (\r\n      <ColumnsSelector\r\n        availableColumns={this.availableColumnOptions(this.props)}\r\n        selectedColumns={this.selectedColumnOptions(this.props)}\r\n        handleAddQueryColumn={this.handleAddQueryColumn}\r\n        handleRemoveQueryColumn={this.handleRemoveQueryColumn}\r\n      />\r\n    );\r\n  }\r\n\r\n  private handleAddQueryColumn = ({ value, label }: IOption) => (\r\n    _: React.MouseEvent\r\n  ) => {\r\n    const { elementId, dispatchAddQueryColumn } = this.props;\r\n    const queryColumn = {\r\n      ColumnName: value,\r\n      Label: label,\r\n      Aggregation: \"None\"\r\n    };\r\n    dispatchAddQueryColumn(elementId, queryColumn);\r\n  };\r\n\r\n  private handleRemoveQueryColumn = ({ value }: IOption) => (\r\n    _: React.MouseEvent\r\n  ) => {\r\n    const { elementId, dispatchRemoveQueryColumn } = this.props;\r\n    dispatchRemoveQueryColumn(elementId, value);\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  availableColumns: getAvailableColumns(state),\r\n  selectedColumns: getQueryColumns(state)\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<QueryColumnAction>) => ({\r\n  dispatchAddQueryColumn: (elementId: number, column: IColumn) =>\r\n    dispatch(addQueryColumn(elementId, column)),\r\n  dispatchRemoveQueryColumn: (elementId: number, columnName: string) =>\r\n    dispatch(removeQueryColumn(elementId, columnName))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ColumnsSelectorContainer);\r\n","import React, { Fragment, SFC } from \"react\";\r\n\r\nimport { IConstraint } from \"workbench/types\";\r\nimport { IFilterCapabilitiesDic } from \"workbench/query/types\";\r\n\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  withStyles,\r\n  WithStyles\r\n} from \"@material-ui/core/styles\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport SelectInputContainer, {\r\n  IOption\r\n} from \"common/select/SelectInputContainer\";\r\n\r\nimport ConstraintIcon from \"@material-ui/icons/FilterList\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\ntype QueryContraint = IOption & IConstraint;\r\n\r\nconst constraintIconColour = \"#2c5367\";\r\n\r\ninterface IProps extends WithStyles<typeof styles> {\r\n  contraintTargets: IOption[];\r\n  queryConstraints: QueryContraint[];\r\n  filterCapabilities: IFilterCapabilitiesDic;\r\n  handledAddQueryConstraint: (target: IOption) => void;\r\n  handledUpdateQueryConstraintType: (\r\n    constraintId: number\r\n  ) => React.ChangeEventHandler<HTMLSelectElement>;\r\n  handledUpdateQueryConstraintValues: (\r\n    constraintId: number,\r\n    dataType: string\r\n  ) => React.ChangeEventHandler<HTMLInputElement>;\r\n  handledRemoveQueryConstraint: (\r\n    constraintId: number\r\n  ) => React.MouseEventHandler;\r\n}\r\n\r\nconst styles = ({ spacing: { unit } }: Theme) =>\r\n  createStyles({\r\n    constraintTargetSelect: {\r\n      marginBottom: 30\r\n    },\r\n    constraintIconColour: {\r\n      fill: constraintIconColour\r\n    },\r\n    paper: {\r\n      display: \"flex\",\r\n      alignItems: \"center\"\r\n    },\r\n    targetLabel: {\r\n      flexBasis: `${unit * 2}%`,\r\n      margin: unit\r\n    },\r\n    typeSelect: {\r\n      flexBasis: `${unit * 2}%`,\r\n      margin: unit\r\n    },\r\n    valueInput: {\r\n      flexGrow: 1,\r\n      margin: unit\r\n    },\r\n    constraintIcon: {\r\n      margin: unit,\r\n      fill: constraintIconColour\r\n    }\r\n  });\r\n\r\nconst ConstraintSelector: SFC<IProps> = ({\r\n  classes,\r\n  contraintTargets,\r\n  queryConstraints,\r\n  filterCapabilities,\r\n  handledAddQueryConstraint,\r\n  handledUpdateQueryConstraintType,\r\n  handledUpdateQueryConstraintValues,\r\n  handledRemoveQueryConstraint\r\n}) => (\r\n  <Fragment>\r\n    <div className={classes.constraintTargetSelect}>\r\n      <SelectInputContainer\r\n        OptionsIcon={ConstraintIcon}\r\n        inputLabel=\"Contraint on...\"\r\n        options={contraintTargets}\r\n        handleChange={handledAddQueryConstraint}\r\n      />\r\n    </div>\r\n    {queryConstraints.length > 0 &&\r\n      queryConstraints.map(\r\n        ({ ConstraintId, DataType, FilterType, value, label }) => (\r\n          <Paper key={ConstraintId} className={classes.paper}>\r\n            <ConstraintIcon className={classes.constraintIcon} />\r\n            <Typography variant=\"subheading\" className={classes.targetLabel}>\r\n              {label}\r\n            </Typography>\r\n            <FormControl className={classes.typeSelect}>\r\n              <Select\r\n                value={FilterType}\r\n                onChange={handledUpdateQueryConstraintType(ConstraintId)}\r\n                autoWidth\r\n              >\r\n                {filterCapabilities[DataType].map(({ Type, Label }, n) => (\r\n                  <MenuItem key={n} value={Type}>\r\n                    {Label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl className={classes.valueInput}>\r\n              <Input\r\n                autoFocus\r\n                value={value}\r\n                onChange={handledUpdateQueryConstraintValues(\r\n                  ConstraintId,\r\n                  DataType\r\n                )}\r\n              />\r\n            </FormControl>\r\n            <IconButton\r\n              aria-label=\"Delete\"\r\n              onClick={handledRemoveQueryConstraint(ConstraintId)}\r\n            >\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </Paper>\r\n        )\r\n      )}\r\n  </Fragment>\r\n);\r\n\r\nexport default withStyles(styles)(ConstraintSelector);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\n\r\nimport { RootState } from \"rootReducer\";\r\n\r\nimport {\r\n  getQueryConstraints,\r\n  getConstraintTargets,\r\n  IConstraintTarget\r\n} from \"workbench/query/selectors\";\r\nimport { getConstraintVectorValue } from \"workbench/utils\";\r\nimport {\r\n  addQueryConstraint,\r\n  updateQueryConstraintType,\r\n  updateQueryConstraintValues,\r\n  removeQueryConstraint,\r\n  QueryConstraintAction\r\n} from \"workbench/actions\";\r\nimport {\r\n  filterCapabilitiesRequest,\r\n  FilterCapabilitiesAction\r\n} from \"workbench/query/actions\";\r\nimport { IConstraint } from \"workbench/types\";\r\n\r\nimport ConstraintSelector from \"workbench/query/constraintSelector/ConstraintSelector\";\r\nimport { IOption } from \"common/select/SelectInputContainer\";\r\n\r\ninterface IOwnProps {\r\n  elementId: number;\r\n}\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n  ReturnType<typeof mapDispatchToProps> &\r\n  IOwnProps;\r\n\r\nclass ConstraintSelectorContainer extends Component<Props> {\r\n  public componentDidMount() {\r\n    this.props.dispatchFilterCapabilitiesRequest();\r\n  }\r\n\r\n  public render() {\r\n    const {\r\n      queryConstraints,\r\n      filterCapabilities,\r\n      contraintTargets\r\n    } = this.props;\r\n\r\n    return (\r\n      <ConstraintSelector\r\n        queryConstraints={queryConstraints}\r\n        filterCapabilities={filterCapabilities}\r\n        contraintTargets={contraintTargets}\r\n        handledAddQueryConstraint={this.handledAddQueryConstraint}\r\n        handledUpdateQueryConstraintType={this.handledUpdateQueryConstraintType}\r\n        handledUpdateQueryConstraintValues={\r\n          this.handledUpdateQueryConstraintValues\r\n        }\r\n        handledRemoveQueryConstraint={this.handledRemoveQueryConstraint}\r\n      />\r\n    );\r\n  }\r\n\r\n  private handledAddQueryConstraint = (selectedTarget: IOption<IConstraintTarget>) => {\r\n    const {\r\n      elementId,\r\n      queryConstraints,\r\n      dispatchAddQueryConstraint,\r\n      filterCapabilities\r\n    } = this.props;\r\n    // For a new constraint default the filterType to the first value\r\n    // of the filter capabilities for the selected dataType.\r\n    const constraint: IConstraint = {\r\n      ConstraintId: queryConstraints.length,\r\n      ConstraintName: selectedTarget.value.key,\r\n      FilterName: selectedTarget.value.key,\r\n      DataType: selectedTarget.value.dataType,\r\n      ColumnName: selectedTarget.value.key,\r\n      FilterType: filterCapabilities[selectedTarget.value.dataType][0].Type\r\n    };\r\n\r\n    dispatchAddQueryConstraint(elementId, constraint);\r\n  };\r\n\r\n  private handledUpdateQueryConstraintType = (constraintId: number) => (\r\n    event: React.ChangeEvent<HTMLSelectElement>\r\n  ) => {\r\n    const { elementId, dispatchUpdateQueryConstraintType } = this.props;\r\n\r\n    dispatchUpdateQueryConstraintType(\r\n      elementId,\r\n      constraintId,\r\n      event.target.value\r\n    );\r\n  };\r\n\r\n  private handledUpdateQueryConstraintValues = (\r\n    constraintId: number,\r\n    dataType: string\r\n  ) => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { elementId, dispatchUpdateQueryConstraintValues } = this.props;\r\n    const valuesObj = getConstraintVectorValue(dataType, event.target.value);\r\n    dispatchUpdateQueryConstraintValues(\r\n      elementId,\r\n      constraintId,\r\n      valuesObj.vectorValues\r\n    );\r\n  };\r\n\r\n  private handledRemoveQueryConstraint = (constraintId: number) => () => {\r\n    const { elementId, dispatchRemoveQueryConstraint } = this.props;\r\n\r\n    dispatchRemoveQueryConstraint(elementId, constraintId);\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  queryConstraints: getQueryConstraints(state),\r\n  filterCapabilities: state.queryConfigReducer.filterCapabilities,\r\n  contraintTargets: getConstraintTargets(state)\r\n});\r\n\r\nconst mapDispatchToProps = (\r\n  dispatch: Dispatch<FilterCapabilitiesAction | QueryConstraintAction>\r\n) => ({\r\n  dispatchFilterCapabilitiesRequest: () =>\r\n    dispatch(filterCapabilitiesRequest()),\r\n  dispatchAddQueryConstraint: (elementId: number, constraint: IConstraint) =>\r\n    dispatch(addQueryConstraint(elementId, constraint)),\r\n  dispatchUpdateQueryConstraintType: (\r\n    elementId: number,\r\n    constraintId: number,\r\n    constraintType: string\r\n  ) =>\r\n    dispatch(\r\n      updateQueryConstraintType(elementId, constraintId, constraintType)\r\n    ),\r\n  dispatchUpdateQueryConstraintValues: (\r\n    elementId: number,\r\n    constraintId: number,\r\n    constraintValues: any[]\r\n  ) =>\r\n    dispatch(\r\n      updateQueryConstraintValues(elementId, constraintId, constraintValues)\r\n    ),\r\n  dispatchRemoveQueryConstraint: (elementId: number, constraintId: number) =>\r\n    dispatch(removeQueryConstraint(elementId, constraintId))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ConstraintSelectorContainer);\r\n","import React, { SFC } from \"react\";\r\n\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  withStyles,\r\n  WithStyles\r\n} from \"@material-ui/core/styles\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\ninterface IProps extends WithStyles<typeof styles> {\r\n  currentStep: number;\r\n  completedSteps: boolean[];\r\n  dispatchCloseConfig: () => void;\r\n  dispatchGoToStep: (stepIndex: number) => void;\r\n}\r\n\r\nconst styles = ({ spacing: { unit } }: Theme) =>\r\n  createStyles({\r\n    actionButtons: {\r\n      display: \"flex\",\r\n      justifyContent: \"flex-end\",\r\n      position: \"fixed\",\r\n      bottom: unit * 6,\r\n      right: 0\r\n    },\r\n    button: {\r\n      margin: unit\r\n    }\r\n  });\r\n\r\nconst ConfigActions: SFC<IProps> = ({\r\n  classes,\r\n  currentStep,\r\n  completedSteps,\r\n  dispatchCloseConfig,\r\n  dispatchGoToStep\r\n}) => {\r\n  const handleStep = (stepIndex: number) => () => {\r\n    return dispatchGoToStep(stepIndex);\r\n  };\r\n\r\n  return (\r\n    <Grid item xs={12} className={classes.actionButtons}>\r\n      <Button\r\n        onClick={dispatchCloseConfig}\r\n        variant=\"raised\"\r\n        className={classes.button}\r\n      >\r\n        Close\r\n      </Button>\r\n      <Button\r\n        disabled={currentStep === 0}\r\n        onClick={handleStep(currentStep - 1)}\r\n        variant=\"raised\"\r\n        color=\"secondary\"\r\n        className={classes.button}\r\n      >\r\n        Back\r\n      </Button>\r\n      <Button\r\n        disabled={!completedSteps[currentStep]}\r\n        onClick={handleStep(currentStep + 1)}\r\n        variant=\"raised\"\r\n        color=\"secondary\"\r\n        className={classes.button}\r\n      >\r\n        Next\r\n      </Button>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(ConfigActions);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\n\r\nimport {\r\n  closeQueryConfig,\r\n  goToStep,\r\n  QueryConfigAction,\r\n  IGoToStep\r\n} from \"workbench/query/actions\";\r\n\r\nimport ConfigActions from \"workbench/query/ConfigActions\";\r\n\r\ninterface IOwnProps {\r\n  currentStep: number;\r\n  completedSteps: boolean[];\r\n}\r\n\r\ntype Props = IOwnProps & ReturnType<typeof mapDispatchToProps>;\r\n\r\nclass ConfigActionsContainer extends Component<Props> {\r\n  public render() {\r\n    const {\r\n      currentStep,\r\n      completedSteps,\r\n      dispatchCloseQueryConfig,\r\n      dispatchGoToStep\r\n    } = this.props;\r\n\r\n    return (\r\n      <ConfigActions\r\n        currentStep={currentStep}\r\n        completedSteps={completedSteps}\r\n        dispatchCloseConfig={dispatchCloseQueryConfig}\r\n        dispatchGoToStep={dispatchGoToStep}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (\r\n  dispatch: Dispatch<QueryConfigAction | IGoToStep>\r\n) => ({\r\n  dispatchGoToStep: (step: number) => dispatch(goToStep(step)),\r\n  dispatchCloseQueryConfig: () => dispatch(closeQueryConfig())\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(ConfigActionsContainer);\r\n","import React, { SFC } from \"react\";\r\n\r\nimport { IQuery } from \"workbench/types\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport { BackgroundLoadingContainer } from \"common/loading\";\r\nimport HelperText from \"workbench/query/HelperText\";\r\nimport StepperHeaderContainer from \"workbench/query/StepperHeaderContainer\";\r\nimport SourceSelectorContainer from \"workbench/query/sourceSelector/SourceSelectorContainer\";\r\nimport ColumnsSelectorContainer from \"workbench/query/columnSelector/ColumnsSelectorContainer\";\r\nimport ConstraintSelectorContainer from \"workbench/query/constraintSelector/ConstraintSelectorContainer\";\r\nimport ConfigActionsContainer from \"workbench/query/ConfigActionsContainer\";\r\n\r\nfunction getStepContent(currentStep: number, selectedQuery: IQuery) {\r\n  if (selectedQuery.TargetDataViewId == null) {\r\n    throw new Error(\"TargetDataViewId cannot be null.\");\r\n  }\r\n\r\n  switch (currentStep) {\r\n    case 0:\r\n      return (\r\n        <SourceSelectorContainer\r\n          elementId={selectedQuery.ElementId}\r\n          targetDataViewId={selectedQuery.TargetDataViewId}\r\n        />\r\n      );\r\n\r\n    case 1:\r\n      return <ColumnsSelectorContainer elementId={selectedQuery.ElementId} />;\r\n\r\n    case 2:\r\n      return (\r\n        <ConstraintSelectorContainer elementId={selectedQuery.ElementId} />\r\n      );\r\n\r\n    default:\r\n      return \"Unknown step\";\r\n  }\r\n}\r\n\r\ninterface IProps {\r\n  isLoading: boolean;\r\n  selectedQuery: IQuery;\r\n  currentStep: number;\r\n  completedSteps: boolean[];\r\n}\r\n\r\nconst QueryConfig: SFC<IProps> = ({\r\n  isLoading,\r\n  selectedQuery,\r\n  currentStep,\r\n  completedSteps\r\n}) => (\r\n  <BackgroundLoadingContainer isLoading={isLoading}>\r\n    <StepperHeaderContainer\r\n      currentStep={currentStep}\r\n      completedSteps={completedSteps}\r\n    />\r\n    <HelperText currentStep={currentStep} />\r\n    <Grid item xs={12}>\r\n      {getStepContent(currentStep, selectedQuery)}\r\n    </Grid>\r\n    <ConfigActionsContainer\r\n      currentStep={currentStep}\r\n      completedSteps={completedSteps}\r\n    />\r\n  </BackgroundLoadingContainer>\r\n);\r\n\r\nexport default QueryConfig;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { RootState } from \"rootReducer\";\r\nimport { getQuery, getCompletedSteps } from \"workbench/query/selectors\";\r\n\r\nimport QueryConfig from \"workbench/query/QueryConfig\";\r\n\r\nclass QueryConfigContainer extends Component<\r\n  ReturnType<typeof mapStateToProps>\r\n> {\r\n  public render() {\r\n    const {\r\n      isLoading,\r\n      selectedQuery,\r\n      currentStep,\r\n      completedSteps\r\n    } = this.props;\r\n\r\n    return (\r\n      <QueryConfig\r\n        isLoading={isLoading}\r\n        selectedQuery={selectedQuery}\r\n        currentStep={currentStep}\r\n        completedSteps={completedSteps}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  isLoading: state.queryConfigReducer.isLoading,\r\n  selectedQuery: getQuery(state),\r\n  currentStep: state.queryConfigReducer.currentStep,\r\n  completedSteps: getCompletedSteps(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(QueryConfigContainer);\r\n","import React, { SFC } from \"react\";\r\n\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  withStyles,\r\n  WithStyles\r\n} from \"@material-ui/core/styles\";\r\n\r\nimport { ElementType } from \"sidebar/operators/operatorsData\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\n\r\nimport QueryConfigContainer from \"workbench/query/QueryConfigContainer\";\r\n\r\ninterface IProps extends WithStyles<typeof styles> {\r\n  elementType: ElementType;\r\n  isDrawerOpen: boolean;\r\n}\r\n\r\nconst styles = ({ spacing }: Theme) =>\r\n  createStyles({\r\n    paper: {\r\n      width: \"85%\",\r\n      marginTop: 48\r\n    },\r\n    form: {\r\n      position: \"relative\",\r\n      height: \"100%\",\r\n      padding: spacing.unit * 2,\r\n      overflow: \"auto\",\r\n      marginBottom: 48\r\n    }\r\n  });\r\n\r\nconst drawerByType = (elementType: ElementType) => {\r\n  switch (elementType) {\r\n    case ElementType.QUERY:\r\n      return <QueryConfigContainer />;\r\n    case ElementType.FILTER:\r\n      return \"TODO\";\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nconst ConfigSwitch: SFC<IProps> = ({ classes, elementType, isDrawerOpen }) => (\r\n  <Drawer classes={{ paper: classes.paper }} anchor=\"right\" open={isDrawerOpen}>\r\n    {isDrawerOpen && (\r\n      <form className={classes.form} noValidate autoComplete=\"off\">\r\n        <Grid container spacing={16} alignContent=\"stretch\">\r\n          {drawerByType(elementType)}\r\n        </Grid>\r\n      </form>\r\n    )}\r\n  </Drawer>\r\n);\r\n\r\nexport default withStyles(styles)(ConfigSwitch);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { RootState } from \"rootReducer\";\r\nimport { isDrawerOpen } from \"workbench/configSwitch/selectors\";\r\n\r\nimport ConfigSwitch from \"workbench/configSwitch/ConfigSwitch\";\r\n\r\nclass ConfigSwitchContainer extends Component<\r\n  ReturnType<typeof mapStateToProps>\r\n> {\r\n  public render() {\r\n    return <ConfigSwitch {...this.props} />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  elementType: state.configSwitchReducer.elementType,\r\n  isDrawerOpen: isDrawerOpen(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(ConfigSwitchContainer);\r\n","import { PortModel, AbstractPortFactory } from \"storm-react-diagrams\";\r\n\r\nexport default class DiagramPortFactory extends AbstractPortFactory {\r\n  private portModel: PortModel;\r\n\r\n  constructor(portModel: PortModel) {\r\n    super(\"workbench\");\r\n    this.portModel = portModel;\r\n  }\r\n\r\n  public getNewInstance(initialConfig?: any): PortModel {\r\n    return this.portModel;\r\n  }\r\n}\r\n","import {\r\n  LinkModel,\r\n  DiagramEngine,\r\n  PortModel,\r\n  DefaultLinkModel\r\n} from \"storm-react-diagrams\";\r\n\r\nexport default class WorkbenchPortModel extends PortModel {\r\n  private position: string;\r\n\r\n  constructor(pos: \"from\" | \"to\" = \"from\") {\r\n    super(pos, \"workbench\");\r\n    this.position = pos;\r\n  }\r\n\r\n  public serialize() {\r\n    return Object.assign(super.serialize(), {\r\n      position: this.position\r\n    });\r\n  }\r\n\r\n  public deSerialize(data: any, engine: DiagramEngine) {\r\n    super.deSerialize(data, engine);\r\n    this.position = data.position;\r\n  }\r\n\r\n  public link(port: PortModel): LinkModel {\r\n    const link = this.createLinkModel();\r\n    link.setSourcePort(this);\r\n    link.setTargetPort(port);\r\n\r\n    return link;\r\n  }\r\n\r\n  public createLinkModel(): LinkModel {\r\n    return new DefaultLinkModel();\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  withStyles,\r\n  WithStyles\r\n} from \"@material-ui/core/styles\";\r\n\r\nimport {\r\n  AutoSizer,\r\n  List as VirtualizedList,\r\n  ListRowProps\r\n} from \"react-virtualized\";\r\n\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nimport SettingsIcon from \"@material-ui/icons/SettingsApplications\";\r\n\r\ninterface IProps extends WithStyles<typeof styles> {\r\n  label: string;\r\n  style: React.CSSProperties;\r\n}\r\n\r\nconst styles = createStyles({\r\n  listItem: {\r\n    padding: 0\r\n  },\r\n  itemIcon: {\r\n    width: 10,\r\n    height: 10,\r\n    marginRight: 5\r\n  },\r\n  primary: {\r\n    whiteSpace: \"nowrap\",\r\n    overflow: \"hidden\",\r\n    textOverflow: \"ellipsis\"\r\n  }\r\n});\r\n\r\nconst QueryColumn: React.SFC<IProps> = ({ classes, style, label }) => (\r\n  <ListItem style={style} className={classes.listItem} component=\"div\" dense>\r\n    <ListItemIcon className={classes.itemIcon}>\r\n      <SettingsIcon />\r\n    </ListItemIcon>\r\n    <ListItemText\r\n      className={classes.listItem}\r\n      classes={{ primary: classes.primary }}\r\n      primary={label}\r\n    />\r\n  </ListItem>\r\n);\r\n\r\nexport default withStyles(styles)(QueryColumn);\r\n","import React from \"react\";\r\nimport { PortWidget } from \"storm-react-diagrams\";\r\n\r\nimport { IColumn } from \"workbench/types\";\r\nimport QueryNodeModel from \"workbench/query/widget/QueryNodeModel\";\r\nimport { operatorsExtraInfo } from \"sidebar/operators/operatorsData\";\r\n\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  withStyles,\r\n  WithStyles\r\n} from \"@material-ui/core/styles\";\r\n\r\nimport {\r\n  AutoSizer,\r\n  List as VirtualizedList,\r\n  ListRowProps\r\n} from \"react-virtualized\";\r\n\r\nimport QueryColumn from \"workbench/query/widget/QueryColumn\";\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\ninterface IProps extends WithStyles<typeof styles> {\r\n  node: QueryNodeModel;\r\n}\r\n\r\nconst styles = ({\r\n  palette: {\r\n    background: { paper }\r\n  }\r\n}: Theme) =>\r\n  createStyles({\r\n    container: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\"\r\n    },\r\n    operatorContainer: {\r\n      display: \"flex\",\r\n      flexFlow: \"column\",\r\n      alignItems: \"center\",\r\n      borderRadius: 5,\r\n      border: \"1px solid #7b582d\",\r\n      padding: \"0px 5px 0px 5px\",\r\n      width: 165,\r\n      backgroundColor: paper\r\n    },\r\n    titleContainer: {\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      marginBottom: 5\r\n    },\r\n    avatar: {\r\n      marginRight: 10,\r\n      width: 25,\r\n      height: 25\r\n    },\r\n    list: {\r\n      overflow: \"auto\",\r\n      padding: 0,\r\n      width: 150,\r\n      \"&:focus\": {\r\n        outline: 0\r\n      }\r\n    },\r\n    listItem: {\r\n      padding: 0\r\n    },\r\n    itemIcon: {\r\n      width: 10,\r\n      height: 10,\r\n      marginRight: 5\r\n    },\r\n    primary: {\r\n      whiteSpace: \"nowrap\",\r\n      overflow: \"hidden\",\r\n      textOverflow: \"ellipsis\"\r\n    },\r\n    topPort: {\r\n      position: \"relative\",\r\n      top: -9,\r\n      backgroundColor: \"#ccc\",\r\n      zIndex: -1\r\n    },\r\n    bottomPort: {\r\n      position: \"relative\",\r\n      top: 9,\r\n      backgroundColor: \"#ccc\",\r\n      borderRadius: 15,\r\n      zIndex: -1\r\n    }\r\n  });\r\n\r\nconst rowRenderer = (columns: IColumn[]) => ({\r\n  index,\r\n  key,\r\n  style\r\n}: ListRowProps) => (\r\n  <QueryColumn key={key} style={style} label={columns[index].Label} />\r\n);\r\n\r\nconst handleWheel = (event: React.WheelEvent) => {\r\n  event.stopPropagation();\r\n};\r\n\r\nconst QueryNodeWidget: React.SFC<IProps> = ({ classes, node }) => {\r\n  const { Label: QueyLabel, Columns } = node.getQueryInfo();\r\n  const { backgroundColor, IconComponent } = operatorsExtraInfo.QUERY;\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes.operatorContainer}>\r\n        <div className={classes.topPort}>\r\n          <PortWidget name=\"to\" node={node} />\r\n        </div>\r\n        <div className={classes.titleContainer}>\r\n          <Avatar className={classes.avatar} style={{ backgroundColor }}>\r\n            {React.createElement(IconComponent)}\r\n          </Avatar>\r\n          <Typography variant=\"subheading\" noWrap>\r\n            {QueyLabel}\r\n          </Typography>\r\n        </div>\r\n        <div>\r\n          <Typography variant=\"body2\" noWrap>\r\n            Columns\r\n          </Typography>\r\n          <Divider />\r\n          <List className={classes.list} onWheel={handleWheel} component=\"div\">\r\n            <AutoSizer disableHeight>\r\n              {({ width }) => (\r\n                <VirtualizedList\r\n                  style={{\r\n                    outline: 0\r\n                  }}\r\n                  width={width}\r\n                  height={Math.min(Columns.length * 20, 150)}\r\n                  rowCount={Columns.length}\r\n                  rowHeight={20}\r\n                  rowRenderer={rowRenderer(Columns)}\r\n                />\r\n              )}\r\n            </AutoSizer>\r\n          </List>\r\n        </div>\r\n        <div className={classes.bottomPort}>\r\n          <PortWidget name=\"from\" node={node} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(QueryNodeWidget);\r\n","import React from \"react\";\r\nimport {\r\n  AbstractNodeFactory,\r\n  DiagramEngine,\r\n  NodeModel\r\n} from \"storm-react-diagrams\";\r\n\r\nimport QueryNodeModel from \"workbench/query/widget/QueryNodeModel\";\r\nimport QueryNodeWidget from \"workbench/query/widget/QueryNodeWidget\";\r\n\r\nexport default class QueryNodeFactory extends AbstractNodeFactory {\r\n  constructor() {\r\n    super(\"query\");\r\n  }\r\n\r\n  public generateReactWidget(\r\n    _: DiagramEngine,\r\n    node: QueryNodeModel\r\n  ): JSX.Element {\r\n    return <QueryNodeWidget node={node} />;\r\n  }\r\n\r\n  public getNewInstance() {\r\n    return new NodeModel();\r\n  }\r\n}\r\n","import { NodeModel } from \"storm-react-diagrams\";\r\n\r\nimport WidgetPortModel from \"workbench/WidgetPortModel\";\r\nimport { IQuery } from \"workbench/types\";\r\n\r\nexport default class QueryNodeModel extends NodeModel {\r\n  private queryInfo: IQuery;\r\n\r\n  constructor(queryInfo: IQuery) {\r\n    super(\"query\", queryInfo.ElementId.toString());\r\n\r\n    this.addPort(new WidgetPortModel(\"from\"));\r\n    this.addPort(new WidgetPortModel(\"to\"));\r\n    this.setPosition(queryInfo.LayoutX, queryInfo.LayoutY);\r\n\r\n    this.queryInfo = queryInfo;\r\n  }\r\n\r\n  public getQueryInfo() {\r\n    return this.queryInfo;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { PortWidget } from \"storm-react-diagrams\";\r\n\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  withStyles,\r\n  WithStyles\r\n} from \"@material-ui/core/styles\";\r\n\r\nimport FilterNodeModel from \"workbench/filter/FilterNodeModel\";\r\nimport { operatorsExtraInfo } from \"sidebar/operators/operatorsData\";\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\ninterface IProps extends WithStyles<typeof styles> {\r\n  node: FilterNodeModel;\r\n}\r\n\r\nconst styles = ({\r\n  palette: {\r\n    background: { paper }\r\n  }\r\n}: Theme) =>\r\n  createStyles({\r\n    container: {\r\n      display: \"flex\",\r\n      flexFlow: \"column\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      borderRadius: \"0px 0px 80px 80px\",\r\n      border: \"1px solid #2c5367\",\r\n      width: 155,\r\n      height: 85,\r\n      backgroundColor: paper\r\n    },\r\n    body: {\r\n      display: \"flex\",\r\n      maxWidth: 130,\r\n      marginBottom: 5\r\n    },\r\n    avatar: {\r\n      width: 25,\r\n      height: 25,\r\n      marginRight: 3\r\n    },\r\n    label: {\r\n      marginTop: 10\r\n    },\r\n    filterType: {\r\n      textAlign: \"center\"\r\n    },\r\n    topPort: {\r\n      position: \"relative\",\r\n      top: -11,\r\n      backgroundColor: \"#ccc\",\r\n      zIndex: -1\r\n    },\r\n    bottomPort: {\r\n      position: \"relative\",\r\n      top: 11,\r\n      backgroundColor: \"#ccc\",\r\n      borderRadius: 15,\r\n      zIndex: -1\r\n    }\r\n  });\r\n\r\nconst FilterNodeWidget: React.SFC<IProps> = ({ classes, node }) => {\r\n  const { Label, FilterType } = node.getFilterInfo();\r\n  const { backgroundColor, IconComponent } = operatorsExtraInfo.FILTER;\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes.topPort}>\r\n        <PortWidget name=\"to\" node={node} />\r\n      </div>\r\n      <div className={classes.body}>\r\n        <Avatar className={classes.avatar} style={{ backgroundColor }}>\r\n          {React.createElement(IconComponent)}\r\n        </Avatar>\r\n        <Typography variant=\"subheading\" noWrap>\r\n          {Label}\r\n        </Typography>\r\n      </div>\r\n      <Typography className={classes.filterType} variant=\"body2\" noWrap>\r\n        {FilterType}\r\n      </Typography>\r\n      <div className={classes.bottomPort}>\r\n        <PortWidget name=\"from\" node={node} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(FilterNodeWidget);\r\n","import React from \"react\";\r\nimport {\r\n  AbstractNodeFactory,\r\n  DiagramEngine,\r\n  NodeModel\r\n} from \"storm-react-diagrams\";\r\n\r\nimport FilterNodeModel from \"workbench/filter/FilterNodeModel\";\r\nimport FilterNodeWidget from \"workbench/filter/FilterNodeWidget\";\r\n\r\nexport default class FilterNodeFactory extends AbstractNodeFactory {\r\n  constructor() {\r\n    super(\"filter\");\r\n  }\r\n\r\n  public generateReactWidget(\r\n    _: DiagramEngine,\r\n    node: FilterNodeModel\r\n  ): JSX.Element {\r\n    return <FilterNodeWidget node={node} />;\r\n  }\r\n\r\n  public getNewInstance() {\r\n    return new NodeModel();\r\n  }\r\n}\r\n","import { NodeModel } from \"storm-react-diagrams\";\r\n\r\nimport WidgetPortModel from \"workbench/WidgetPortModel\";\r\nimport { IInteractiveFilter } from \"workbench/types\";\r\n\r\nexport default class FilterNodeModel extends NodeModel {\r\n  private filterInfo: IInteractiveFilter;\r\n\r\n  constructor(filterInfo: IInteractiveFilter) {\r\n    super(\"filter\", filterInfo.ElementId.toString());\r\n\r\n    this.addPort(new WidgetPortModel(\"from\"));\r\n    this.addPort(new WidgetPortModel(\"to\"));\r\n    this.setPosition(filterInfo.LayoutX, filterInfo.LayoutY);\r\n\r\n    this.filterInfo = filterInfo;\r\n  }\r\n\r\n  public getFilterInfo() {\r\n    return this.filterInfo;\r\n  }\r\n}\r\n","import \"storm-react-diagrams/dist/style.min.css\";\r\n\r\nimport React, { SFC } from \"react\";\r\nimport { DiagramEngine, DiagramWidget } from \"storm-react-diagrams\";\r\n\r\nimport { createStyles, withStyles, WithStyles } from \"@material-ui/core/styles\";\r\n\r\ninterface IProps extends WithStyles<typeof styles> {\r\n  diagramEngine: DiagramEngine;\r\n  handleDrop: (event: React.DragEvent<HTMLDivElement>) => void;\r\n  handleDragOver: (event: React.DragEvent<HTMLDivElement>) => void;\r\n}\r\n\r\nconst styles = createStyles({\r\n  canvasContainer: {\r\n    height: \"100%\",\r\n    width: \"100%\"\r\n  },\r\n  canvas: {\r\n    height: \"100%\",\r\n    width: \"100%\"\r\n  }\r\n});\r\n\r\nconst Workbench: SFC<IProps> = ({\r\n  classes,\r\n  diagramEngine,\r\n  handleDragOver,\r\n  handleDrop\r\n}) => (\r\n  <div\r\n    className={classes.canvasContainer}\r\n    onDrop={handleDrop}\r\n    onDragOver={handleDragOver}\r\n  >\r\n    <DiagramWidget\r\n      className={classes.canvas}\r\n      diagramEngine={diagramEngine}\r\n      maxNumberPointsPerLink={0}\r\n      allowLooseLinks={false}\r\n    />\r\n  </div>\r\n);\r\n\r\nexport default withStyles(styles)(Workbench);\r\n","import \"storm-react-diagrams/dist/style.min.css\";\r\n\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport { match as Match } from \"react-router\";\r\nimport { DiagramModel, DiagramEngine, NodeModel } from \"storm-react-diagrams\";\r\n\r\nimport { RootState } from \"rootReducer\";\r\nimport {\r\n  sessionRequest,\r\n  addQuery,\r\n  SessionAction,\r\n  QueryAction\r\n} from \"workbench/actions\";\r\nimport { ElementType } from \"sidebar/operators/operatorsData\";\r\n\r\nimport { destroySessionAsync } from \"workbench/api\";\r\n\r\nimport WidgetPortFactory from \"workbench/WidgetPortFactory\";\r\nimport WidgetPortModel from \"workbench/WidgetPortModel\";\r\n\r\nimport QueryNodeFactory from \"workbench/query/widget/QueryNodeFactory\";\r\nimport QueryNodeModel from \"workbench/query/widget/QueryNodeModel\";\r\n\r\nimport FilterNodeFactory from \"workbench/filter/FilterNodeFactory\";\r\nimport FilterNodeModel from \"workbench/filter/FilterNodeModel\";\r\n\r\nimport { LoadingContainer } from \"common/loading\";\r\nimport Canvas from \"workbench/Canvas\";\r\n\r\ninterface IRouterProps {\r\n  match: Match<{ id: string }>;\r\n}\r\n\r\ntype Props = ReturnType<typeof mapDispatchToProps> &\r\n  ReturnType<typeof mapStateToProps> &\r\n  IRouterProps;\r\n\r\ninterface ILocalState {\r\n  node: NodeModel;\r\n}\r\n\r\nclass CanvasContainer extends Component<Props, ILocalState> {\r\n  private diagramEngine: DiagramEngine;\r\n  private activeModel: DiagramModel;\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.diagramEngine = new DiagramEngine();\r\n    this.diagramEngine.installDefaultFactories();\r\n\r\n    this.diagramEngine.registerPortFactory(\r\n      new WidgetPortFactory(new WidgetPortModel())\r\n    );\r\n    this.diagramEngine.registerNodeFactory(new QueryNodeFactory());\r\n    this.diagramEngine.registerNodeFactory(new FilterNodeFactory());\r\n\r\n    this.activeModel = new DiagramModel();\r\n    this.diagramEngine.setDiagramModel(this.activeModel);\r\n  }\r\n\r\n  public componentDidMount() {\r\n    const { match } = this.props;\r\n    const dataViewId = match.params.id === \"new\" ? undefined : match.params.id;\r\n\r\n    this.props.dispatchSessionRequest(dataViewId);\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: Props) {\r\n    const currentSession = this.props.session;\r\n    if (currentSession == null) {\r\n      return;\r\n    }\r\n\r\n    const prevSession = prevProps.session;\r\n    if (\r\n      prevSession == null ||\r\n      currentSession.SessionId !== prevSession.SessionId\r\n    ) {\r\n      const queryNodes = Object.keys(this.props.queries).map(\r\n        id => new QueryNodeModel(this.props.queries[id])\r\n      );\r\n\r\n      const filterNodes = Object.keys(this.props.filters).map(\r\n        id => new FilterNodeModel(this.props.filters[id])\r\n      );\r\n\r\n      this.activeModel.addAll(...queryNodes);\r\n      this.activeModel.addAll(...filterNodes);\r\n\r\n      const links = [];\r\n      for (const id of Object.keys(this.props.connections)) {\r\n        const connection = this.props.connections[id];\r\n\r\n        const nodeFrom = this.activeModel.getNode(\r\n          connection.FromElementId.toString()\r\n        );\r\n\r\n        const nodeTo = this.activeModel.getNode(\r\n          connection.ToElementId.toString()\r\n        );\r\n\r\n        if (nodeFrom == null || nodeTo == null) {\r\n          return;\r\n        }\r\n\r\n        const portFrom = nodeFrom.getPort(\"from\") as WidgetPortModel;\r\n        const portTo = nodeTo.getPort(\"to\") as WidgetPortModel;\r\n\r\n        const link = portFrom.link(portTo);\r\n\r\n        links.push(link);\r\n      }\r\n\r\n      this.activeModel.addAll(...links);\r\n    }\r\n  }\r\n\r\n  // public componentWillUnmount() {\r\n  //   const {\r\n  //     session: { TenantId, SessionId }\r\n  //   } = this.props;\r\n  //   destroySessionAsync(TenantId, SessionId).catch((e: any) => {\r\n  //     // tslint:disable-next-line:no-console\r\n  //     console.log(e);\r\n  //   });\r\n  // }\r\n\r\n  public render() {\r\n    const {\r\n      isLoading\r\n      // dispatchAddQuery,\r\n      // session,\r\n      // graph,\r\n      // queries,\r\n      // connections,\r\n      // filters\r\n    } = this.props;\r\n\r\n    return (\r\n      <LoadingContainer isLoading={isLoading}>\r\n        <Canvas\r\n          diagramEngine={this.diagramEngine}\r\n          handleDragOver={this.handleDragOver}\r\n          handleDrop={this.handleDrop}\r\n          // session={session}\r\n          // queries={queries}\r\n          // connections={connections}\r\n          // filters={filters}\r\n        />\r\n      </LoadingContainer>\r\n    );\r\n  }\r\n\r\n  private handleDragOver = (event: React.DragEvent<HTMLDivElement>) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  private handleDrop = (event: React.DragEvent<HTMLDivElement>) => {\r\n    const { graph, dispatchAddQuery } = this.props;\r\n\r\n    if (graph == null) {\r\n      throw new Error(\"Graph cannot be null.\");\r\n    }\r\n\r\n    const operatorServiceId = event.dataTransfer.getData(\"ELEMENT\");\r\n    const points = this.diagramEngine.getRelativeMousePoint(event);\r\n\r\n    switch (operatorServiceId) {\r\n      case ElementType.QUERY:\r\n        dispatchAddQuery(graph.NextElementId, points.x, points.y);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    // const data = JSON.parse(event.dataTransfer.getData(\"ELEMENT\"));\r\n    // const points = this.diagramEngine.getRelativeMousePoint(event);\r\n    // const node = new QueryNodeModel(\"Pippo\", points.x, points.y);\r\n    // this.diagramEngine.getDiagramModel().addNode(node);\r\n    // // Updating the state triggers a re render.\r\n    // this.setState({\r\n    //   node\r\n    // });\r\n  };\r\n}\r\n\r\nconst mapStateToProps = ({ sessionReducer: { ...state } }: RootState) => state;\r\n\r\nconst mapDispatchToProps = (\r\n  dispatch: Dispatch<SessionAction | QueryAction>\r\n) => ({\r\n  dispatchSessionRequest: (dataViewId?: string) => {\r\n    dispatch(sessionRequest(dataViewId));\r\n  },\r\n  dispatchAddQuery: (elementId: number, x: number, y: number) =>\r\n    dispatch(addQuery(elementId, x, y))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CanvasContainer);\r\n","import React, { SFC, Fragment } from \"react\";\r\nimport { match as Match } from \"react-router\";\r\n\r\nimport { createStyles, withStyles, WithStyles } from \"@material-ui/core/styles\";\r\n\r\nimport WorkbenchToolbar from \"workbench/toolBar/WorkbenchToolbar\";\r\nimport ConfigSwitchContainer from \"workbench/configSwitch/ConfigSwitchContainer\";\r\nimport CanvasContainer from \"workbench/CanvasContainer\";\r\n\r\ninterface IProps extends WithStyles<typeof styles> {\r\n  match: Match<{ id: string }>;\r\n}\r\n\r\nconst styles = createStyles({\r\n  workbench: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    border: \"3px solid #ccc\",\r\n    backgroundColor: \"#ccc\"\r\n  },\r\n  canvasContainer: {\r\n    borderRadius: 5,\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    backgroundColor: \"#3c3c3c\",\r\n    backgroundImage: `linear-gradient(\r\n      0deg,\r\n      transparent 24%,\r\n      rgba(255, 255, 255, 0.05) 25%,\r\n      rgba(255, 255, 255, 0.05) 26%,\r\n      transparent 27%,\r\n      transparent 74%,\r\n      rgba(255, 255, 255, 0.05) 75%,\r\n      rgba(255, 255, 255, 0.05) 76%,\r\n      transparent 77%,\r\n      transparent\r\n    ),\r\n    linear-gradient(\r\n      90deg,\r\n      transparent 24%,\r\n      rgba(255, 255, 255, 0.05) 25%,\r\n      rgba(255, 255, 255, 0.05) 26%,\r\n      transparent 27%,\r\n      transparent 74%,\r\n      rgba(255, 255, 255, 0.05) 75%,\r\n      rgba(255, 255, 255, 0.05) 76%,\r\n      transparent 77%,\r\n      transparent\r\n    )`,\r\n    backgroundSize: \"50px 50px\"\r\n  }\r\n});\r\n\r\nconst Workbench: SFC<IProps> = ({ classes, match }) => (\r\n  <div className={classes.workbench}>\r\n    <WorkbenchToolbar />\r\n    <ConfigSwitchContainer />\r\n    <div className={classes.canvasContainer}>\r\n      <CanvasContainer match={match} />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default withStyles(styles)(Workbench);\r\n"],"sourceRoot":""}
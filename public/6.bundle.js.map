{"version":3,"sources":["webpack:///./src/workbench/utils.ts","webpack:///./src/workbench/toolBar/WorkbenchToolbar.tsx","webpack:///./src/workbench/configSwitch/selectors.ts","webpack:///./src/workbench/query/selectors.ts","webpack:///./src/workbench/query/HelperText.tsx","webpack:///./src/workbench/query/StepperHeader.tsx","webpack:///./src/workbench/query/StepperHeaderContainer.tsx","webpack:///./src/common/select/Option.tsx","webpack:///./src/common/select/NoOption.tsx","webpack:///./src/common/select/SelectInput.tsx","webpack:///./src/common/select/SelectInputContainer.tsx","webpack:///./src/workbench/query/sourceSelector/SourceSelector.tsx","webpack:///./src/workbench/query/sourceSelector/SourceSelectorContainer.tsx","webpack:///./src/common/searchableList/Row.tsx","webpack:///./src/common/searchableList/SearchableList.tsx","webpack:///./src/common/searchableList/SearchableListContainer.tsx","webpack:///./src/workbench/query/columnSelector/ColumnsSelector.tsx","webpack:///./src/workbench/query/columnSelector/ColumnsSelectorContainer.tsx","webpack:///./src/workbench/query/constraintSelector/ConstraintSelectorContainer.tsx","webpack:///./src/workbench/query/ConfigActions.tsx","webpack:///./src/workbench/query/ConfigActionsContainer.tsx","webpack:///./src/workbench/query/QueryConfig.tsx","webpack:///./src/workbench/query/QueryConfigContainer.tsx","webpack:///./src/workbench/configSwitch/ConfigSwitch.tsx","webpack:///./src/workbench/configSwitch/ConfigSwitchContainer.tsx","webpack:///./src/workbench/WidgetPortModel.ts","webpack:///./src/workbench/query/widget/QueryNodeWidget.tsx","webpack:///./src/workbench/filter/FilterNodeWidget.tsx","webpack:///./src/workbench/Canvas.tsx","webpack:///./src/workbench/CanvasContainer.tsx","webpack:///./src/workbench/WidgetPortFactory.ts","webpack:///./src/workbench/query/widget/QueryNodeFactory.tsx","webpack:///./src/workbench/filter/FilterNodeFactory.tsx","webpack:///./src/workbench/query/widget/QueryNodeModel.ts","webpack:///./src/workbench/filter/FilterNodeModel.ts","webpack:///./src/workbench/Workbench.tsx"],"names":["DATA_TYPES","NOTSPECIFIED","TEXTVALUE","BOOLVALUE","INTERVALVALUE","INTVALUE","DOUBLEVALUE","TEXTVALUEWITHLABEL","TEXTVALUEWITHMASK","TEXTVALUEWITHORDER","SELECT","TEXTINPUTLIST","MULTISELECT","toolbarData","id","label","IconComponent","RestorePage_default","a","Save_default","Share_default","Undo_default","Redo_default","OpenWith_default","ArrowDownward_default","newWorkbenchLink","className","children","react_default","createElement","Link","to","toolBar_WorkbenchToolbar","Object","styles","withStyles","spacing","createStyles","root","position","right","marginRight","marginTop","zIndex","toolBar","minHeight","leftIcon","fill","unit","classes","Paper_default","Toolbar_default","disableGutters","map","Button_default","key","size","component","selectors_isDrawerOpen","lib","createSelector","state","configSwitchReducer","elementType","operatorsData","b","NONE","getDataServices","queryConfigReducer","dataServices","ItemId","Label","value","sort","elementIdSelector","elementId","querySelector","sessionReducer","queries","getAvailableColumns","availableColumns","filter","ac","Columns","c","ColumnName","includes","getQuery","getQueryColumns","getCompletedSteps","selectedQuery","length","TargetDataViewId","getQueryConstraints","Constraints","constraint","constraintDsiplayValue","assign","displayValue","DataType","Values","intervalType","intervalString","intervalLabel","query_HelperText","currentStep","title","text","Grid_default","item","xs","Card_default","CardHeader_default","avatar","Avatar_default","InfoOutlined_default","subheader","query_StepperHeader","gridTitle","width","backgroundColor","borderBottom","titleContainer","display","alignItems","marginBottom","stepper","padding","stepTitle","stepLabels","completedSteps","dispatchGoToStep","react","Fragment","Typography_default","variant","Stepper_default","nonLinear","activeStep","index","Step_default","StepButton_default","onClick","stepIndex","disabled","completed","StepperHeaderContainer_stepLabels","query_StepperHeaderContainer","es","connect","dispatch","step","actions","j","Component","[object Object]","this","props","select_Option","menuItem","labelContainer","style","OptionsIcon","option","handleClick","MenuItem_default","ListItemIcon_default","select_NoOption","color","Ve","Me","n","noRowsRenderer","select_SelectInput","containerRef","inputLabel","helperText","options","handleInputClick","handleInputChange","noClear","handleClickClearSelected","handleMouseDownPassword","anchorEl","handleClose","handleOptionClick","ref","FormControl_default","fullWidth","InputLabel_default","htmlFor","Input_default","onChange","endAdornment","InputAdornment_default","IconButton_default","aria-label","onMouseDown","Clear_default","Menu_default","disableAutoFocus","disableAutoFocusItem","disableRestoreFocus","MenuListProps","disablePadding","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","open","onClose","current","dist_es","offsetWidth","height","Math","min","rowCount","rowHeight","rowRenderer","FormHelperText_default","SelectInputContainer_SelectInputContainer","super","createRef","event","preventDefault","setState","currentTarget","toUpperCase","target","_","handleChange","selectedOption","find","SourceSelector_styles","iconColour","SourceSelector_OptionsIcon","Storage_default","sourceSelector_SourceSelector","targetDataViewId","handleChangeDataService","sourceSelector_SourceSelectorContainer","dispatchDataServicesRequest","f","dispatchUpdateDataService","workbench_actions","q","Row_styles","listItem","paddingLeft","listItemText","listItemTextPrimary","flexBasis","searchableList_Row","ListItem_default","divider","dense","button","ContainerComponent","SettingsApplications_default","ListItemText_default","primary","SearchableList_styles","list","paper","SearchableList_noRowsRenderer","searchableList_SearchableList","totItems","searchableItems","searchString","handleItemClick","handleClickClearIcon","List_default","disableHeight","filterTextSelector","itemsSelector","items","SearchableListContainer_SearchableListContainer","filterList","filterText","filteredList","columnSelector_ColumnsSelector","listContainer","top","selectedColumns","handleAddQueryColumn","handleRemoveQueryColumn","container","KeyboardArrowRight_default","KeyboardArrowLeft_default","ColumnsSelectorContainer_availableColumnsSelector","selectedColumnsSelector","columnSelector_ColumnsSelectorContainer","dispatchAddQueryColumn","column","h","dispatchRemoveQueryColumn","columnName","l","availableColumnOptions","selectedColumnOptions","Aggregation","constraintSelector_ConstraintSelectorContainer","queryConstraints","filterCapabilities","dispatchFilterCapabilitiesRequest","dispatchAddQueryConstraint","constraintId","constraintTarget","i","dispatchUpdateQueryConstraintType","constraintType","p","dispatchRemoveQueryConstraint","m","handledUpdateQueryConstraintType","handledRemoveQueryConstraint","query_ConfigActions","actionButtons","justifyContent","bottom","margin","dispatchCloseConfig","handleStep","query_ConfigActionsContainer","dispatchCloseQueryConfig","e","query_QueryConfig","isLoading","loading","Error","ElementId","query_QueryConfigContainer","configSwitch_ConfigSwitch","form","overflow","isDrawerOpen","Drawer_default","anchor","noValidate","autoComplete","alignContent","QUERY","FILTER","configSwitch_ConfigSwitchContainer","WidgetPortModel_WorkbenchPortModel","main","PortModel","pos","serialize","data","engine","deSerialize","port","link","createLinkModel","setSourcePort","setTargetPort","DefaultLinkModel","kt","Tt","handleWheel","stopPropagation","widget_QueryNodeWidget","palette","background","operatorContainer","flexFlow","borderRadius","border","maxHeight","itemIcon","whiteSpace","textOverflow","topPort","bottomPort","node","QueyLabel","getQueryInfo","PortWidget","name","noWrap","Divider_default","onWheel","ColumnLabel","filter_FilterNodeWidget","body","maxWidth","filterType","textAlign","FilterType","getFilterInfo","Canvas_styles","canvasContainer","canvas","Canvas","diagramEngine","handleDragOver","handleDrop","onDrop","onDragOver","DiagramWidget","maxNumberPointsPerLink","allowLooseLinks","workbench_CanvasContainer","_a","t","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","r","__rest","dispatchSessionRequest","dataViewId","dispatchAddQuery","x","y","g","graph","operatorServiceId","dataTransfer","getData","points","getRelativeMousePoint","NextElementId","DiagramEngine","installDefaultFactories","registerPortFactory","AbstractPortFactory","portModel","initialConfig","registerNodeFactory","AbstractNodeFactory","NodeModel","activeModel","DiagramModel","setDiagramModel","match","params","prevProps","currentSession","session","prevSession","SessionId","queryNodes","keys","queryInfo","toString","addPort","setPosition","LayoutX","LayoutY","filterNodes","filters","filterInfo","addAll","links","connections","connection","nodeFrom","getNode","FromElementId","nodeTo","ToElementId","portFrom","getPort","portTo","push","Workbench_styles","workbench","backgroundImage","backgroundSize","__webpack_exports__","default"],"mappings":"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","file":"6.bundle.js","sourcesContent":["import { IConstraint } from \"workbench/types\";\r\n\r\nimport NewIcon from \"@material-ui/icons/RestorePage\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport UndoIcon from \"@material-ui/icons/Undo\";\r\nimport RedoIcon from \"@material-ui/icons/Redo\";\r\nimport OpenWithIcon from \"@material-ui/icons/OpenWith\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\n\r\ninterface IContraintDisplayValue extends IConstraint {\r\n  label: string;\r\n  displayValue: any;\r\n}\r\n\r\nexport enum DATA_TYPES {\r\n  NOTSPECIFIED = \"NotSpecified\",\r\n  TEXTVALUE = \"TextValue\",\r\n  BOOLVALUE = \"BoolValue\",\r\n  INTERVALVALUE = \"Interval\",\r\n  INTVALUE = \"IntValue\",\r\n  DOUBLEVALUE = \"DoubleValue\",\r\n  TEXTVALUEWITHLABEL = \"TextValueWithLabel\",\r\n  TEXTVALUEWITHMASK = \"TextValueWithMask\",\r\n  TEXTVALUEWITHORDER = \"TextValueWithOrder\",\r\n  SELECT = \"Select\",\r\n  TEXTINPUTLIST = \"TextInputList\",\r\n  MULTISELECT = \"MultiSelect\"\r\n}\r\n\r\nexport const toolbarData = [\r\n  {\r\n    id: 0,\r\n    label: \"New\",\r\n    IconComponent: NewIcon\r\n  },\r\n  {\r\n    id: 1,\r\n    label: \"Save\",\r\n    IconComponent: SaveIcon\r\n  },\r\n  {\r\n    id: 2,\r\n    label: \"Save As\",\r\n    IconComponent: SaveIcon\r\n  },\r\n  {\r\n    id: 3,\r\n    label: \"Share\",\r\n    IconComponent: ShareIcon\r\n  },\r\n  {\r\n    id: 4,\r\n    label: \"Undo\",\r\n    IconComponent: UndoIcon\r\n  },\r\n  {\r\n    id: 5,\r\n    label: \"Redo\",\r\n    IconComponent: RedoIcon\r\n  },\r\n  {\r\n    id: 6,\r\n    label: \"Layout\",\r\n    IconComponent: OpenWithIcon\r\n  },\r\n  {\r\n    id: 7,\r\n    label: \"Export Graph\",\r\n    IconComponent: ArrowDownwardIcon\r\n  }\r\n];\r\n\r\nexport function getConstraintDisplayValue(constraint: IConstraint) {\r\n  const constraintDsiplayValue: IContraintDisplayValue = Object.assign(\r\n    {\r\n      label: constraint.ColumnName,\r\n      displayValue: \"\"\r\n    },\r\n    constraint\r\n  );\r\n  switch (constraint.DataType) {\r\n    case DATA_TYPES.INTERVALVALUE:\r\n      constraintDsiplayValue.displayValue = constraint.Values && {\r\n        intervalType: constraint.Values[0][0],\r\n        intervalString: constraint.Values[0][1],\r\n        intervalLabel: constraint.Values[0][2]\r\n      };\r\n      break;\r\n\r\n    case DATA_TYPES.TEXTVALUE:\r\n    case DATA_TYPES.TEXTVALUEWITHLABEL:\r\n    case DATA_TYPES.TEXTVALUEWITHMASK:\r\n    case DATA_TYPES.TEXTVALUEWITHORDER:\r\n    case DATA_TYPES.BOOLVALUE:\r\n    case DATA_TYPES.INTVALUE:\r\n    case DATA_TYPES.DOUBLEVALUE:\r\n      constraintDsiplayValue.displayValue = constraint.Values\r\n        ? constraint.Values[0][0]\r\n        : \"\";\r\n      break;\r\n    // case DATA_TYPES.SELECT:\r\n    //   c.displayValue = {\r\n    //     valuesHint: valuesHint ? valuesHint : \"NoHint\",\r\n    //     values: values,\r\n    //     valuesDisplayStringsPreview: valuesDisplayStringsPreview\r\n    //   };\r\n    //   break;\r\n    // case DATA_TYPES.TEXTINPUTLIST:\r\n    // case DATA_TYPES.MULTISELECT:\r\n    //   c.displayValue = {\r\n    //     valuesHint: valuesHint ? valuesHint : \"SelectedAll\",\r\n    //     values: values,\r\n    //     valuesDisplayStringsPreview: valuesDisplayStringsPreview\r\n    //   };\r\n    //   break;\r\n    default:\r\n      constraintDsiplayValue.displayValue = \"\";\r\n      break;\r\n  }\r\n\r\n  return constraintDsiplayValue;\r\n}\r\n\r\ninterface IConstraintVectorValue {\r\n  vectorValues: object[][];\r\n  valuesHint?: string;\r\n}\r\n\r\nexport function getConstraintVectorValue(\r\n  dataType: DATA_TYPES,\r\n  values: any, // Fix me.\r\n  valuesHint?: string\r\n) {\r\n  const valuesObj: IConstraintVectorValue = {\r\n    vectorValues: [[values]],\r\n    valuesHint: \"NoHint\"\r\n  };\r\n\r\n  switch (dataType) {\r\n    case DATA_TYPES.INTERVALVALUE:\r\n      valuesObj.vectorValues = [\r\n        [values.intervalType, values.intervalString, values.intervalLabel]\r\n      ];\r\n      break;\r\n\r\n    case DATA_TYPES.SELECT:\r\n    case DATA_TYPES.TEXTINPUTLIST:\r\n    case DATA_TYPES.MULTISELECT:\r\n      valuesObj.vectorValues = values.values;\r\n      valuesObj.valuesHint = valuesHint;\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return valuesObj;\r\n}\r\n","import React, { SFC } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  withStyles,\r\n  WithStyles\r\n} from \"@material-ui/core/styles\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Button, { ButtonProps } from \"@material-ui/core/Button\";\r\n\r\nimport { toolbarData } from \"workbench/utils\";\r\n\r\nconst styles = ({ spacing }: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      position: \"absolute\",\r\n      right: 0,\r\n      marginRight: 10,\r\n      marginTop: 10,\r\n      zIndex: 1\r\n    },\r\n    toolBar: {\r\n      minHeight: 0\r\n    },\r\n    leftIcon: {\r\n      fill: \"#bdbdbd\",\r\n      marginRight: spacing.unit\r\n    }\r\n  });\r\n\r\nconst newWorkbenchLink = ({ className, children }: ButtonProps) => (\r\n  <Link className={className} to=\"/workbench/new\">\r\n    {children}\r\n  </Link>\r\n);\r\n\r\nconst WorkbenchToolbar: SFC<WithStyles<typeof styles>> = ({ classes }) => (\r\n  <Paper className={classes.root}>\r\n    <Toolbar className={classes.toolBar} disableGutters>\r\n      {toolbarData.map(({ id, label, IconComponent }) => (\r\n        <Button key={id} size=\"small\" component={newWorkbenchLink}>\r\n          <IconComponent className={classes.leftIcon} />\r\n          {label}\r\n        </Button>\r\n      ))}\r\n    </Toolbar>\r\n  </Paper>\r\n);\r\n\r\nexport default withStyles(styles)(WorkbenchToolbar);\r\n","import { createSelector } from \"reselect\";\r\n\r\nimport { RootState } from \"rootReducer\";\r\nimport { ElementType } from \"sidebar/operators/operatorsData\";\r\n\r\nconst elementTypeSelector = (state: RootState) =>\r\n  state.configSwitchReducer.elementType;\r\n\r\nexport const isDrawerOpen = createSelector(\r\n  elementTypeSelector,\r\n  elementType => elementType !== ElementType.NONE\r\n);\r\n","import { createSelector } from \"reselect\";\r\n\r\nimport { RootState } from \"rootReducer\";\r\nimport { getConstraintDisplayValue } from \"workbench/utils\";\r\n\r\nconst dataServicesSelector = (state: RootState) =>\r\n  state.queryConfigReducer.dataServices;\r\n\r\nexport const getDataServices = createSelector(\r\n  dataServicesSelector,\r\n  dataServices =>\r\n    dataServices\r\n      .map(({ ItemId, Label }) => ({\r\n        value: ItemId,\r\n        label: Label\r\n      }))\r\n      .sort((a, b) => {\r\n        if (a.label < b.label) {\r\n          return -1;\r\n        }\r\n        if (a.label > b.label) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      })\r\n);\r\n\r\nconst elementIdSelector = (state: RootState) =>\r\n  state.queryConfigReducer.elementId;\r\nconst querySelector = (state: RootState) => state.sessionReducer.queries;\r\nconst availableColumnsSelector = (state: RootState) =>\r\n  state.queryConfigReducer.availableColumns;\r\n\r\nexport const getAvailableColumns = createSelector(\r\n  elementIdSelector,\r\n  querySelector,\r\n  availableColumnsSelector,\r\n  (elementId, queries, availableColumns) =>\r\n    availableColumns.filter(\r\n      ac =>\r\n        !queries[elementId].Columns.map(c => c.ColumnName).includes(\r\n          ac.ColumnName\r\n        )\r\n    )\r\n);\r\n\r\nexport const getQuery = createSelector(\r\n  elementIdSelector,\r\n  querySelector,\r\n  (elementId, queries) => queries[elementId]\r\n);\r\n\r\nexport const getQueryColumns = createSelector(\r\n  elementIdSelector,\r\n  querySelector,\r\n  (elementId, queries) => queries[elementId].Columns\r\n);\r\n\r\nexport const getCompletedSteps = createSelector(\r\n  elementIdSelector,\r\n  querySelector,\r\n  (elementId, queries) => {\r\n    const selectedQuery = queries[elementId];\r\n\r\n    if (selectedQuery.Columns.length > 0) {\r\n      return [true, true, true, false];\r\n    }\r\n    if (selectedQuery.TargetDataViewId) {\r\n      return [true, false];\r\n    }\r\n\r\n    return [false];\r\n  }\r\n);\r\n\r\n// const availableFiltersSelector = (state: IState) =>\r\n//   state.queryConfigReducer.availableFilters;\r\n\r\n// const noteSupportedDataTypes = [\"DateTimeValue\", \"DateValue\", \"TimeValue\"];\r\n\r\n// // NOTE: date types are not supported yet.\r\n// export const getConstraintTargets = createSelector(\r\n//   availableColumnsSelector,\r\n//   availableFiltersSelector,\r\n//   elementIdSelector,\r\n//   querySelector,\r\n//   (columns, filters, elementId, queries) => {\r\n//     const filtersSelect = filters.map(\r\n//       ({ Label, FilterName, DataType, ToColumnName }) => ({\r\n//         FilterName,\r\n//         ToColumnName,\r\n//         value: {\r\n//           label: Label,\r\n//           FilterName,\r\n//           DataType\r\n//         },\r\n//         label: Label + \" (F)\",\r\n//         secondaryLabel: `(${DataType})`\r\n//       })\r\n//     );\r\n\r\n//     const columnsSelect = columns\r\n//       .filter(({ DataType }) => !noteSupportedDataTypes.includes(DataType))\r\n//       .filter(\r\n//         ({ ColumnName }) =>\r\n//           !filters.some(\r\n//             ({ ToColumnName }) => ToColumnName && ToColumnName === ColumnName\r\n//           )\r\n//       )\r\n//       .map(({ Label, ColumnName, DataType }) => ({\r\n//         ColumnName,\r\n//         value: {\r\n//           label: Label,\r\n//           ColumnName,\r\n//           DataType\r\n//         },\r\n//         label: Label,\r\n//         secondaryLabel: `(${DataType})`\r\n//       }));\r\n\r\n//     return []\r\n//       .concat(filtersSelect, columnsSelect)\r\n//       .filter(\r\n//         availConstraint =>\r\n//           !queries[elementId].Constraints.some(\r\n//             queryConstraint =>\r\n//               (availConstraint.FilterName &&\r\n//                 availConstraint.FilterName === queryConstraint.FilterName) ||\r\n//               (availConstraint.ColumnName &&\r\n//                 availConstraint.ColumnName === queryConstraint.ColumnName)\r\n//           )\r\n//       );\r\n//   }\r\n// );\r\n\r\nexport const getQueryConstraints = createSelector(\r\n  elementIdSelector,\r\n  querySelector,\r\n  (elementId, queries) =>\r\n    queries[elementId].Constraints.map(c => getConstraintDisplayValue(c))\r\n);\r\n","import React, { SFC } from \"react\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nimport InfoIcon from \"@material-ui/icons/InfoOutlined\";\r\n\r\ninterface IProps {\r\n  currentStep: number;\r\n}\r\n\r\nconst HelperText: SFC<IProps> = ({ currentStep }) => {\r\n  let title = \"\";\r\n  let text = \"\";\r\n\r\n  switch (currentStep) {\r\n    case 0:\r\n      title = \"Query source\";\r\n      text = `Select from the drop down the source of your query.\r\n        It can be a data source or an existing query.\r\n        Once you are done go to the next step clicking on the next button.`;\r\n      break;\r\n    case 1:\r\n      title = \"Query columns\";\r\n      text = `Each source presents a list of available columns.\r\n        You can search for a particular column using the search input.\r\n        Click on a column on the available list to move it to the selected list.\r\n        To remove a column from the selected list click on it again.`;\r\n      break;\r\n    case 2:\r\n      title = \"Query Constraints\";\r\n      text = `Narrow down your data with constraints.\r\n        Constraints are part of the query you are creating and are not visible outside of it.`;\r\n      break;\r\n    default:\r\n      return null;\r\n  }\r\n\r\n  return (\r\n    <Grid item xs={12}>\r\n      <Card>\r\n        <CardHeader\r\n          avatar={\r\n            <Avatar>\r\n              <InfoIcon />\r\n            </Avatar>\r\n          }\r\n          title={title}\r\n          subheader={text}\r\n        />\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default HelperText;\r\n","import React, { Fragment, SFC } from \"react\";\r\n\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  withStyles,\r\n  WithStyles\r\n} from \"@material-ui/core/styles\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepButton from \"@material-ui/core/StepButton\";\r\n\r\ninterface IProps extends WithStyles<typeof styles> {\r\n  title: string;\r\n  stepLabels: string[];\r\n  currentStep: number;\r\n  completedSteps: boolean[];\r\n  dispatchGoToStep: (stepIndex: number) => void;\r\n}\r\n\r\nconst styles = ({ spacing }: Theme) =>\r\n  createStyles({\r\n    gridTitle: {\r\n      position: \"fixed\",\r\n      width: \"99%\",\r\n      backgroundColor: \"white\",\r\n      zIndex: 2,\r\n      borderBottom: \"1px solid #eee\"\r\n    },\r\n    titleContainer: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      marginBottom: spacing.unit * 2\r\n    },\r\n    title: {\r\n      marginRight: spacing.unit * 2\r\n    },\r\n    stepper: {\r\n      padding: 0,\r\n      width: \"100%\"\r\n    },\r\n    stepTitle: {\r\n      marginTop: 85\r\n    }\r\n  });\r\n\r\nconst StepperHeader: SFC<IProps> = ({\r\n  classes,\r\n  title,\r\n  stepLabels,\r\n  currentStep,\r\n  completedSteps,\r\n  dispatchGoToStep\r\n}) => {\r\n  const handleStep = (stepIndex: number) => () => {\r\n    return dispatchGoToStep(stepIndex);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid item xs={12} className={classes.gridTitle}>\r\n        <div className={classes.titleContainer}>\r\n          <Typography variant=\"title\" className={classes.title}>\r\n            {title}\r\n          </Typography>\r\n        </div>\r\n        <Stepper\r\n          classes={{ root: classes.stepper }}\r\n          nonLinear\r\n          activeStep={currentStep}\r\n        >\r\n          {stepLabels.map((label, index) => (\r\n            <Step key={label}>\r\n              <StepButton\r\n                onClick={handleStep(index)}\r\n                disabled={completedSteps[index] == null}\r\n                completed={completedSteps[index]}\r\n              >\r\n                {label}\r\n              </StepButton>\r\n            </Step>\r\n          ))}\r\n        </Stepper>\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.stepTitle}>\r\n        <Typography variant=\"headline\">\r\n          {`Step ${currentStep + 1}: ${stepLabels[currentStep]}`}\r\n        </Typography>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(StepperHeader);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\n\r\nimport { goToStep, IGoToStep } from \"workbench/query/actions\";\r\n\r\nimport StepperHeader from \"workbench/query/StepperHeader\";\r\n\r\nconst stepLabels = [\"Source\", \"Columns\", \"Constraints\", \"Summary\"];\r\n\r\ninterface IOwnProps {\r\n  currentStep: number;\r\n  completedSteps: boolean[];\r\n}\r\n\r\ntype Props = ReturnType<typeof mapDispatchToProps> & IOwnProps;\r\n\r\nclass StepperHeaderContainer extends Component<Props> {\r\n  public render() {\r\n    const { currentStep, completedSteps, dispatchGoToStep } = this.props;\r\n\r\n    return (\r\n      <StepperHeader\r\n        title=\"Configure Query\"\r\n        stepLabels={stepLabels}\r\n        currentStep={currentStep}\r\n        completedSteps={completedSteps}\r\n        dispatchGoToStep={dispatchGoToStep}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<IGoToStep>) => ({\r\n  dispatchGoToStep: (step: number) => dispatch(goToStep(step))\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(StepperHeaderContainer);\r\n","import React from \"react\";\r\n\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  withStyles,\r\n  WithStyles\r\n} from \"@material-ui/core/styles\";\r\n\r\nimport { IOption } from \"common/select/SelectInputContainer\";\r\n\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport { SvgIconProps } from \"@material-ui/core/SvgIcon\";\r\n\r\ninterface IProps extends WithStyles<typeof styles> {\r\n  style: React.CSSProperties;\r\n  OptionsIcon?: React.ComponentType<SvgIconProps>;\r\n  option: IOption;\r\n  handleClick: (event: React.MouseEvent) => void;\r\n}\r\n\r\nconst styles = ({ spacing: { unit } }: Theme) =>\r\n  createStyles({\r\n    menuItem: {\r\n      padding: \"0 0 0 10px\"\r\n    },\r\n    labelContainer: {\r\n      padding: unit * 2\r\n    }\r\n  });\r\n\r\nconst Option: React.SFC<IProps> = ({\r\n  classes,\r\n  style,\r\n  OptionsIcon,\r\n  option,\r\n  handleClick\r\n}) => (\r\n  <MenuItem\r\n    component=\"div\"\r\n    style={style}\r\n    className={classes.menuItem}\r\n    onClick={handleClick}\r\n  >\r\n    {OptionsIcon && (\r\n      <ListItemIcon>\r\n        <OptionsIcon />\r\n      </ListItemIcon>\r\n    )}\r\n    <div className={classes.labelContainer}>{option.label}</div>\r\n  </MenuItem>\r\n);\r\n\r\nexport default withStyles(styles)(Option);\r\n","import React from \"react\";\r\n\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  withStyles,\r\n  WithStyles\r\n} from \"@material-ui/core/styles\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst styles = ({ spacing: { unit } }: Theme) =>\r\n  createStyles({\r\n    labelContainer: {\r\n      padding: unit * 2\r\n    }\r\n  });\r\n\r\nconst NoOption: React.SFC<WithStyles<typeof styles>> = ({ classes }) => (\r\n  <Typography color=\"textSecondary\" className={classes.labelContainer}>\r\n    No items found\r\n  </Typography>\r\n);\r\n\r\nexport default withStyles(styles)(NoOption);\r\n","import React from \"react\";\r\n\r\nimport { IOption } from \"common/select/SelectInputContainer\";\r\n\r\nimport { List as VirtualizedList, ListRowProps } from \"react-virtualized\";\r\n\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { SvgIconProps } from \"@material-ui/core/SvgIcon\";\r\n\r\nimport Option from \"common/select/Option\";\r\nimport NoOption from \"common/select/NoOption\";\r\n\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\n\r\ninterface IProps {\r\n  label: string;\r\n  options: IOption[];\r\n  containerRef: React.RefObject<HTMLDivElement>;\r\n  anchorEl?: HTMLElement;\r\n  OptionsIcon?: React.ComponentType<SvgIconProps>;\r\n  inputLabel?: string;\r\n  helperText?: string;\r\n  noClear?: boolean;\r\n  handleOptionClick: (option: IOption) => (event: React.MouseEvent) => void;\r\n  handleInputClick: (event: React.MouseEvent<HTMLDivElement>) => void;\r\n  handleInputChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  handleClickClearSelected: () => void;\r\n  handleMouseDownPassword: (event: React.MouseEvent<HTMLDivElement>) => void;\r\n  handleClose: () => void;\r\n}\r\n\r\nconst rowRenderer = (\r\n  options: IOption[],\r\n  handleOptionClick: (option: IOption) => (event: React.MouseEvent) => void,\r\n  OptionsIcon?: React.ComponentType<SvgIconProps>\r\n) => ({ index, key, style }: ListRowProps) => {\r\n  const option = options[index];\r\n  const handleClick = handleOptionClick(option);\r\n\r\n  return (\r\n    <Option\r\n      key={key}\r\n      style={style}\r\n      option={option}\r\n      handleClick={handleClick}\r\n      OptionsIcon={OptionsIcon}\r\n    />\r\n  );\r\n};\r\n\r\nconst noRowsRenderer = () => <NoOption />;\r\n\r\nconst SelectInput: React.SFC<IProps> = ({\r\n  containerRef,\r\n  inputLabel,\r\n  helperText,\r\n  label,\r\n  options,\r\n  handleInputClick,\r\n  handleInputChange,\r\n  noClear,\r\n  handleClickClearSelected,\r\n  handleMouseDownPassword,\r\n  anchorEl,\r\n  handleClose,\r\n  handleOptionClick,\r\n  OptionsIcon\r\n}) => (\r\n  <div ref={containerRef}>\r\n    <FormControl fullWidth>\r\n      {inputLabel && (\r\n        <InputLabel htmlFor=\"select-input\">{inputLabel}</InputLabel>\r\n      )}\r\n      <Input\r\n        fullWidth\r\n        value={label}\r\n        onClick={handleInputClick}\r\n        onChange={handleInputChange}\r\n        endAdornment={\r\n          !noClear && (\r\n            <InputAdornment position=\"end\">\r\n              <IconButton\r\n                aria-label=\"Clear Selected\"\r\n                onClick={handleClickClearSelected}\r\n                onMouseDown={handleMouseDownPassword}\r\n              >\r\n                <ClearIcon />\r\n              </IconButton>\r\n            </InputAdornment>\r\n          )\r\n        }\r\n      />\r\n      <Menu\r\n        disableAutoFocus\r\n        disableAutoFocusItem\r\n        disableRestoreFocus\r\n        MenuListProps={{\r\n          component: \"div\",\r\n          disablePadding: true\r\n        }}\r\n        getContentAnchorEl={null}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\"\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"center\"\r\n        }}\r\n        anchorEl={anchorEl}\r\n        open={!!anchorEl}\r\n        onClose={handleClose}\r\n      >\r\n        {containerRef.current && (\r\n          <VirtualizedList\r\n            width={containerRef.current.offsetWidth}\r\n            height={\r\n              options.length === 0 ? 45 : Math.min(options.length * 40, 300)\r\n            }\r\n            rowCount={options.length}\r\n            rowHeight={40}\r\n            rowRenderer={rowRenderer(options, handleOptionClick, OptionsIcon)}\r\n            noRowsRenderer={noRowsRenderer}\r\n          />\r\n        )}\r\n      </Menu>\r\n      {helperText && <FormHelperText>{helperText}</FormHelperText>}\r\n    </FormControl>\r\n  </div>\r\n);\r\n\r\nexport default SelectInput;\r\n","import React from \"react\";\r\n\r\nimport { Overwrite, StyledComponentProps } from \"@material-ui/core\";\r\n\r\nimport SelectInput from \"common/select/SelectInput\";\r\n\r\nexport interface IOption {\r\n  label: string;\r\n  value: string;\r\n}\r\n\r\ninterface IProps {\r\n  value: string;\r\n  options: IOption[];\r\n  handleChange: (option: IOption) => void;\r\n  OptionsIcon?: React.ComponentType<\r\n    Overwrite<Pick<{}, never>, StyledComponentProps<string>>\r\n  >;\r\n  inputLabel?: string;\r\n  helperText?: string;\r\n  noClear?: boolean;\r\n}\r\n\r\ninterface IState {\r\n  anchorEl?: HTMLElement;\r\n  label: string;\r\n  options: IOption[];\r\n}\r\n\r\nexport default class SelectInputContainer extends React.Component<\r\n  IProps,\r\n  IState\r\n> {\r\n  private containerRef: React.RefObject<HTMLDivElement> = React.createRef();\r\n\r\n  constructor(props: IProps) {\r\n    super(props);\r\n\r\n    const selectedOption = this.props.options.find(\r\n      ({ value }) => value === props.value\r\n    );\r\n\r\n    this.state = {\r\n      anchorEl: undefined,\r\n      label: (selectedOption && selectedOption.label) || \"\",\r\n      options: [...this.props.options]\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    const { OptionsIcon, inputLabel, helperText, noClear } = this.props;\r\n    const { anchorEl, label, options } = this.state;\r\n\r\n    return (\r\n      <SelectInput\r\n        label={label}\r\n        containerRef={this.containerRef}\r\n        anchorEl={anchorEl}\r\n        options={options}\r\n        handleOptionClick={this.handleOptionClick}\r\n        handleInputClick={this.handleInputClick}\r\n        handleInputChange={this.handleInputChange}\r\n        handleClickClearSelected={this.handleClickClearSelected}\r\n        handleMouseDownPassword={this.handleMouseDownPassword}\r\n        handleClose={this.handleClose}\r\n        OptionsIcon={OptionsIcon}\r\n        inputLabel={inputLabel}\r\n        helperText={helperText}\r\n        noClear={noClear}\r\n      />\r\n    );\r\n  }\r\n\r\n  private handleMouseDownPassword = (\r\n    event: React.MouseEvent<HTMLDivElement>\r\n  ) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  private handleClickClearSelected = () => {\r\n    this.setState({\r\n      options: [...this.props.options],\r\n      label: \"\",\r\n      anchorEl: undefined\r\n    });\r\n  };\r\n\r\n  private handleInputClick = (event: React.MouseEvent<HTMLDivElement>) => {\r\n    this.setState({\r\n      options: [...this.props.options],\r\n      anchorEl: event.currentTarget\r\n    });\r\n  };\r\n\r\n  private handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      options: this.props.options.filter(({ label }) =>\r\n        label.toUpperCase().includes(event.target.value.toUpperCase())\r\n      ),\r\n      label: event.target.value\r\n    });\r\n  };\r\n\r\n  private handleOptionClick = (option: IOption) => (_: React.MouseEvent) => {\r\n    this.setState({\r\n      label: option.label,\r\n      anchorEl: undefined\r\n    });\r\n    this.props.handleChange(option);\r\n  };\r\n\r\n  private handleClose = () => {\r\n    this.setState({\r\n      anchorEl: undefined\r\n    });\r\n  };\r\n}\r\n","import React, { SFC } from \"react\";\r\n\r\nimport SelectInputContainer, {\r\n  IOption\r\n} from \"common/select/SelectInputContainer\";\r\n\r\nimport { createStyles, withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport StorageIcon from \"@material-ui/icons/Storage\";\r\n\r\ninterface IProps {\r\n  targetDataViewId: string;\r\n  dataServices: IOption[];\r\n  handleChangeDataService: (option: IOption) => void;\r\n}\r\n\r\nconst styles = createStyles({\r\n  iconColour: {\r\n    fill: \"#003b86\"\r\n  }\r\n});\r\n\r\nconst OptionsIcon = withStyles(styles)(({ classes }) => (\r\n  <StorageIcon className={classes.iconColour} />\r\n));\r\n\r\nconst SourceSelector: SFC<IProps> = ({\r\n  targetDataViewId,\r\n  dataServices,\r\n  handleChangeDataService\r\n}) => (\r\n  <SelectInputContainer\r\n    OptionsIcon={OptionsIcon}\r\n    inputLabel=\"Click here to select a source...\"\r\n    value={targetDataViewId}\r\n    options={dataServices}\r\n    handleChange={handleChangeDataService}\r\n  />\r\n);\r\n\r\nexport default SourceSelector;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\n\r\nimport { RootState } from \"rootReducer\";\r\nimport { updateQueryDataService, QueryAction } from \"workbench/actions\";\r\nimport {\r\n  dataServicesRequest,\r\n  DataServicesAction\r\n} from \"workbench/query/actions\";\r\nimport { getDataServices } from \"workbench/query/selectors\";\r\n\r\nimport { IOption } from \"common/select/SelectInputContainer\";\r\n\r\nimport SourceSelector from \"workbench/query/sourceSelector/SourceSelector\";\r\n\r\ninterface IOwnProps {\r\n  elementId: number;\r\n  targetDataViewId: string;\r\n}\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n  ReturnType<typeof mapDispatchToProps> &\r\n  IOwnProps;\r\n\r\nclass SourceSelectorContainer extends Component<Props> {\r\n  public componentDidMount() {\r\n    this.props.dispatchDataServicesRequest();\r\n  }\r\n\r\n  public render() {\r\n    const { targetDataViewId, dataServices } = this.props;\r\n\r\n    return (\r\n      <SourceSelector\r\n        targetDataViewId={targetDataViewId}\r\n        dataServices={dataServices}\r\n        handleChangeDataService={this.handleChangeDataService}\r\n      />\r\n    );\r\n  }\r\n\r\n  private handleChangeDataService = (option: IOption) => {\r\n    const { elementId, dispatchUpdateDataService } = this.props;\r\n\r\n    dispatchUpdateDataService(elementId, option.value);\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  dataServices: getDataServices(state)\r\n});\r\n\r\nconst mapDispatchToProps = (\r\n  dispatch: Dispatch<DataServicesAction | QueryAction>\r\n) => ({\r\n  dispatchDataServicesRequest: () => dispatch(dataServicesRequest()),\r\n  dispatchUpdateDataService: (elementId: number, targetDataViewId: string) =>\r\n    dispatch(updateQueryDataService(elementId, targetDataViewId))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SourceSelectorContainer);\r\n","import React, { SFC } from \"react\";\r\n\r\nimport { createStyles, withStyles, WithStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { IOption } from \"common/select/SelectInputContainer\";\r\n\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nimport SettingsIcon from \"@material-ui/icons/SettingsApplications\";\r\n\r\ninterface IProps extends WithStyles<typeof styles> {\r\n  style: React.CSSProperties;\r\n  option: IOption;\r\n  handleClick: (event: React.MouseEvent) => void;\r\n}\r\n\r\nconst styles = createStyles({\r\n  iconColour: {\r\n    fill: \"#003b86\"\r\n  },\r\n  listItem: {\r\n    paddingLeft: 15\r\n  },\r\n  listItemText: {\r\n    display: \"flex\"\r\n  },\r\n  listItemTextPrimary: {\r\n    flexBasis: \"35%\"\r\n  }\r\n});\r\n\r\nconst Row: SFC<IProps> = ({ classes, style, option, handleClick }) => (\r\n  <ListItem\r\n    divider\r\n    style={style}\r\n    onClick={handleClick}\r\n    disableGutters\r\n    dense\r\n    button\r\n    className={classes.listItem}\r\n    ContainerComponent=\"div\"\r\n  >\r\n    <ListItemIcon>\r\n      <SettingsIcon className={classes.iconColour} />\r\n    </ListItemIcon>\r\n    <ListItemText\r\n      classes={{\r\n        primary: classes.listItemTextPrimary\r\n      }}\r\n      className={classes.listItemText}\r\n      primary={option.label}\r\n      // secondary={`(${queryColumn.DataType})`}\r\n    />\r\n  </ListItem>\r\n);\r\n\r\nexport default withStyles(styles)(Row);\r\n","import React, { ChangeEventHandler, SFC } from \"react\";\r\n\r\nimport {\r\n  AutoSizer,\r\n  List as VirtualizedList,\r\n  ListRowProps\r\n} from \"react-virtualized\";\r\n\r\nimport { createStyles, withStyles, WithStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { IOption } from \"common/select/SelectInputContainer\";\r\nimport NoOption from \"common/select/NoOption\";\r\n\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\n\r\nimport Row from \"common/searchableList/Row\";\r\n\r\ninterface IProps extends WithStyles<typeof styles> {\r\n  label: string;\r\n  totItems: number;\r\n  searchableItems: IOption[];\r\n  searchString: string;\r\n  handleItemClick: (column: IOption) => (event: React.MouseEvent) => void;\r\n  handleChange: ChangeEventHandler<HTMLInputElement>;\r\n  handleClickClearIcon: () => void;\r\n}\r\n\r\nconst styles = createStyles({\r\n  list: {\r\n    height: \"100%\"\r\n  },\r\n  paper: {\r\n    padding: 10\r\n  }\r\n});\r\n\r\nconst noRowsRenderer = () => <NoOption />;\r\n\r\nconst rowRenderer = (\r\n  searchableItems: IOption[],\r\n  handleItemClick: (column: IOption) => (event: React.MouseEvent) => void\r\n) => ({ index, key, style }: ListRowProps) => {\r\n  const option = searchableItems[index];\r\n  const handleClick = handleItemClick(option);\r\n\r\n  return (\r\n    <Row key={key} style={style} option={option} handleClick={handleClick} />\r\n  );\r\n};\r\n\r\nconst SearchableList: SFC<IProps> = ({\r\n  classes,\r\n  label,\r\n  totItems,\r\n  searchableItems,\r\n  searchString,\r\n  handleItemClick,\r\n  handleChange,\r\n  handleClickClearIcon\r\n}) => (\r\n  <Paper className={classes.paper}>\r\n    <Typography variant=\"subheading\">{`${label} (${totItems})`}</Typography>\r\n    <List className={classes.list} component=\"div\" disablePadding>\r\n      <FormControl fullWidth>\r\n        <InputLabel>Search</InputLabel>\r\n        <Input\r\n          value={searchString}\r\n          onChange={handleChange}\r\n          disabled={searchableItems.length === 0}\r\n          endAdornment={\r\n            <InputAdornment position=\"end\">\r\n              <IconButton\r\n                aria-label=\"Clear\"\r\n                onClick={handleClickClearIcon}\r\n                onMouseDown={handleClickClearIcon}\r\n              >\r\n                {searchString ? <ClearIcon /> : null}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          }\r\n        />\r\n      </FormControl>\r\n      <AutoSizer disableHeight>\r\n        {({ width }) => (\r\n          <VirtualizedList\r\n            width={width}\r\n            height={245}\r\n            rowCount={searchableItems.length}\r\n            rowHeight={41}\r\n            rowRenderer={rowRenderer(searchableItems, handleItemClick)}\r\n            noRowsRenderer={noRowsRenderer}\r\n          />\r\n        )}\r\n      </AutoSizer>\r\n    </List>\r\n  </Paper>\r\n);\r\n\r\nexport default withStyles(styles)(SearchableList);\r\n","import React, { ChangeEvent, Component } from \"react\";\r\nimport { createSelector } from \"reselect\";\r\n\r\nimport { IOption } from \"common/select/SelectInputContainer\";\r\n\r\nimport SearchableList from \"common/searchableList/SearchableList\";\r\n\r\ninterface IProps {\r\n  label: string;\r\n  items: IOption[];\r\n  handleItemClick: (item: IOption) => (event: React.MouseEvent) => void;\r\n}\r\n\r\ninterface IState {\r\n  searchString: string;\r\n}\r\n\r\nconst filterTextSelector = (state: IState) => state.searchString;\r\nconst itemsSelector = (_: IState, props: IProps) => props.items;\r\n\r\nexport default class SearchableListContainer extends Component<IProps, IState> {\r\n  public state = {\r\n    searchString: \"\"\r\n  };\r\n\r\n  private filterList = createSelector(\r\n    filterTextSelector,\r\n    itemsSelector,\r\n    (filterText, items) => items.filter(item => item.label.includes(filterText))\r\n  );\r\n\r\n  public render() {\r\n    const { label, handleItemClick } = this.props;\r\n    const { searchString } = this.state;\r\n    const filteredList = this.filterList(this.state, this.props);\r\n\r\n    return (\r\n      <SearchableList\r\n        label={label}\r\n        totItems={filteredList.length}\r\n        searchableItems={filteredList}\r\n        searchString={searchString}\r\n        handleItemClick={handleItemClick}\r\n        handleChange={this.handleChange}\r\n        handleClickClearIcon={this.handleClickClearIcon}\r\n      />\r\n    );\r\n  }\r\n\r\n  private handleClickClearIcon = () => {\r\n    this.setState({\r\n      searchString: \"\"\r\n    });\r\n  };\r\n\r\n  private handleChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      searchString: event.target.value\r\n    });\r\n  };\r\n}\r\n","import React, { SFC } from \"react\";\r\n\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  withStyles,\r\n  WithStyles\r\n} from \"@material-ui/core/styles\";\r\n\r\nimport { IOption } from \"common/select/SelectInputContainer\";\r\nimport SearchableListContainer from \"common/searchableList/SearchableListContainer\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport ArrowLeftIcon from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport ArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\r\n\r\ninterface IProps extends WithStyles<typeof styles> {\r\n  availableColumns: IOption[];\r\n  selectedColumns: IOption[];\r\n  handleAddQueryColumn: (column: IOption) => (event: React.MouseEvent) => void;\r\n  handleRemoveQueryColumn: (\r\n    column: IOption\r\n  ) => (event: React.MouseEvent) => void;\r\n}\r\n\r\nconst styles = ({ spacing: { unit } }: Theme) =>\r\n  createStyles({\r\n    listContainer: {\r\n      position: \"relative\"\r\n    },\r\n    button: {\r\n      position: \"absolute\",\r\n      right: unit * 2,\r\n      top: unit * 2\r\n    }\r\n  });\r\n\r\nconst ColumnsSelector: SFC<IProps> = ({\r\n  classes,\r\n  availableColumns,\r\n  selectedColumns,\r\n  handleAddQueryColumn,\r\n  handleRemoveQueryColumn\r\n}) => (\r\n  <Grid container spacing={16}>\r\n    <Grid item xs={6} className={classes.listContainer}>\r\n      {availableColumns.length > 0 && (\r\n        <Button variant=\"outlined\" color=\"secondary\" className={classes.button}>\r\n          Add All Columns\r\n          <ArrowRightIcon />\r\n        </Button>\r\n      )}\r\n      <SearchableListContainer\r\n        label=\"Available Columns\"\r\n        items={availableColumns}\r\n        handleItemClick={handleAddQueryColumn}\r\n      />\r\n    </Grid>\r\n    <Grid item xs={6} className={classes.listContainer}>\r\n      {selectedColumns.length > 0 && (\r\n        <Button variant=\"outlined\" className={classes.button}>\r\n          <ArrowLeftIcon />\r\n          Remove All Columns\r\n        </Button>\r\n      )}\r\n      <SearchableListContainer\r\n        label=\"Selected Columns\"\r\n        items={selectedColumns}\r\n        handleItemClick={handleRemoveQueryColumn}\r\n      />\r\n    </Grid>\r\n  </Grid>\r\n);\r\n\r\nexport default withStyles(styles)(ColumnsSelector);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport { createSelector } from \"reselect\";\r\n\r\nimport { RootState } from \"rootReducer\";\r\nimport {\r\n  addQueryColumn,\r\n  removeQueryColumn,\r\n  QueryColumnAction\r\n} from \"workbench/actions\";\r\nimport {\r\n  getAvailableColumns,\r\n  getQueryColumns\r\n} from \"workbench/query/selectors\";\r\n\r\nimport { IColumn } from \"workbench/types\";\r\n// import { IUdsColumnDescriptionDtc } from \"workbench/query/types\";\r\nimport { IOption } from \"common/select/SelectInputContainer\";\r\n\r\nimport ColumnsSelector from \"workbench/query/columnSelector/ColumnsSelector\";\r\n\r\ninterface IOwnProps {\r\n  elementId: number;\r\n}\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n  ReturnType<typeof mapDispatchToProps> &\r\n  IOwnProps;\r\n\r\nconst availableColumnsSelector = (props: Props) => props.availableColumns;\r\nconst selectedColumnsSelector = (props: Props) => props.selectedColumns;\r\n\r\nclass ColumnsSelectorContainer extends Component<Props> {\r\n  private availableColumnOptions = createSelector(\r\n    availableColumnsSelector,\r\n    availableColumns =>\r\n      availableColumns.map<IOption>(column => ({\r\n        label: column.Label,\r\n        value: column.ColumnName\r\n      }))\r\n  );\r\n\r\n  private selectedColumnOptions = createSelector(\r\n    selectedColumnsSelector,\r\n    selectedColumns =>\r\n      selectedColumns.map<IOption>(column => ({\r\n        label: column.Label,\r\n        value: column.ColumnName\r\n      }))\r\n  );\r\n\r\n  public render() {\r\n    return (\r\n      <ColumnsSelector\r\n        availableColumns={this.availableColumnOptions(this.props)}\r\n        selectedColumns={this.selectedColumnOptions(this.props)}\r\n        handleAddQueryColumn={this.handleAddQueryColumn}\r\n        handleRemoveQueryColumn={this.handleRemoveQueryColumn}\r\n      />\r\n    );\r\n  }\r\n\r\n  private handleAddQueryColumn = ({ value, label }: IOption) => (\r\n    _: React.MouseEvent\r\n  ) => {\r\n    const { elementId, dispatchAddQueryColumn } = this.props;\r\n    const queryColumn = {\r\n      ColumnName: value,\r\n      Label: label,\r\n      Aggregation: \"None\"\r\n    };\r\n    dispatchAddQueryColumn(elementId, queryColumn);\r\n  };\r\n\r\n  private handleRemoveQueryColumn = ({ value }: IOption) => (\r\n    _: React.MouseEvent\r\n  ) => {\r\n    const { elementId, dispatchRemoveQueryColumn } = this.props;\r\n    dispatchRemoveQueryColumn(elementId, value);\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  availableColumns: getAvailableColumns(state),\r\n  selectedColumns: getQueryColumns(state)\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<QueryColumnAction>) => ({\r\n  dispatchAddQueryColumn: (elementId: number, column: IColumn) =>\r\n    dispatch(addQueryColumn(elementId, column)),\r\n  dispatchRemoveQueryColumn: (elementId: number, columnName: string) =>\r\n    dispatch(removeQueryColumn(elementId, columnName))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ColumnsSelectorContainer);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\n\r\nimport { RootState } from \"rootReducer\";\r\nimport { DATA_TYPES } from \"workbench/utils\";\r\nimport {\r\n  addQueryConstraint,\r\n  updateQueryConstraintType,\r\n  // updateQueryConstraintValues,\r\n  removeQueryConstraint,\r\n  QueryConstraintAction\r\n} from \"workbench/actions\";\r\nimport {\r\n  filterCapabilitiesRequest,\r\n  FilterCapabilitiesAction\r\n} from \"workbench/query/actions\";\r\nimport {\r\n  getQueryConstraints\r\n  // getConstraintTargets\r\n} from \"workbench/query/selectors\";\r\n\r\nimport ConstraintSelector from \"workbench/query/constraintSelector/ConstraintSelector\";\r\n\r\ninterface IOwnProps {\r\n  elementId: number;\r\n}\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n  ReturnType<typeof mapDispatchToProps> &\r\n  IOwnProps;\r\n\r\nclass ConstraintSelectorContainer extends Component<Props> {\r\n  public componentDidMount() {\r\n    this.props.dispatchFilterCapabilitiesRequest();\r\n  }\r\n\r\n  public render() {\r\n    const {\r\n      queryConstraints,\r\n      filterCapabilities\r\n      // contraintTargets\r\n    } = this.props;\r\n\r\n    return (\r\n      <div>ConstraintSelector</div>\r\n      // <ConstraintSelector\r\n      //   queryConstraints={queryConstraints}\r\n      //   filterCapabilities={filterCapabilities}\r\n      //   // contraintTargets={contraintTargets}\r\n      //   // handledAddQueryConstraint={this.handledAddQueryConstraint}\r\n      //   handledUpdateQueryConstraintType={this.handledUpdateQueryConstraintType}\r\n      //   // handledUpdateQueryConstraintValues={\r\n      //   //   this.handledUpdateQueryConstraintValues\r\n      //   // }\r\n      //   handledRemoveQueryConstraint={this.handledRemoveQueryConstraint}\r\n      // />\r\n    );\r\n  }\r\n\r\n  // private handledAddQueryConstraint = (\r\n  //   selectedConstraintTarget: IContraintTarget\r\n  // ) => {\r\n  //   const {\r\n  //     elementId,\r\n  //     queryConstraints,\r\n  //     dispatchAddQueryConstraint,\r\n  //     filterCapabilities\r\n  //   } = this.props;\r\n  //   // For a new constraint default the filterType to the first value\r\n  //   // of filter capabilities for the selected dataType.\r\n  //   const constraintTarget = {\r\n  //     ...selectedConstraintTarget,\r\n  //     FilterType: filterCapabilities[selectedConstraintTarget.DataType][0].Type\r\n  //   };\r\n\r\n  //   dispatchAddQueryConstraint(\r\n  //     elementId,\r\n  //     queryConstraints.length,\r\n  //     constraintTarget\r\n  //   );\r\n  // };\r\n\r\n  private handledUpdateQueryConstraintType = (constraintId: number) => (\r\n    event: React.ChangeEvent<HTMLSelectElement>\r\n  ) => {\r\n    const { elementId, dispatchUpdateQueryConstraintType } = this.props;\r\n\r\n    dispatchUpdateQueryConstraintType(elementId, constraintId, event.target\r\n      .value as DATA_TYPES);\r\n  };\r\n\r\n  // private handledUpdateQueryConstraintValues = (\r\n  //   constraintId: number,\r\n  //   dataType: DATA_TYPES\r\n  // ) => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n  //   const { elementId, dispatchUpdateQueryConstraintValues } = this.props;\r\n\r\n  //   const valuesObj = getConstraintVectorValue(dataType, event.target.value);\r\n\r\n  //   dispatchUpdateQueryConstraintValues(\r\n  //     elementId,\r\n  //     constraintId,\r\n  //     valuesObj.vectorValues\r\n  //   );\r\n  // };\r\n\r\n  private handledRemoveQueryConstraint = (constraintId: number) => () => {\r\n    const { elementId, dispatchRemoveQueryConstraint } = this.props;\r\n\r\n    dispatchRemoveQueryConstraint(elementId, constraintId);\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  queryConstraints: getQueryConstraints(state),\r\n  filterCapabilities: state.queryConfigReducer.filterCapabilities\r\n  // contraintTargets: getConstraintTargets(state)\r\n});\r\n\r\nconst mapDispatchToProps = (\r\n  dispatch: Dispatch<FilterCapabilitiesAction | QueryConstraintAction>\r\n) => ({\r\n  dispatchFilterCapabilitiesRequest: () =>\r\n    dispatch(filterCapabilitiesRequest()),\r\n  dispatchAddQueryConstraint: (\r\n    elementId: number,\r\n    constraintId: number,\r\n    constraintTarget: any\r\n  ) => dispatch(addQueryConstraint(elementId, constraintId, constraintTarget)),\r\n  dispatchUpdateQueryConstraintType: (\r\n    elementId: number,\r\n    constraintId: number,\r\n    constraintType: DATA_TYPES\r\n  ) =>\r\n    dispatch(\r\n      updateQueryConstraintType(elementId, constraintId, constraintType)\r\n    ),\r\n  // dispatchUpdateQueryConstraintValues: (\r\n  //   elementId: number,\r\n  //   constraintId: number,\r\n  //   constraintValues: any[]\r\n  // ) =>\r\n  //   dispatch(\r\n  //     updateQueryConstraintValues(elementId, constraintId, constraintValues)\r\n  //   ),\r\n  dispatchRemoveQueryConstraint: (elementId: number, constraintId: number) =>\r\n    dispatch(removeQueryConstraint(elementId, constraintId))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ConstraintSelectorContainer);\r\n","import React, { SFC } from \"react\";\r\n\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  withStyles,\r\n  WithStyles\r\n} from \"@material-ui/core/styles\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\ninterface IProps extends WithStyles<typeof styles> {\r\n  currentStep: number;\r\n  completedSteps: boolean[];\r\n  dispatchCloseConfig: () => void;\r\n  dispatchGoToStep: (stepIndex: number) => void;\r\n}\r\n\r\nconst styles = ({ spacing: { unit } }: Theme) =>\r\n  createStyles({\r\n    actionButtons: {\r\n      display: \"flex\",\r\n      justifyContent: \"flex-end\",\r\n      position: \"fixed\",\r\n      bottom: unit * 6,\r\n      right: 0\r\n    },\r\n    button: {\r\n      margin: unit\r\n    }\r\n  });\r\n\r\nconst ConfigActions: SFC<IProps> = ({\r\n  classes,\r\n  currentStep,\r\n  completedSteps,\r\n  dispatchCloseConfig,\r\n  dispatchGoToStep\r\n}) => {\r\n  const handleStep = (stepIndex: number) => () => {\r\n    return dispatchGoToStep(stepIndex);\r\n  };\r\n\r\n  return (\r\n    <Grid item xs={12} className={classes.actionButtons}>\r\n      <Button\r\n        onClick={dispatchCloseConfig}\r\n        variant=\"raised\"\r\n        className={classes.button}\r\n      >\r\n        Close\r\n      </Button>\r\n      <Button\r\n        disabled={currentStep === 0}\r\n        onClick={handleStep(currentStep - 1)}\r\n        variant=\"raised\"\r\n        color=\"secondary\"\r\n        className={classes.button}\r\n      >\r\n        Back\r\n      </Button>\r\n      <Button\r\n        disabled={!completedSteps[currentStep]}\r\n        onClick={handleStep(currentStep + 1)}\r\n        variant=\"raised\"\r\n        color=\"secondary\"\r\n        className={classes.button}\r\n      >\r\n        Next\r\n      </Button>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(ConfigActions);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\n\r\nimport {\r\n  closeQueryConfig,\r\n  goToStep,\r\n  QueryConfigAction,\r\n  IGoToStep\r\n} from \"workbench/query/actions\";\r\n\r\nimport ConfigActions from \"workbench/query/ConfigActions\";\r\n\r\ninterface IOwnProps {\r\n  currentStep: number;\r\n  completedSteps: boolean[];\r\n}\r\n\r\ntype Props = IOwnProps & ReturnType<typeof mapDispatchToProps>;\r\n\r\nclass ConfigActionsContainer extends Component<Props> {\r\n  public render() {\r\n    const {\r\n      currentStep,\r\n      completedSteps,\r\n      dispatchCloseQueryConfig,\r\n      dispatchGoToStep\r\n    } = this.props;\r\n\r\n    return (\r\n      <ConfigActions\r\n        currentStep={currentStep}\r\n        completedSteps={completedSteps}\r\n        dispatchCloseConfig={dispatchCloseQueryConfig}\r\n        dispatchGoToStep={dispatchGoToStep}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (\r\n  dispatch: Dispatch<QueryConfigAction | IGoToStep>\r\n) => ({\r\n  dispatchGoToStep: (step: number) => dispatch(goToStep(step)),\r\n  dispatchCloseQueryConfig: () => dispatch(closeQueryConfig())\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(ConfigActionsContainer);\r\n","import React, { SFC } from \"react\";\r\n\r\nimport { IQuery } from \"workbench/types\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport { BackgroundLoadingContainer } from \"common/loading\";\r\nimport HelperText from \"workbench/query/HelperText\";\r\nimport StepperHeaderContainer from \"workbench/query/StepperHeaderContainer\";\r\nimport SourceSelectorContainer from \"workbench/query/sourceSelector/SourceSelectorContainer\";\r\nimport ColumnsSelectorContainer from \"workbench/query/columnSelector/ColumnsSelectorContainer\";\r\nimport ConstraintSelectorContainer from \"workbench/query/constraintSelector/ConstraintSelectorContainer\";\r\nimport ConfigActionsContainer from \"workbench/query/ConfigActionsContainer\";\r\n\r\nfunction getStepContent(currentStep: number, selectedQuery: IQuery) {\r\n  if (selectedQuery.TargetDataViewId == null) {\r\n    throw new Error(\"TargetDataViewId cannot be null.\");\r\n  }\r\n\r\n  switch (currentStep) {\r\n    case 0:\r\n      return (\r\n        <SourceSelectorContainer\r\n          elementId={selectedQuery.ElementId}\r\n          targetDataViewId={selectedQuery.TargetDataViewId}\r\n        />\r\n      );\r\n\r\n    case 1:\r\n      return <ColumnsSelectorContainer elementId={selectedQuery.ElementId} />;\r\n\r\n    case 2:\r\n      return (\r\n        <ConstraintSelectorContainer elementId={selectedQuery.ElementId} />\r\n      );\r\n\r\n    default:\r\n      return \"Unknown step\";\r\n  }\r\n}\r\n\r\ninterface IProps {\r\n  isLoading: boolean;\r\n  selectedQuery: IQuery;\r\n  currentStep: number;\r\n  completedSteps: boolean[];\r\n}\r\n\r\nconst QueryConfig: SFC<IProps> = ({\r\n  isLoading,\r\n  selectedQuery,\r\n  currentStep,\r\n  completedSteps\r\n}) => (\r\n  <BackgroundLoadingContainer isLoading={isLoading}>\r\n    <StepperHeaderContainer\r\n      currentStep={currentStep}\r\n      completedSteps={completedSteps}\r\n    />\r\n    <HelperText currentStep={currentStep} />\r\n    <Grid item xs={12}>\r\n      {getStepContent(currentStep, selectedQuery)}\r\n    </Grid>\r\n    <ConfigActionsContainer\r\n      currentStep={currentStep}\r\n      completedSteps={completedSteps}\r\n    />\r\n  </BackgroundLoadingContainer>\r\n);\r\n\r\nexport default QueryConfig;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { RootState } from \"rootReducer\";\r\nimport { getQuery, getCompletedSteps } from \"workbench/query/selectors\";\r\n\r\nimport QueryConfig from \"workbench/query/QueryConfig\";\r\n\r\nclass QueryConfigContainer extends Component<\r\n  ReturnType<typeof mapStateToProps>\r\n> {\r\n  public render() {\r\n    const {\r\n      isLoading,\r\n      selectedQuery,\r\n      currentStep,\r\n      completedSteps\r\n    } = this.props;\r\n\r\n    return (\r\n      <QueryConfig\r\n        isLoading={isLoading}\r\n        selectedQuery={selectedQuery}\r\n        currentStep={currentStep}\r\n        completedSteps={completedSteps}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  isLoading: state.queryConfigReducer.isLoading,\r\n  selectedQuery: getQuery(state),\r\n  currentStep: state.queryConfigReducer.currentStep,\r\n  completedSteps: getCompletedSteps(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(QueryConfigContainer);\r\n","import React, { SFC } from \"react\";\r\n\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  withStyles,\r\n  WithStyles\r\n} from \"@material-ui/core/styles\";\r\n\r\nimport { ElementType } from \"sidebar/operators/operatorsData\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\n\r\nimport QueryConfigContainer from \"workbench/query/QueryConfigContainer\";\r\n\r\ninterface IProps extends WithStyles<typeof styles> {\r\n  elementType: ElementType;\r\n  isDrawerOpen: boolean;\r\n}\r\n\r\nconst styles = ({ spacing }: Theme) =>\r\n  createStyles({\r\n    paper: {\r\n      width: \"85%\",\r\n      marginTop: 48\r\n    },\r\n    form: {\r\n      position: \"relative\",\r\n      height: \"100%\",\r\n      padding: spacing.unit * 2,\r\n      overflow: \"auto\",\r\n      marginBottom: 48\r\n    }\r\n  });\r\n\r\nconst drawerByType = (elementType: ElementType) => {\r\n  switch (elementType) {\r\n    case ElementType.QUERY:\r\n      return <QueryConfigContainer />;\r\n    case ElementType.FILTER:\r\n      return \"TODO\";\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nconst ConfigSwitch: SFC<IProps> = ({ classes, elementType, isDrawerOpen }) => (\r\n  <Drawer classes={{ paper: classes.paper }} anchor=\"right\" open={isDrawerOpen}>\r\n    {isDrawerOpen && (\r\n      <form className={classes.form} noValidate autoComplete=\"off\">\r\n        <Grid container spacing={16} alignContent=\"stretch\">\r\n          {drawerByType(elementType)}\r\n        </Grid>\r\n      </form>\r\n    )}\r\n  </Drawer>\r\n);\r\n\r\nexport default withStyles(styles)(ConfigSwitch);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { RootState } from \"rootReducer\";\r\nimport { isDrawerOpen } from \"workbench/configSwitch/selectors\";\r\n\r\nimport ConfigSwitch from \"workbench/configSwitch/ConfigSwitch\";\r\n\r\nclass ConfigSwitchContainer extends Component<\r\n  ReturnType<typeof mapStateToProps>\r\n> {\r\n  public render() {\r\n    return <ConfigSwitch {...this.props} />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  elementType: state.configSwitchReducer.elementType,\r\n  isDrawerOpen: isDrawerOpen(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(ConfigSwitchContainer);\r\n","import {\r\n  LinkModel,\r\n  DiagramEngine,\r\n  PortModel,\r\n  DefaultLinkModel\r\n} from \"storm-react-diagrams\";\r\n\r\nexport default class WorkbenchPortModel extends PortModel {\r\n  private position: string;\r\n\r\n  constructor(pos: \"from\" | \"to\" = \"from\") {\r\n    super(pos, \"workbench\");\r\n    this.position = pos;\r\n  }\r\n\r\n  public serialize() {\r\n    return Object.assign(super.serialize(), {\r\n      position: this.position\r\n    });\r\n  }\r\n\r\n  public deSerialize(data: any, engine: DiagramEngine) {\r\n    super.deSerialize(data, engine);\r\n    this.position = data.position;\r\n  }\r\n\r\n  public link(port: PortModel): LinkModel {\r\n    const link = this.createLinkModel();\r\n    link.setSourcePort(this);\r\n    link.setTargetPort(port);\r\n\r\n    return link;\r\n  }\r\n\r\n  public createLinkModel(): LinkModel {\r\n    return new DefaultLinkModel();\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { PortWidget } from \"storm-react-diagrams\";\r\n\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  withStyles,\r\n  WithStyles\r\n} from \"@material-ui/core/styles\";\r\n\r\nimport QueryNodeModel from \"workbench/query/widget/QueryNodeModel\";\r\nimport { operatorsExtraInfo } from \"sidebar/operators/operatorsData\";\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport SettingsIcon from \"@material-ui/icons/SettingsApplications\";\r\n\r\ninterface IProps extends WithStyles<typeof styles> {\r\n  node: QueryNodeModel;\r\n}\r\n\r\nconst styles = ({\r\n  palette: {\r\n    background: { paper }\r\n  }\r\n}: Theme) =>\r\n  createStyles({\r\n    container: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\"\r\n    },\r\n    operatorContainer: {\r\n      display: \"flex\",\r\n      flexFlow: \"column\",\r\n      alignItems: \"center\",\r\n      borderRadius: 5,\r\n      border: \"1px solid #7b582d\",\r\n      padding: \"0px 5px 0px 5px\",\r\n      width: 165,\r\n      backgroundColor: paper\r\n    },\r\n    titleContainer: {\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      marginBottom: 5\r\n    },\r\n    avatar: {\r\n      marginRight: 10,\r\n      width: 25,\r\n      height: 25\r\n    },\r\n    list: {\r\n      overflow: \"auto\",\r\n      maxHeight: 150,\r\n      padding: 0,\r\n      width: 150\r\n    },\r\n    listItem: {\r\n      padding: 0\r\n    },\r\n    itemIcon: {\r\n      width: 10,\r\n      height: 10,\r\n      marginRight: 5\r\n    },\r\n    primary: {\r\n      whiteSpace: \"nowrap\",\r\n      overflow: \"hidden\",\r\n      textOverflow: \"ellipsis\"\r\n    },\r\n    topPort: {\r\n      position: \"relative\",\r\n      top: -9,\r\n      backgroundColor: \"#ccc\",\r\n      zIndex: -1\r\n    },\r\n    bottomPort: {\r\n      position: \"relative\",\r\n      top: 9,\r\n      backgroundColor: \"#ccc\",\r\n      borderRadius: 15,\r\n      zIndex: -1\r\n    }\r\n  });\r\n\r\nconst handleWheel = (event: React.WheelEvent) => {\r\n  event.stopPropagation();\r\n};\r\n\r\nconst QueryNodeWidget: React.SFC<IProps> = ({ classes, node }) => {\r\n  const { Label: QueyLabel, Columns } = node.getQueryInfo();\r\n  const { backgroundColor, IconComponent } = operatorsExtraInfo.QUERY;\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes.operatorContainer}>\r\n        <div className={classes.topPort}>\r\n          <PortWidget name=\"to\" node={node} />\r\n        </div>\r\n        <div className={classes.titleContainer}>\r\n          <Avatar className={classes.avatar} style={{ backgroundColor }}>\r\n            {React.createElement(IconComponent)}\r\n          </Avatar>\r\n          <Typography variant=\"subheading\" noWrap>\r\n            {QueyLabel}\r\n          </Typography>\r\n        </div>\r\n        <div>\r\n          <Typography variant=\"body2\" noWrap>\r\n            Columns\r\n          </Typography>\r\n          <Divider />\r\n          <List className={classes.list} onWheel={handleWheel}>\r\n            {Columns.map(({ Label: ColumnLabel, ColumnName }) => (\r\n              <ListItem key={ColumnName} className={classes.listItem} dense>\r\n                <ListItemIcon className={classes.itemIcon}>\r\n                  <SettingsIcon />\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  className={classes.listItem}\r\n                  classes={{ primary: classes.primary }}\r\n                  primary={ColumnLabel}\r\n                />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </div>\r\n        <div className={classes.bottomPort}>\r\n          <PortWidget name=\"from\" node={node} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(QueryNodeWidget);\r\n","import React from \"react\";\r\nimport { PortWidget } from \"storm-react-diagrams\";\r\n\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  withStyles,\r\n  WithStyles\r\n} from \"@material-ui/core/styles\";\r\n\r\nimport FilterNodeModel from \"workbench/filter/FilterNodeModel\";\r\nimport { operatorsExtraInfo } from \"sidebar/operators/operatorsData\";\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\ninterface IProps extends WithStyles<typeof styles> {\r\n  node: FilterNodeModel;\r\n}\r\n\r\nconst styles = ({\r\n  palette: {\r\n    background: { paper }\r\n  }\r\n}: Theme) =>\r\n  createStyles({\r\n    container: {\r\n      display: \"flex\",\r\n      flexFlow: \"column\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      borderRadius: \"0px 0px 80px 80px\",\r\n      border: \"1px solid #2c5367\",\r\n      width: 155,\r\n      height: 85,\r\n      backgroundColor: paper\r\n    },\r\n    body: {\r\n      display: \"flex\",\r\n      maxWidth: 130,\r\n      marginBottom: 5\r\n    },\r\n    avatar: {\r\n      width: 25,\r\n      height: 25,\r\n      marginRight: 3\r\n    },\r\n    label: {\r\n      marginTop: 10\r\n    },\r\n    filterType: {\r\n      textAlign: \"center\"\r\n    },\r\n    topPort: {\r\n      position: \"relative\",\r\n      top: -11,\r\n      backgroundColor: \"#ccc\",\r\n      zIndex: -1\r\n    },\r\n    bottomPort: {\r\n      position: \"relative\",\r\n      top: 11,\r\n      backgroundColor: \"#ccc\",\r\n      borderRadius: 15,\r\n      zIndex: -1\r\n    }\r\n  });\r\n\r\nconst FilterNodeWidget: React.SFC<IProps> = ({ classes, node }) => {\r\n  const { Label, FilterType } = node.getFilterInfo();\r\n  const { backgroundColor, IconComponent } = operatorsExtraInfo.FILTER;\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes.topPort}>\r\n        <PortWidget name=\"to\" node={node} />\r\n      </div>\r\n      <div className={classes.body}>\r\n        <Avatar className={classes.avatar} style={{ backgroundColor }}>\r\n          {React.createElement(IconComponent)}\r\n        </Avatar>\r\n        <Typography variant=\"subheading\" noWrap>\r\n          {Label}\r\n        </Typography>\r\n      </div>\r\n      <Typography className={classes.filterType} variant=\"body2\" noWrap>\r\n        {FilterType}\r\n      </Typography>\r\n      <div className={classes.bottomPort}>\r\n        <PortWidget name=\"from\" node={node} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(FilterNodeWidget);\r\n","import \"storm-react-diagrams/dist/style.min.css\";\r\n\r\nimport React, { SFC } from \"react\";\r\nimport { DiagramEngine, DiagramWidget } from \"storm-react-diagrams\";\r\n\r\nimport { createStyles, withStyles, WithStyles } from \"@material-ui/core/styles\";\r\n\r\ninterface IProps extends WithStyles<typeof styles> {\r\n  diagramEngine: DiagramEngine;\r\n  handleDrop: (event: React.DragEvent<HTMLDivElement>) => void;\r\n  handleDragOver: (event: React.DragEvent<HTMLDivElement>) => void;\r\n}\r\n\r\nconst styles = createStyles({\r\n  canvasContainer: {\r\n    height: \"100%\",\r\n    width: \"100%\"\r\n  },\r\n  canvas: {\r\n    height: \"100%\",\r\n    width: \"100%\"\r\n  }\r\n});\r\n\r\nconst Workbench: SFC<IProps> = ({\r\n  classes,\r\n  diagramEngine,\r\n  handleDragOver,\r\n  handleDrop\r\n}) => (\r\n  <div\r\n    className={classes.canvasContainer}\r\n    onDrop={handleDrop}\r\n    onDragOver={handleDragOver}\r\n  >\r\n    <DiagramWidget\r\n      className={classes.canvas}\r\n      diagramEngine={diagramEngine}\r\n      maxNumberPointsPerLink={0}\r\n      allowLooseLinks={false}\r\n    />\r\n  </div>\r\n);\r\n\r\nexport default withStyles(styles)(Workbench);\r\n","import \"storm-react-diagrams/dist/style.min.css\";\r\n\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport { match as Match } from \"react-router\";\r\nimport { DiagramModel, DiagramEngine, NodeModel } from \"storm-react-diagrams\";\r\n\r\nimport { RootState } from \"rootReducer\";\r\nimport {\r\n  sessionRequest,\r\n  addQuery,\r\n  SessionAction,\r\n  QueryAction\r\n} from \"workbench/actions\";\r\nimport { ElementType } from \"sidebar/operators/operatorsData\";\r\n\r\nimport WidgetPortFactory from \"workbench/WidgetPortFactory\";\r\nimport WidgetPortModel from \"workbench/WidgetPortModel\";\r\n\r\nimport QueryNodeFactory from \"workbench/query/widget/QueryNodeFactory\";\r\nimport QueryNodeModel from \"workbench/query/widget/QueryNodeModel\";\r\n\r\nimport FilterNodeFactory from \"workbench/filter/FilterNodeFactory\";\r\nimport FilterNodeModel from \"workbench/filter/FilterNodeModel\";\r\n\r\nimport { LoadingContainer } from \"common/loading\";\r\nimport Canvas from \"workbench/Canvas\";\r\n\r\ninterface IRouterProps {\r\n  match: Match<{ id: string }>;\r\n}\r\n\r\ntype Props = ReturnType<typeof mapDispatchToProps> &\r\n  ReturnType<typeof mapStateToProps> &\r\n  IRouterProps;\r\n\r\ninterface ILocalState {\r\n  node: NodeModel;\r\n}\r\n\r\nclass CanvasContainer extends Component<Props, ILocalState> {\r\n  private diagramEngine: DiagramEngine;\r\n  private activeModel: DiagramModel;\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.diagramEngine = new DiagramEngine();\r\n    this.diagramEngine.installDefaultFactories();\r\n\r\n    this.diagramEngine.registerPortFactory(\r\n      new WidgetPortFactory(new WidgetPortModel())\r\n    );\r\n    this.diagramEngine.registerNodeFactory(new QueryNodeFactory());\r\n    this.diagramEngine.registerNodeFactory(new FilterNodeFactory());\r\n\r\n    this.activeModel = new DiagramModel();\r\n    this.diagramEngine.setDiagramModel(this.activeModel);\r\n  }\r\n\r\n  public componentDidMount() {\r\n    const { match } = this.props;\r\n    const dataViewId = match.params.id === \"new\" ? undefined : match.params.id;\r\n\r\n    this.props.dispatchSessionRequest(dataViewId);\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: Props) {\r\n    const currentSession = this.props.session;\r\n    if (currentSession == null) {\r\n      return;\r\n    }\r\n\r\n    const prevSession = prevProps.session;\r\n    if (\r\n      prevSession == null ||\r\n      currentSession.SessionId !== prevSession.SessionId\r\n    ) {\r\n      const queryNodes = Object.keys(this.props.queries).map(\r\n        id => new QueryNodeModel(this.props.queries[id])\r\n      );\r\n\r\n      const filterNodes = Object.keys(this.props.filters).map(\r\n        id => new FilterNodeModel(this.props.filters[id])\r\n      );\r\n\r\n      this.activeModel.addAll(...queryNodes);\r\n      this.activeModel.addAll(...filterNodes);\r\n\r\n      const links = [];\r\n      for (const id of Object.keys(this.props.connections)) {\r\n        const connection = this.props.connections[id];\r\n\r\n        const nodeFrom = this.activeModel.getNode(\r\n          connection.FromElementId.toString()\r\n        );\r\n\r\n        const nodeTo = this.activeModel.getNode(\r\n          connection.ToElementId.toString()\r\n        );\r\n\r\n        if (nodeFrom == null || nodeTo == null) {\r\n          return;\r\n        }\r\n\r\n        const portFrom = nodeFrom.getPort(\"from\") as WidgetPortModel;\r\n        const portTo = nodeTo.getPort(\"to\") as WidgetPortModel;\r\n\r\n        const link = portFrom.link(portTo);\r\n\r\n        links.push(link);\r\n      }\r\n\r\n      this.activeModel.addAll(...links);\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    const {\r\n      isLoading\r\n      // dispatchAddQuery,\r\n      // session,\r\n      // graph,\r\n      // queries,\r\n      // connections,\r\n      // filters\r\n    } = this.props;\r\n\r\n    return (\r\n      <LoadingContainer isLoading={isLoading}>\r\n        <Canvas\r\n          diagramEngine={this.diagramEngine}\r\n          handleDragOver={this.handleDragOver}\r\n          handleDrop={this.handleDrop}\r\n          // session={session}\r\n          // queries={queries}\r\n          // connections={connections}\r\n          // filters={filters}\r\n        />\r\n      </LoadingContainer>\r\n    );\r\n  }\r\n\r\n  private handleDragOver = (event: React.DragEvent<HTMLDivElement>) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  private handleDrop = (event: React.DragEvent<HTMLDivElement>) => {\r\n    const { graph, dispatchAddQuery } = this.props;\r\n\r\n    if (graph == null) {\r\n      throw new Error(\"Graph cannot be null.\");\r\n    }\r\n\r\n    const operatorServiceId = event.dataTransfer.getData(\"ELEMENT\");\r\n    const points = this.diagramEngine.getRelativeMousePoint(event);\r\n\r\n    switch (operatorServiceId) {\r\n      case ElementType.QUERY:\r\n        dispatchAddQuery(graph.NextElementId, points.x, points.y);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    // const data = JSON.parse(event.dataTransfer.getData(\"ELEMENT\"));\r\n    // const points = this.diagramEngine.getRelativeMousePoint(event);\r\n    // const node = new QueryNodeModel(\"Pippo\", points.x, points.y);\r\n    // this.diagramEngine.getDiagramModel().addNode(node);\r\n    // // Updating the state triggers a re render.\r\n    // this.setState({\r\n    //   node\r\n    // });\r\n  };\r\n}\r\n\r\nconst mapStateToProps = ({ sessionReducer: { ...state } }: RootState) => state;\r\n\r\nconst mapDispatchToProps = (\r\n  dispatch: Dispatch<SessionAction | QueryAction>\r\n) => ({\r\n  dispatchSessionRequest: (dataViewId?: string) => {\r\n    dispatch(sessionRequest(dataViewId));\r\n  },\r\n  dispatchAddQuery: (elementId: number, x: number, y: number) =>\r\n    dispatch(addQuery(elementId, x, y))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CanvasContainer);\r\n","import { PortModel, AbstractPortFactory } from \"storm-react-diagrams\";\r\n\r\nexport default class DiagramPortFactory extends AbstractPortFactory {\r\n  private portModel: PortModel;\r\n\r\n  constructor(portModel: PortModel) {\r\n    super(\"workbench\");\r\n    this.portModel = portModel;\r\n  }\r\n\r\n  public getNewInstance(initialConfig?: any): PortModel {\r\n    return this.portModel;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  AbstractNodeFactory,\r\n  DiagramEngine,\r\n  NodeModel\r\n} from \"storm-react-diagrams\";\r\n\r\nimport QueryNodeModel from \"workbench/query/widget/QueryNodeModel\";\r\nimport QueryNodeWidget from \"workbench/query/widget/QueryNodeWidget\";\r\n\r\nexport default class QueryNodeFactory extends AbstractNodeFactory {\r\n  constructor() {\r\n    super(\"query\");\r\n  }\r\n\r\n  public generateReactWidget(\r\n    _: DiagramEngine,\r\n    node: QueryNodeModel\r\n  ): JSX.Element {\r\n    return <QueryNodeWidget node={node} />;\r\n  }\r\n\r\n  public getNewInstance() {\r\n    return new NodeModel();\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  AbstractNodeFactory,\r\n  DiagramEngine,\r\n  NodeModel\r\n} from \"storm-react-diagrams\";\r\n\r\nimport FilterNodeModel from \"workbench/filter/FilterNodeModel\";\r\nimport FilterNodeWidget from \"workbench/filter/FilterNodeWidget\";\r\n\r\nexport default class FilterNodeFactory extends AbstractNodeFactory {\r\n  constructor() {\r\n    super(\"filter\");\r\n  }\r\n\r\n  public generateReactWidget(\r\n    _: DiagramEngine,\r\n    node: FilterNodeModel\r\n  ): JSX.Element {\r\n    return <FilterNodeWidget node={node} />;\r\n  }\r\n\r\n  public getNewInstance() {\r\n    return new NodeModel();\r\n  }\r\n}\r\n","import { NodeModel } from \"storm-react-diagrams\";\r\n\r\nimport WidgetPortModel from \"workbench/WidgetPortModel\";\r\nimport { IQuery } from \"workbench/types\";\r\n\r\nexport default class QueryNodeModel extends NodeModel {\r\n  private queryInfo: IQuery;\r\n\r\n  constructor(queryInfo: IQuery) {\r\n    super(\"query\", queryInfo.ElementId.toString());\r\n\r\n    this.addPort(new WidgetPortModel(\"from\"));\r\n    this.addPort(new WidgetPortModel(\"to\"));\r\n    this.setPosition(queryInfo.LayoutX, queryInfo.LayoutY);\r\n\r\n    this.queryInfo = queryInfo;\r\n  }\r\n\r\n  public getQueryInfo() {\r\n    return this.queryInfo;\r\n  }\r\n}\r\n","import { NodeModel } from \"storm-react-diagrams\";\r\n\r\nimport WidgetPortModel from \"workbench/WidgetPortModel\";\r\nimport { IInteractiveFilter } from \"workbench/types\";\r\n\r\nexport default class FilterNodeModel extends NodeModel {\r\n  private filterInfo: IInteractiveFilter;\r\n\r\n  constructor(filterInfo: IInteractiveFilter) {\r\n    super(\"filter\", filterInfo.ElementId.toString());\r\n\r\n    this.addPort(new WidgetPortModel(\"from\"));\r\n    this.addPort(new WidgetPortModel(\"to\"));\r\n    this.setPosition(filterInfo.LayoutX, filterInfo.LayoutY);\r\n\r\n    this.filterInfo = filterInfo;\r\n  }\r\n\r\n  public getFilterInfo() {\r\n    return this.filterInfo;\r\n  }\r\n}\r\n","import React, { SFC, Fragment } from \"react\";\r\nimport { match as Match } from \"react-router\";\r\n\r\nimport { createStyles, withStyles, WithStyles } from \"@material-ui/core/styles\";\r\n\r\nimport WorkbenchToolbar from \"workbench/toolBar/WorkbenchToolbar\";\r\nimport ConfigSwitchContainer from \"workbench/configSwitch/ConfigSwitchContainer\";\r\nimport CanvasContainer from \"workbench/CanvasContainer\";\r\n\r\ninterface IProps extends WithStyles<typeof styles> {\r\n  match: Match<{ id: string }>;\r\n}\r\n\r\nconst styles = createStyles({\r\n  workbench: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    border: \"3px solid #ccc\",\r\n    backgroundColor: \"#ccc\"\r\n  },\r\n  canvasContainer: {\r\n    borderRadius: 5,\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    backgroundColor: \"#3c3c3c\",\r\n    backgroundImage: `linear-gradient(\r\n      0deg,\r\n      transparent 24%,\r\n      rgba(255, 255, 255, 0.05) 25%,\r\n      rgba(255, 255, 255, 0.05) 26%,\r\n      transparent 27%,\r\n      transparent 74%,\r\n      rgba(255, 255, 255, 0.05) 75%,\r\n      rgba(255, 255, 255, 0.05) 76%,\r\n      transparent 77%,\r\n      transparent\r\n    ),\r\n    linear-gradient(\r\n      90deg,\r\n      transparent 24%,\r\n      rgba(255, 255, 255, 0.05) 25%,\r\n      rgba(255, 255, 255, 0.05) 26%,\r\n      transparent 27%,\r\n      transparent 74%,\r\n      rgba(255, 255, 255, 0.05) 75%,\r\n      rgba(255, 255, 255, 0.05) 76%,\r\n      transparent 77%,\r\n      transparent\r\n    )`,\r\n    backgroundSize: \"50px 50px\"\r\n  }\r\n});\r\n\r\nconst Workbench: SFC<IProps> = ({ classes, match }) => (\r\n  <div className={classes.workbench}>\r\n    <WorkbenchToolbar />\r\n    <ConfigSwitchContainer />\r\n    <div className={classes.canvasContainer}>\r\n      <CanvasContainer match={match} />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default withStyles(styles)(Workbench);\r\n"],"sourceRoot":""}
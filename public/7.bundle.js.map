{"version":3,"sources":["webpack:///./src/pagebuilder/Pagebuilder.tsx","webpack:///./src/pagebuilder/PagebuilderContainer.tsx"],"names":["pagebuilder_Pagebuilder","Object","styles","theme","bottomNavContainer","position","bottom","bodyContainer","padding","actionRoot","&$selected","color","palette","secondary","main","selected","classes","handleChange","value","react_default","a","createElement","Fragment","Grid_default","container","className","item","xs","BottomNavigation_default","onChange","showLabels","BottomNavigationAction_default","root","label","icon","icons","__webpack_require__","d","__webpack_exports__","PagebuilderContainer_PagebuilderContainer","react","[object Object]","this","state","_","setState"],"mappings":"4eAoEe,IAAAA,EAAAC,OAAAC,EAAA,WAAAD,CAhDCE,GACdF,OAAAC,EAAA,aAAAD,CAAa,CACXG,mBAAoB,CAClBC,SAAU,QACVC,OAAQ,GAEVC,cAAe,CACbC,QAAS,IAEXC,WAAY,CACVC,aAAc,CACZC,MAAOR,EAAMS,QAAQC,UAAUC,OAGnCC,SAAU,KAkCC,CA/BkB,EAAGC,UAASC,eAAcC,WACzDC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACE,EAAAH,EAAI,CAACI,WAAS,EAACC,UAAWT,EAAQT,eACjCY,EAAAC,EAAAC,cAACE,EAAAH,EAAI,CAACM,MAAI,EAACC,GAAI,IACF,IAAVT,GAAe,0BACL,IAAVA,GAAe,yBAGpBC,EAAAC,EAAAC,cAAA,OAAKI,UAAWT,EAAQZ,oBACtBe,EAAAC,EAAAC,cAACO,EAAAR,EAAgB,CAACF,MAAOA,EAAOW,SAAUZ,EAAca,YAAU,GAChEX,EAAAC,EAAAC,cAACU,EAAAX,EAAsB,CACrBJ,QAAS,CACPgB,KAAMhB,EAAQP,WACdM,SAAUC,EAAQD,UAEpBkB,MAAM,WACNC,KAAMf,EAAAC,EAAAC,cAACc,EAAA,EAAa,QAEtBhB,EAAAC,EAAAC,cAACU,EAAAX,EAAsB,CACrBJ,QAAS,CACPgB,KAAMhB,EAAQP,WACdM,SAAUC,EAAQD,UAEpBkB,MAAM,YACNC,KAAMf,EAAAC,EAAAC,cAACc,EAAA,EAAY,YC7D7BC,EAAAC,EAAAC,EAAA,4BAAAC,IAQe,MAAMA,UAA6BC,EAAA,UAAlDC,kCACSC,KAAAC,MAAQ,CACbzB,MAAO,GASDwB,KAAAzB,aAAe,EAAC2B,EAAoB1B,KAC1CwB,KAAKG,SAAS,CAAE3B,YAPXuB,SACL,MAAMvB,MAAEA,GAAUwB,KAAKC,MAEvB,OAAOxB,EAAAC,EAAAC,cAACrB,EAAW,CAACkB,MAAOA,EAAOD,aAAcyB,KAAKzB","file":"7.bundle.js","sourcesContent":["import React, { SFC, ChangeEvent } from \"react\";\r\n\r\nimport {\r\n  createStyles,\r\n  withStyles,\r\n  WithStyles,\r\n  Theme\r\n} from \"@material-ui/core/styles\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\r\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\r\n\r\nimport { DashboardIcon, DataViewIcon } from \"common/icons\";\r\n\r\ninterface IProps extends WithStyles<typeof styles> {\r\n  handleChange: (_: ChangeEvent<{}>, value: number) => void;\r\n  value: number;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    bottomNavContainer: {\r\n      position: \"fixed\",\r\n      bottom: 0\r\n    },\r\n    bodyContainer: {\r\n      padding: 25\r\n    },\r\n    actionRoot: {\r\n      \"&$selected\": {\r\n        color: theme.palette.secondary.main\r\n      }\r\n    },\r\n    selected: {}\r\n  });\r\n\r\nconst Pagebuilder: SFC<IProps> = ({ classes, handleChange, value }) => (\r\n  <>\r\n    <Grid container className={classes.bodyContainer}>\r\n      <Grid item xs={12}>\r\n        {value === 0 && \"Pagebuilder Placeholder\"}\r\n        {value === 1 && \"Dataview Placeholder\"}\r\n      </Grid>\r\n    </Grid>\r\n    <div className={classes.bottomNavContainer}>\r\n      <BottomNavigation value={value} onChange={handleChange} showLabels>\r\n        <BottomNavigationAction\r\n          classes={{\r\n            root: classes.actionRoot,\r\n            selected: classes.selected\r\n          }}\r\n          label=\"Dataview\"\r\n          icon={<DashboardIcon />}\r\n        />\r\n        <BottomNavigationAction\r\n          classes={{\r\n            root: classes.actionRoot,\r\n            selected: classes.selected\r\n          }}\r\n          label=\"Workbench\"\r\n          icon={<DataViewIcon />}\r\n        />\r\n      </BottomNavigation>\r\n    </div>\r\n  </>\r\n);\r\n\r\nexport default withStyles(styles)(Pagebuilder);\r\n","import React, { Component, ChangeEvent } from \"react\";\r\n\r\nimport Pagebuilder from \"pagebuilder/Pagebuilder\";\r\n\r\ninterface IState {\r\n  value: number;\r\n}\r\n\r\nexport default class PagebuilderContainer extends Component<{}, IState> {\r\n  public state = {\r\n    value: 0\r\n  };\r\n\r\n  public render() {\r\n    const { value } = this.state;\r\n\r\n    return <Pagebuilder value={value} handleChange={this.handleChange} />;\r\n  }\r\n\r\n  private handleChange = (_: ChangeEvent<{}>, value: number) => {\r\n    this.setState({ value });\r\n  };\r\n}\r\n"],"sourceRoot":""}